import{_ as t,c as d,o as e,a2 as o}from"./chunks/framework.Bc4oNHcE.js";const p=JSON.parse('{"title":"03概念","description":"","frontmatter":{"layout":"doc","title":"03概念"},"headers":[],"relativePath":"database/MongoDB/03概念.md","filePath":"database/MongoDB/03概念.md"}'),r={name:"database/MongoDB/03概念.md"},a=o('<h1 id="mongodb-概念" tabindex="-1">mongodb 概念 <a class="header-anchor" href="#mongodb-概念" aria-label="Permalink to &quot;mongodb 概念&quot;">​</a></h1><blockquote><p>数据库 &quot;show dbs&quot; 命令可以显示所有数据的列表 文档 Document 文档是一组键值(key-value)对(即 BSON)。MongoDB 的文档不需要设置相同的字段，并且相同的字段不需要相同的数据类型，这与关系型数据库有很大的区别 集合 MongoDB 文档组</p></blockquote><p>数据类型</p><table><thead><tr><th>数据类型</th><th>描述</th></tr></thead><tbody><tr><td>String</td><td>字符串。存储数据常用的数据类型。在 MongoDB 中，UTF-8 编码的字符串才是合法的</td></tr><tr><td>Integer</td><td>整型数值。用于存储数值。根据你所采用的服务器，可分为 32 位或 64 位</td></tr><tr><td>Boolean</td><td>布尔值。用于存储布尔值（真/假）</td></tr><tr><td>Double</td><td>双精度浮点值。用于存储浮点值</td></tr><tr><td>Min/Max keys</td><td>将一个值与 BSON（二进制的 JSON）元素的最低值和最高值相对</td></tr><tr><td>Array</td><td>用于将数组或列表或多个值存储为一个键</td></tr><tr><td>Timestamp</td><td>时间戳。记录文档修改或添加的具体时间</td></tr><tr><td>Object</td><td>用于内嵌文档</td></tr><tr><td>Null</td><td>用于创建空值</td></tr><tr><td>Symbol</td><td>符号。该数据类型基本上等同于字符串类型，但不同的是，它一般用于采用特殊符号类型的语言</td></tr><tr><td>Date</td><td>日期时间。用 UNIX 时间格式来存储当前日期或时间。你可以指定自己的日期时间：创建 Date 对象，传入年月日信息</td></tr><tr><td>Object ID</td><td>对象 ID。用于创建文档的 ID</td></tr><tr><td>Binary Data</td><td>二进制数据。用于存储二进制数</td></tr><tr><td>Code</td><td>代码类型。用于在文档中存储 JavaScript 代码</td></tr><tr><td>Regular expression</td><td>正则表达式类型。用于存储正则表达式</td></tr></tbody></table>',4),n=[a];function s(_,c,l,i,b,h){return e(),d("div",null,n)}const u=t(r,[["render",s]]);export{p as __pageData,u as default};
