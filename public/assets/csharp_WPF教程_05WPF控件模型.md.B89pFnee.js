import{_ as s,c as t,o as i,a2 as a}from"./chunks/framework.Bc4oNHcE.js";const e="/assets/bc4cb880-d525-4297-aec2-ba8d3adad446.BoQkFcQE.png",C=JSON.parse('{"title":"05WPF控件模型","description":"","frontmatter":{"layout":"doc","title":"05WPF控件模型"},"headers":[],"relativePath":"csharp/WPF教程/05WPF控件模型.md","filePath":"csharp/WPF教程/05WPF控件模型.md"}'),n={name:"csharp/WPF教程/05WPF控件模型.md"},l=a('<h1 id="wpf控件模型" tabindex="-1">WPF控件模型 <a class="header-anchor" href="#wpf控件模型" aria-label="Permalink to &quot;WPF控件模型&quot;">​</a></h1><p>绿色代表抽象类，蓝色代表非抽象类 <img src="'+e+`" alt="控件的继承方式"></p><h2 id="控件内容模型" tabindex="-1">控件内容模型 <a class="header-anchor" href="#控件内容模型" aria-label="Permalink to &quot;控件内容模型&quot;">​</a></h2><blockquote><p>System.Windows.Controls.Control类：表示 用户界面 (UI) 元素的基类，这些元素使用ControlTemplate来定义其外观</p></blockquote><ul><li><a href="https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.controls.contentcontrol?view=windowsdesktop-8.0" target="_blank" rel="noreferrer">ContentControl</a>：ContentControl 是一种包含一段内容的 Control</li><li><a href="https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.controls.headeredcontentcontrol?view=windowsdesktop-8.0" target="_blank" rel="noreferrer">HeaderedContentControl</a>：包含一段内容并具有 Header 的 ContentControl</li><li><a href="https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.controls.itemscontrol?view=windowsdesktop-8.0" target="_blank" rel="noreferrer">ItemsControl</a>：可包含多个项目（例如字符串、对象或其他元素）的 Control</li><li><a href="https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.controls.headereditemscontrol?view=windowsdesktop-8.0" target="_blank" rel="noreferrer">HeaderedItemsControl</a>：可包含多个项目（例如字符串、对象或其他元素）并具有标题的ItemsControl</li></ul><h3 id="contentcontrol" tabindex="-1">ContentControl <a class="header-anchor" href="#contentcontrol" aria-label="Permalink to &quot;ContentControl&quot;">​</a></h3><blockquote><p>ContentControl模型的类型具有一个 Content 属性。Content 属性的类型为 Object，因此，对于您在 ContentControl 中可以放置的内容没有任何限制。可以使用可扩展应用程序标记语言 (XAML) 或代码来设置 Content。以下控件使用 ContentControl 内容模型：Button、ButtonBase、CheckBox、ComboBoxItem、ContentControl、Frame、GridViewColumnHeader、GroupItem、Label、ListBoxItem、ListViewItem、NavigationWindow、RadioButton、RepeatButton、ScrollViewer、StatusBarItem、ToggleButton、ToolTip、UserControl、Window 在Content中只能放置一个控件（可以放置一个容器，然后再在容器中放置多个控件）</p></blockquote><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Margin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;5&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Button.Content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Image</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Source</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Images/DVD.png&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;48&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;48&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Button.Content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Margin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;5&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Image</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Source</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Images/DVD.png&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;48&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;48&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="headeredcontentcontrol模型" tabindex="-1">HeaderedContentControl模型 <a class="header-anchor" href="#headeredcontentcontrol模型" aria-label="Permalink to &quot;HeaderedContentControl模型&quot;">​</a></h3><blockquote><p>HeaderedContentControl类继承ContentControl类，表示带有Header的ContentControl，其除了具有ContentControl的Content属性外，还具有一个Header属性，Header的类型也是Object对象，与Content属性的用法类似。从 HeaderedContentControl 继承的控件有：Expander、GroupBox、TabItem。</p></blockquote><h3 id="itemscontrol模型" tabindex="-1">ItemsControl模型 <a class="header-anchor" href="#itemscontrol模型" aria-label="Permalink to &quot;ItemsControl模型&quot;">​</a></h3><blockquote><p>从 ItemsControl 继承的控件包含一个对象集合。 ItemsControl 的一个示例是 ListBox。可以使用 ItemsSource 属性或 Items 属性来填充一个 ItemsControl。</p></blockquote><h3 id="headereditemscontrol模型" tabindex="-1">HeaderedItemsControl模型 <a class="header-anchor" href="#headereditemscontrol模型" aria-label="Permalink to &quot;HeaderedItemsControl模型&quot;">​</a></h3><blockquote><p>HeaderedItemsControl 从 ItemsControl 类继承。HeaderedItemsControl 定义 Header 属性，该属性遵从相同的规则，因为 HeaderedContentControl. WPF 的 Header 属性附带三个从 HeaderedItemsControl 继承的控件：MenuItem、ToolBar、TreeViewItem</p></blockquote><h2 id="panel内容模型" tabindex="-1">Panel内容模型 <a class="header-anchor" href="#panel内容模型" aria-label="Permalink to &quot;Panel内容模型&quot;">​</a></h2><blockquote><p>System.Windows.Controls.Panel抽象类：为所有 Panel 元素提供基类。使用 Panel 元素在 Windows Presentation Foundation (WPF) 应用程序中放置和排列子对象,Panel内容模型包含的容器有：Canvas,DockPanel,Grid,TabPanel,ToolBarOverflowPanel,UniformGrid,StackPanel,ToolBarPanel,VirtualizingPanel,VirtualizingStackPanel,WrapPanel;对于Panel模型，其包含一个Children属性，表示其所有的子控件和子容器的集合</p></blockquote><h2 id="sharp模型" tabindex="-1">Sharp模型 <a class="header-anchor" href="#sharp模型" aria-label="Permalink to &quot;Sharp模型&quot;">​</a></h2><blockquote><p>System.Windows.Sharps.Sharp抽象类：为 Ellipse、Polygon 和 Rectangle 之类的形状元素提供基类</p></blockquote><h2 id="decorator模型" tabindex="-1">Decorator模型 <a class="header-anchor" href="#decorator模型" aria-label="Permalink to &quot;Decorator模型&quot;">​</a></h2><blockquote><p>System.Windows.Controls.Decorator类：提供在单个子元素（如 Border 或 Viewbox）上或周围应用效果的元素的基类,Decorator模型的主要控件包含：,AdornerDecorator,Border,InlineUIContainer,BulletDecorator,ButtonChrome,ClassicBorderDecorator,InkPresenter,ListBoxChrome,SystemDropShadowChrome,Viewbox;Decorator模型包含一个Child属性，表示其包含的一个子元素（注意，只能是一个子元素（控件或容器，在容器中可以再添加其他的控件）），Child属性的XAML标记可以省略。</p></blockquote><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">StackPanel</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> x:Name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mainPanel&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Border</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> BorderThickness</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;5&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> BorderBrush</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;DarkBlue&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Margin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;5&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Border.Child</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">TextBox</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;TextBox Content&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Border.Child</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Border</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">StackPanel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div>`,21),o=[l];function h(r,k,p,d,E,c){return i(),t("div",null,o)}const u=s(n,[["render",h]]);export{C as __pageData,u as default};
