import{_ as s,c as i,o as a,a2 as t}from"./chunks/framework.Bc4oNHcE.js";const _=JSON.parse('{"title":"11WPF更换主题","description":"","frontmatter":{"layout":"doc","title":"11WPF更换主题"},"headers":[],"relativePath":"csharp/WPF教程/11WPF更换主题.md","filePath":"csharp/WPF教程/11WPF更换主题.md"}'),e={name:"csharp/WPF教程/11WPF更换主题.md"},n=t(`<h1 id="wpf更换主题" tabindex="-1">WPF更换主题 <a class="header-anchor" href="#wpf更换主题" aria-label="Permalink to &quot;WPF更换主题&quot;">​</a></h1><blockquote><p>如果要做到一个应用程序其基本的内容不变，但改变整个应用程序的外观可以这样做：对于每一套外观定义一个ResourceDictionary,在应用程序中，动态加载此应用程序（或窗体）的Resource</p></blockquote><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ChangeTheme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">){</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.Resources </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ResourceDictionary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)(Application.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LoadComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Uri</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(path,UriKind.Relative)));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,3),h=[n];function p(l,k,r,o,c,d){return a(),i("div",null,h)}const g=s(e,[["render",p]]);export{_ as __pageData,g as default};
