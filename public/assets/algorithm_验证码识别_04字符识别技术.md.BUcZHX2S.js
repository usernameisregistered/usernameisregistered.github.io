import{_ as a,c as e,o as t,a2 as r}from"./chunks/framework.Bc4oNHcE.js";const u=JSON.parse('{"title":"04字符识别技术","description":"","frontmatter":{"layout":"doc","title":"04字符识别技术"},"headers":[],"relativePath":"algorithm/验证码识别/04字符识别技术.md","filePath":"algorithm/验证码识别/04字符识别技术.md"}'),o={name:"algorithm/验证码识别/04字符识别技术.md"},h=r('<h1 id="字符识别技术" tabindex="-1">字符识别技术 <a class="header-anchor" href="#字符识别技术" aria-label="Permalink to &quot;字符识别技术&quot;">​</a></h1><h2 id="模板匹配法" tabindex="-1">模板匹配法 <a class="header-anchor" href="#模板匹配法" aria-label="Permalink to &quot;模板匹配法&quot;">​</a></h2><p>模板匹配法故名思议就是用模板对待识别字符进行匹配。模板匹配的步骤如下 建立模板库，首先人工识别每个待识别字符，如果模板库中没有该字符，就将该字符的标准型加入模板库。在进行模板匹配时，用待识别字符对模 板库中的每一个模板进行对比，得到对比差别最小的模板，则可以认为这一模板代表的字符就是我们需要的字符。</p><p>模板库建成后，利用KNN(K-Nearest Neighbor)算法进行模板库匹配识别。对待识别验证码的运算过程，在前期预处理及中期切分阶段和对样本图片建库时的完全一致，待识别图片被提取出特征串后利用模板库数据进行KNN 计算，KNN 中的距离采用汉明距离，字符特征串样本在K 个近邻中最多的为识别结果。</p><h2 id="字符特征法" tabindex="-1">字符特征法 <a class="header-anchor" href="#字符特征法" aria-label="Permalink to &quot;字符特征法&quot;">​</a></h2><p>针对每个字符的内部和外部特征进行分析得到每个字符的唯一区分的特征，然后根据这些特征去识别字符</p><h2 id="神经网络法" tabindex="-1">神经网络法 <a class="header-anchor" href="#神经网络法" aria-label="Permalink to &quot;神经网络法&quot;">​</a></h2><p>的基本原理如下：利用神经网络的学习功能，以及神经网络的记忆功能，首先让神经网络进行大量的样本学习，让神经网络先记住这些样本的特征，在识别阶段，待识别字符输入神 经网络，通过神经网络的回忆功能，使用待识别字符与回忆出的样本进行比较，从而找到最接近待识别样本的所属类别。</p><h3 id="卷积神经网络" tabindex="-1">卷积神经网络 <a class="header-anchor" href="#卷积神经网络" aria-label="Permalink to &quot;卷积神经网络&quot;">​</a></h3><p>在卷积神经网络出现之前，人们对于分类任务使用的是全连接神经网络，在面对图像识别任务的时候传统的神经网络面临三个严重缺陷：一：参数较多，将输入图片的像素值按照“从上到下，从左到右”的规则排列成一维向量，再和隐藏层的每个神经元进行运算。1000*1000的灰度图像，在100个节点的隐藏层参数便已经达到1亿个，太多的参数使得其运算变慢，且难以扩展；二：图像信息最重要的是内容空间关系，若将其像素值按照一维排列将无法捕捉到空间结构信息；三：深度学习中框架随着层数的加深，其表达能力更强，由于全连接网络的网络缺陷导致全连接网络难以超过三层</p><p>在CNN 框架中，使用三维特征图代替了一维向量。通过卷积操作来进行局部连接，代替了之前的全连接的形式。通过权值共享，每组连接共享一个权值的形式减少了大量的参数。最后采用降采样来提取重点信息并减少样本的数量，该操作不仅提高了训练的速度还提高了模型的鲁棒性。</p><h2 id="支持向量机svm" tabindex="-1">支持向量机SVM <a class="header-anchor" href="#支持向量机svm" aria-label="Permalink to &quot;支持向量机SVM&quot;">​</a></h2><p>SVM(Support Vector Machine) 同样是一种有监督学习方法，其基本思想是通过将输入样本映射到高维，寻找函数的最优解从而找到 使两个目标类具有最大分类间隔的平面，即最优分类超平面</p><p><a href="./支持向量机SVM.html">支持向量机SVM</a></p>',14),i=[h];function l(n,s,c,_,d,p){return t(),e("div",null,i)}const f=a(o,[["render",l]]);export{u as __pageData,f as default};
