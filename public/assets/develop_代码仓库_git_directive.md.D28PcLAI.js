import{_ as t,c as e,o as a,a2 as i}from"./chunks/framework.Bc4oNHcE.js";const u=JSON.parse('{"title":"git_directive","description":"","frontmatter":{"layout":"doc","title":"git_directive"},"headers":[],"relativePath":"develop/代码仓库/git_directive.md","filePath":"develop/代码仓库/git_directive.md"}'),g={name:"develop/代码仓库/git_directive.md"},r=i('<h3 id="创建" tabindex="-1">创建 <a class="header-anchor" href="#创建" aria-label="Permalink to &quot;创建&quot;">​</a></h3><p>&gt; git clone ssh://user@domain.com/repo.git 克隆一个已存在的项目</p><p>&gt; git init 初始化一个项目</p><h3 id="本地修改" tabindex="-1">本地修改 <a class="header-anchor" href="#本地修改" aria-label="Permalink to &quot;本地修改&quot;">​</a></h3><p>&gt; git status 查看工作去的文件变化</p><p>&gt; git diff 比较跟踪的文件变化</p><p>&gt; git add . 将所有修改的文件添加暂存区</p><p>&gt; git commit -m -a 将所有的本地变化提交到工作区</p><p>&gt; git commit --amend 修改最后一次提交的注释</p><h3 id="提交历史" tabindex="-1">提交历史 <a class="header-anchor" href="#提交历史" aria-label="Permalink to &quot;提交历史&quot;">​</a></h3><p>&gt; git log 查看所有的提交记录</p><p>&gt; git log -p &lt;file&gt; 表示每次提交的内容差异</p><p>&gt; git blame &lt;file&gt; 查看文件的每个部分是谁修改的</p><h3 id="分支和标签" tabindex="-1">分支和标签 <a class="header-anchor" href="#分支和标签" aria-label="Permalink to &quot;分支和标签&quot;">​</a></h3><p>&gt; git branch 列出所有的分支</p><p>&gt; git checkout &lt;branchname&gt; 切换到分支</p><p>&gt; git branch &lt;branchname&gt; 创建分支</p><p>&gt; git checkout -d &lt;branchname&gt; 删除本地分支</p><p>&gt; git tag &lt;tagname&gt; 创建标签</p><h3 id="更新和publish" tabindex="-1">更新和publish <a class="header-anchor" href="#更新和publish" aria-label="Permalink to &quot;更新和publish&quot;">​</a></h3><p>&gt; git remote -v 列出所有的远程网址</p><p>&gt; git remote show &lt;remote&gt; 显示某个remote的详细信息</p><p>&gt; git remote add &lt;shortname&gt; &lt;url&gt; 添加远程网址</p><p>&gt; git fetch &lt;remote&gt; 下载所有更改，但不合并</p><p>&gt; git pull &lt;remote&gt; &lt;branch&gt; 下载所有并合并</p><p>&gt; git push &lt;remote&gt; &lt;branch&gt; 推送变化到远程</p><p>&gt; git branch -dr &lt;remote/branch&gt; 删除远程分支</p><p>&gt; git push -tags 推送所有的标签</p><h3 id="合并" tabindex="-1">合并 <a class="header-anchor" href="#合并" aria-label="Permalink to &quot;合并&quot;">​</a></h3><p>&gt; git merge &lt;branch&gt; 合并分支</p><p>&gt; git rm &lt;file&gt; 删除文件</p><p>&gt; git add &lt;file&gt; 添加文件</p><h3 id="回退" tabindex="-1">回退 <a class="header-anchor" href="#回退" aria-label="Permalink to &quot;回退&quot;">​</a></h3><p>&gt; git reset --hard HEAD 回退到指定的版本</p><p>&gt; git checkout HEAD &lt;file&gt; 丢弃特定版本文件中的本地更改</p><p>&gt; git revert &lt;commitid&gt; 回退到某个提交的记录</p><p>&gt; git reflog 查看回退的历史记录</p>',37),p=[r];function l(o,h,c,n,d,s){return a(),e("div",null,p)}const _=t(g,[["render",l]]);export{u as __pageData,_ as default};
