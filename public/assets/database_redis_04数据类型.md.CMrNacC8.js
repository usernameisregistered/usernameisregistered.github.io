import{_ as a,c as s,o as e,a2 as t}from"./chunks/framework.Bc4oNHcE.js";const b=JSON.parse('{"title":"04数据类型","description":"","frontmatter":{"layout":"doc","title":"04数据类型"},"headers":[],"relativePath":"database/redis/04数据类型.md","filePath":"database/redis/04数据类型.md"}'),n={name:"database/redis/04数据类型.md"},p=t(`<h1 id="redis-数据类型" tabindex="-1">Redis 数据类型 <a class="header-anchor" href="#redis-数据类型" aria-label="Permalink to &quot;Redis 数据类型&quot;">​</a></h1><h2 id="string-字符串" tabindex="-1">string 字符串 <a class="header-anchor" href="#string-字符串" aria-label="Permalink to &quot;string 字符串&quot;">​</a></h2><p>最大能存储 512MB</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>set var &quot;name&quot;</span></span>
<span class="line"><span>get var </span></span>
<span class="line"><span>del var</span></span></code></pre></div><h2 id="hash-哈希" tabindex="-1">hash 哈希 <a class="header-anchor" href="#hash-哈希" aria-label="Permalink to &quot;hash 哈希&quot;">​</a></h2><p>每个 hash 可以存储 2^32 -1 键值对（40多亿）</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>hset var name &quot;lisi&quot; age 20 </span></span>
<span class="line"><span>hget var name </span></span>
<span class="line"><span>hget var age</span></span>
<span class="line"><span>del var</span></span></code></pre></div><h2 id="list-列表" tabindex="-1">list 列表 <a class="header-anchor" href="#list-列表" aria-label="Permalink to &quot;list 列表&quot;">​</a></h2><p>列表最多可存储 232 - 1 元素</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>lpush test &quot;redis&quot; &quot;mongodb&quot;</span></span>
<span class="line"><span>lrange test 0 2</span></span>
<span class="line"><span>del test</span></span></code></pre></div><h2 id="set-集合" tabindex="-1">set 集合 <a class="header-anchor" href="#set-集合" aria-label="Permalink to &quot;set 集合&quot;">​</a></h2><p>Set 是 string 类型的无序集合</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sadd test redis</span></span>
<span class="line"><span>sadd test mysql</span></span>
<span class="line"><span>smembers test</span></span></code></pre></div><h2 id="zset-有序集合" tabindex="-1">zset 有序集合 <a class="header-anchor" href="#zset-有序集合" aria-label="Permalink to &quot;zset 有序集合&quot;">​</a></h2><p>edis zset 和 set 一样也是string类型元素的集合,且不允许重复的成员 不同的是每个元素都会关联一个double类型的分数。redis正是通过分数来为集合中的成员进行从小到大的排序 zset的成员是唯一的,但分数(score)却可以重复</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>zadd test 20 redis</span></span>
<span class="line"><span>zadd test 30 mysql</span></span>
<span class="line"><span>zadd test 10 mongodb</span></span>
<span class="line"><span>zrangbyscore test 0 1000</span></span></code></pre></div>`,16),i=[p];function l(d,o,c,r,h,u){return e(),s("div",null,i)}const m=a(n,[["render",l]]);export{b as __pageData,m as default};
