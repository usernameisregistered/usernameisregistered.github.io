import{_ as e,c as t,o as a,a2 as k}from"./chunks/framework.Bc4oNHcE.js";const p=JSON.parse('{"title":"05命令","description":"","frontmatter":{"layout":"doc","title":"05命令"},"headers":[],"relativePath":"database/redis/05命令.md","filePath":"database/redis/05命令.md"}'),r={name:"database/redis/05命令.md"},s=k('<h1 id="redis-命令" tabindex="-1">Redis 命令 <a class="header-anchor" href="#redis-命令" aria-label="Permalink to &quot;Redis 命令&quot;">​</a></h1><blockquote><p>ping 该命令用于检测 redis 服务是否启动 quit 关闭当前连接 select index 切换到指定的数据库 echo messgae 打印字符串 auth password 验证密码是否正确 del key 该命令用于在 key 存在时删除 key dump key 序列化给定 key ，并返回被序列化的值 exists key 检查给定 key 是否存在 expire key second 为给定 key 设置过期时间，以秒计 expireat key timestamp 不同在于 EXPIREAT 命令接受的时间参数是 UNIX 时间戳 pexpire key millseconds 设置 key 的过期时间以毫秒计 pexpireat key milliseconds-timestamp 设置key 过期时间的时间戳(unix timestamp) 以毫秒计 keys pattern 查找所有符合给定模式 pattern 的 key move key db 将当前数据库的 key 移动到给定的数据库 db 当中 presist key 移除 key 的过期时间，key 将持久保持 pttl key 以毫秒为单位返回 key 的剩余的过期时间 ttl key 以秒为单位，返回给定 key 的剩余生存时间 randomkey 从当前数据库中随机返回一个 key rename key newkey 修改 key 的名称 renamenx key newkey 仅当 newkey 不存在时，将 key 改名为 newkey type key 返回 key 所储存的值的类型 bgsave 在后台异步保存当前数据库的数据到磁盘 client list 获取连接到服务器的客户端连接列表 client getname 获取连接的名称 time 返回当前的服务器时间 dbsize 返回当前数据库的key的个数 flushall 删除所有数据库的所有key flushhbd 删除当前数据库的所有key save 同步保存数据到硬盘</p></blockquote><h2 id="string" tabindex="-1">string <a class="header-anchor" href="#string" aria-label="Permalink to &quot;string&quot;">​</a></h2><blockquote><p>set key value 设置指定 key 的值 get key 获取指定 key 的值 getrange key start end 返回 key 中字符串值的子字符 getset key value 将给定 key 的值设为 value ，并返回 key 的旧值 getbit key offset 对 key 所储存的字符串值，获取指定偏移量上的位 mget key1 key2 获取所有(一个或多个)给定 key 的值 SETBIT key offset value 对 key 所储存的字符串值，设置或清除指定偏移量上的位(bit) setex key seconds value 将值 value 关联到 key ，并将 key 的过期时间设为 seconds setnx key value 只有在 key 不存在时设置 key 的值 setrange key offset value 用 value 参数覆写给定 key 所储存的字符串值，从偏移量 offset 开始 strlen key 返回 key 所储存的字符串值的长度 mset key value key value 同时设置一个或多个 key-value 对 msetex key value key value 同时设置一个或多个 key-value 对，当且仅当所有给定 key 都不存在 psetex set millseconds value 个命令和 SETEX 命令相似，但它以毫秒为单位设置 key 的生存时间 incr key 将 key 中储存的数字值增一 incrby key increment 将 key 所储存的值加上给定的增量值 incrgyfloat key increment 将 key 所储存的值加上给定的浮点增量值 decr key 将 key 中储存的数字值减一 decrby key descment key 所储存的值减去给定的减量值 append key value 如果 key 已经存在并且是一个字符串， APPEND 命令将指定的 value 追加到该 key 原来值（value）的末尾</p></blockquote><h2 id="哈希" tabindex="-1">哈希 <a class="header-anchor" href="#哈希" aria-label="Permalink to &quot;哈希&quot;">​</a></h2><blockquote><p>hdel key field1 field2 删除一个或多个哈希表字段 hexists key field 查看哈希表 key 中，指定的字段是否存在。 hget key field 获取存储在哈希表中指定字段的值 hgetall key 获取在哈希表中指定 key 的所有字段和值 hincrby key field increment 为哈希表 key 中的指定字段的整数值加上增量 increment hincrbyfloat key field increment 为哈希表 key 中的指定字段的浮点数值加上增量 increment hkeys key 获取所有哈希表中的字段 hlen key 获取哈希表中字段的数量 hmget key field1 field2 获取所有给定字段的值 hmset key field value field value 同时将多个 field-value (域-值)对设置到哈希表 key 中 hset key field value 将哈希表 key 中的字段 field 的值设为 value hsetnx key field value 只有在字段 field 不存在时，设置哈希表字段的值 hvals key 获取哈希表中所有值 hscan key cursor 迭代哈希表中的键值对</p></blockquote><h2 id="列表" tabindex="-1">列表 <a class="header-anchor" href="#列表" aria-label="Permalink to &quot;列表&quot;">​</a></h2><blockquote><p>blpop key timeout 移出并获取列表的第一个元素， 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止 brpop key timeout 移出并获取列表的最后一个元素， 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止 brpoplpush source destiination timeout 从列表中弹出一个值，将弹出的元素插入到另外一个列表中并返回它； 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止。 lindex key index 通过索引获取列表中的元素 linsert key before|after pivot vlaue 在列表的元素前或者后插入元素 llen key 获取列表长度 lpop key 移出并获取列表的第一个元素 lpush key value1 value2 将一个或多个值插入到列表头部 lpushx key value 将一个值插入到已存在的列表头部 lrange key start stop 获取列表指定范围内的元素 lrem key count valur 移除列表元素 lset key index value 通过索引设置列表元素的值 ltrim key start stop 对一个列表进行修剪(trim)，就是说，让列表只保留指定区间内的元素，不在指定区间之内的元素都将被删除 rpop key 移除列表的最后一个元素，返回值为移除的元素 rpoplpush source destination 移除列表的最后一个元素，并将该元素添加到另一个列表并返回 rpush key value 在列表中添加一个或多个值 rpushx key value 为已存在的列表添加值</p></blockquote><h2 id="集合" tabindex="-1">集合 <a class="header-anchor" href="#集合" aria-label="Permalink to &quot;集合&quot;">​</a></h2><blockquote><p>sass key member 向集合添加一个或多个成员 scrad key 获取集合的成员数 sdiff key key2 返回给定所有集合的差集 sdffstore destination key1 key2 返回给定所有集合的差集并存储在 destination 中 sinter key1 key2 返回给定所有集合的交集 sinterstore destination key1 key2 返回给定所有集合的交集并存储在 destination 中 sismember key member 判断 member 元素是否是集合 key 的成员 smembers key 返回集合中的所有成员 smove source destination member 将 member 元素从 source 集合移动到 destination 集合 spop key 移除并返回集合中的一个随机元素 srandmemember key count 返回集合中一个或多个随机数 srem key member1 member2 移除集合中一个或多个成员 sunion key1 key2 返回所有给定集合的并集 sunionstore destination key1 key2 所有给定集合的并集存储在 destination 集合中 sscan key cursor 迭代集合中的元素</p></blockquote><h2 id="zset" tabindex="-1">zset <a class="header-anchor" href="#zset" aria-label="Permalink to &quot;zset&quot;">​</a></h2><blockquote><p>zadd key score member 向有序集合添加一个或多个成员，或者更新已存在成员的分数 zcard key 获取有序集合的成员数 zcount key min max 计算在有序集合中指定区间分数的成员数 zincrby key incrment member 有序集合中对指定成员的分数加上增量 increment zinterscore destination numbers key 计算给定的一个或多个有序集的交集并将结果集存储在新的有序集合 key 中 zlexcount key min max 在有序集合中计算指定字典区间内成员数量 zrange key start stop 通过索引区间返回有序集合指定区间内的成员 zrangebylex key min max 通过分数返回有序集合指定区间内的成员 zrank key member 返回有序集合中指定成员的索引 zrem key member 移除有序集合中的一个或多个成员 zremrangebylex key min max 移除有序集合中给定的字典区间的所有成员 zremrangebyscore key min max 移除有序集合中给定的分数区间的所有成员 zrevange key start stop 返回有序集中指定区间内的成员，通过索引，分数从高到低 zrevrangebyscore key min max 返回有序集中指定分数区间内的成员，分数从高到低排序 zrevrank key member 返回有序集合中指定成员的排名，有序集成员按分数值递减 zscore key member 返回有序集中，成员的分数值 zunionstore destination numkeys key1 计算给定的一个或多个有序集的并集，并存储在新的 key 中 zscan key cursor 迭代有序集合中的元素</p></blockquote><h2 id="hyperloglog" tabindex="-1">HyperLogLog <a class="header-anchor" href="#hyperloglog" aria-label="Permalink to &quot;HyperLogLog&quot;">​</a></h2><blockquote><p>HyperLogLog 是用来做基数统计的算法 pfadd key element 添加指定元素到 HyperLogLog 中 pfcount key 返回给定 HyperLogLog 的基数估算值 pfmerge destkey sourcekey 将多个 HyperLogLog 合并为一个 HyperLogLog</p></blockquote><h2 id="发布-订阅" tabindex="-1">发布/订阅 <a class="header-anchor" href="#发布-订阅" aria-label="Permalink to &quot;发布/订阅&quot;">​</a></h2><blockquote><p>psubscribe pattern 订阅一个或多个符合给定模式的频道 pubsub subcommand 查看订阅与发布系统状态 publish channel messge 将信息发送到指定的频道。 punsubscribe pattern 退订所有给定模式的频道 subscribe channel 订阅给定的一个或多个频道的信息 unsubscribe channel 指退订给定的频道</p></blockquote><h2 id="事务" tabindex="-1">事务 <a class="header-anchor" href="#事务" aria-label="Permalink to &quot;事务&quot;">​</a></h2><blockquote><p>discard 取消事务，放弃执行事务块内的所有命令 exec 执行所有事务块内的命令 multi 标记一个事务块的开始 unwatch 取消 WATCH 命令对所有 key 的监视 watch key 监视一个(或多个) key ，如果在事务执行之前这个(或这些) key 被其他命令所改动，那么事务将被打断</p></blockquote>',18),y=[s];function o(n,i,l,u,c,d){return a(),t("div",null,y)}const b=e(r,[["render",o]]);export{p as __pageData,b as default};
