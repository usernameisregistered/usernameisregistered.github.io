import{_ as a,c as e,o as t,a2 as o}from"./chunks/framework.CJYjXVh_.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{"layout":"doc"},"headers":[],"relativePath":"graph/计算机图形学/01第一章_简介.md","filePath":"graph/计算机图形学/01第一章_简介.md"}'),r={name:"graph/计算机图形学/01第一章_简介.md"},l=o('<h2 id="计算机图形学的几种用途" tabindex="-1">计算机图形学的几种用途 <a class="header-anchor" href="#计算机图形学的几种用途" aria-label="Permalink to &quot;计算机图形学的几种用途&quot;">​</a></h2><ol><li>用户界面</li><li>商业与科技中的交互绘图</li><li>制图学</li><li>医学</li><li>计算机辅助制图和设计</li><li>多媒体系统</li><li>科学计算可视化和环境的模拟与动画</li></ol><h2 id="交互式图形学" tabindex="-1">交互式图形学 <a class="header-anchor" href="#交互式图形学" aria-label="Permalink to &quot;交互式图形学&quot;">​</a></h2><blockquote><p>交互式的计算机图形是自摄影和电视发明以来最重要的图形方法，他有许多额外的优点，</p></blockquote><p><strong>运动动力学</strong>：使物体相对于静止的观察者移动或者旋转；也可以保持物体不动。而使观察者围绕物体移动、摇动镜头以选择视框或拉近或推远景物以选择细节的多寡，这就像快速移动摄像机时，通过瞄准镜所看到的情况一样。在更多的情况下，是物体和观察者都在运动</p><p><strong>更新动力学</strong>：被观察者物体的形状、颜色或其他性质实际发生了变化。</p><h3 id="概念框架" tabindex="-1">概念框架 <a class="header-anchor" href="#概念框架" aria-label="Permalink to &quot;概念框架&quot;">​</a></h3><p>计算机从交互设备接收输入，并向显示设备输出图像。软件有3个部分：</p><blockquote><p>应用程序 ↔ 应用模型 ↔ 图形系统</p></blockquote><h4 id="应用程序" tabindex="-1">应用程序 <a class="header-anchor" href="#应用程序" aria-label="Permalink to &quot;应用程序&quot;">​</a></h4><p>创建图元并将之存入应用模型或由应用模型取回</p><h4 id="应用模型" tabindex="-1">应用模型 <a class="header-anchor" href="#应用模型" aria-label="Permalink to &quot;应用模型&quot;">​</a></h4><p>表示将在屏幕上显示的数据和物体</p><h4 id="图形系统" tabindex="-1">图形系统 <a class="header-anchor" href="#图形系统" aria-label="Permalink to &quot;图形系统&quot;">​</a></h4><p>负责从对象的细节描述产生实际的对象，并将用户的输入传递给应用程序，以供处理。</p>',15),i=[l];function n(h,s,_,c,d,p){return t(),e("div",null,i)}const q=a(r,[["render",n]]);export{b as __pageData,q as default};
