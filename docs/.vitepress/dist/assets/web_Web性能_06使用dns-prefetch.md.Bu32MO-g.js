import{_ as e,c as s,o as t,a2 as a}from"./chunks/framework.Bc4oNHcE.js";const f=JSON.parse('{"title":"06使用dns-prefetch","description":"","frontmatter":{"layout":"doc","title":"06使用dns-prefetch"},"headers":[],"relativePath":"web/Web性能/06使用dns-prefetch.md","filePath":"web/Web性能/06使用dns-prefetch.md"}'),i={name:"web/Web性能/06使用dns-prefetch.md"},h=a('<h1 id="使用dns-prefetch" tabindex="-1">使用dns-prefetch <a class="header-anchor" href="#使用dns-prefetch" aria-label="Permalink to &quot;使用dns-prefetch&quot;">​</a></h1><p>DNS-prefetch 尝试在请求资源之前解析域名。这可能是后面要加载的文件，也可能是用户尝试打开的链接目标。</p><h2 id="为什么要使用-dns-prefetch" tabindex="-1">为什么要使用 dns-prefetch？ <a class="header-anchor" href="#为什么要使用-dns-prefetch" aria-label="Permalink to &quot;为什么要使用 dns-prefetch？&quot;">​</a></h2><p>当浏览器从（第三方）服务器请求资源时，必须先将该跨源域名解析为 IP 地址，然后浏览器才能发出请求。此过程称为 DNS 解析。虽然 DNS 缓存可以帮助减少此延迟，但 DNS 解析可能会给请求增加明显的延迟。对于打开了与许多第三方的连接的网站，此延迟可能会大大降低加载性能。</p><p>dns-prefetch 可帮助开发人员掩盖 DNS 解析延迟</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">link</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> rel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dns-prefetch&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://fonts.googleapis.com/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre></div>',6),n=[h];function p(r,d,l,c,o,k){return t(),s("div",null,n)}const E=e(i,[["render",p]]);export{f as __pageData,E as default};
