import{_ as t,c as e,o as a,a2 as o}from"./chunks/framework.Bc4oNHcE.js";const h=JSON.parse('{"title":"05命令.","description":"","frontmatter":{"layout":"doc","title":"05命令."},"headers":[],"relativePath":"database/MongoDB/05命令..md","filePath":"database/MongoDB/05命令..md"}'),d={name:"database/MongoDB/05命令..md"},r=o('<h2 id="数据库相关" tabindex="-1">数据库相关 <a class="header-anchor" href="#数据库相关" aria-label="Permalink to &quot;数据库相关&quot;">​</a></h2><p>创建数据库 use database_name 查看数据库 show dbs 删除数据库 db.dropDatabase()</p><h2 id="集合" tabindex="-1">集合 <a class="header-anchor" href="#集合" aria-label="Permalink to &quot;集合&quot;">​</a></h2><p>创建集合 db.createCollection(name,options) options capped 布尔 （可选）如果为 true，则创建固定集合。固定集合是指有着固定大小的集合，当达到最大值时，它会自动覆盖最早的文档,当该值为 true 时，必须指定 size 参数 autoIndexId 布尔 （可选）如为 true，自动在 _id 字段创建索引。默认为 false。 size 数值 （可选）为固定集合指定一个最大值，以千字节计（KB）,如果 capped 为 true，也需要指定该字段。 max 数值 （可选）指定固定集合中包含文档的最大数量</p><p>查看已有集合 show collections show tables 删除集合 db.collection.drop()</p><h2 id="文档相关" tabindex="-1">文档相关 <a class="header-anchor" href="#文档相关" aria-label="Permalink to &quot;文档相关&quot;">​</a></h2><p>插入文档 db.collect_name.insert(document) 向指定集合中插入一条文档数据 db.collection.insertOne() 向指定集合中插入多条文档数据 db.collection.insertMany() 文档查找 db.collect_name.find() 文档更新 db.collect_name.update(&lt;query&gt;, &lt;update&gt;,&lt;options&gt;) 文档替换 db.collect_name.save(document) 文档删除 db.collect_name.remove(&lt;query&gt;,&lt;options&gt;) 文档删除 db.collect_name.deleteOne(&lt;query&gt;) 全部文档删除 db.collect_name.deleteMany(&lt;query&gt;)</p><h2 id="type-操作符" tabindex="-1">$type 操作符 <a class="header-anchor" href="#type-操作符" aria-label="Permalink to &quot;\\$type 操作符&quot;">​</a></h2><p>double 1 string 2 object 3 array 4 binary data 5 undefined 6 object id 7 boolean 8 date 9 null 10 regular expression 11 javascript 13 symbol 14</p><h2 id="分页" tabindex="-1">分页 <a class="header-anchor" href="#分页" aria-label="Permalink to &quot;分页&quot;">​</a></h2><p>读取指定数量的数据记录 db.COLLECTION_NAME.find().limit(NUMBER) 跳过指定数量的数据 db.COLLECTION_NAME.find().limit(NUMBER).skip(NUMBER)</p><h2 id="排序" tabindex="-1">排序 <a class="header-anchor" href="#排序" aria-label="Permalink to &quot;排序&quot;">​</a></h2><p>db.COLLECTION_NAME.find().sort({KEY:1})</p><h2 id="索引" tabindex="-1">索引 <a class="header-anchor" href="#索引" aria-label="Permalink to &quot;索引&quot;">​</a></h2><p>创建 db.collection_name.createIndex(key,options) 查看 db.collection_name.getIndexs() 查看集合索引大小 db.collection_name.getIndexSize() 删除 db.collection_name.dropIndex()</p><h2 id="聚合" tabindex="-1">聚合 <a class="header-anchor" href="#聚合" aria-label="Permalink to &quot;聚合&quot;">​</a></h2><p>db.COLLECTION_NAME.aggregate(AGGREGATE_OPERATION)</p><table><thead><tr><th>表达式</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>$sum</td><td>计算总和</td><td>db.mycol.aggregate([{$group : {_id : &quot;$by_user&quot;, num_tutorial : {$sum : &quot;$likes&quot;}}}])</td></tr><tr><td>$avg</td><td>计算平均值</td><td>db.mycol.aggregate([{$group : {_id : &quot;$by_user&quot;, num_tutorial : {$avg : &quot;$likes&quot;}}}])</td></tr><tr><td>$min</td><td>获取集合中所有文档对应值得最小值。</td><td>db.mycol.aggregate([{$group : {_id : &quot;$by_user&quot;, num_tutorial : {$min : &quot;$likes&quot;}}}])</td></tr><tr><td>$max</td><td>获取集合中所有文档对应值得最大值。</td><td>db.mycol.aggregate([{$group : {_id : &quot;$by_user&quot;, num_tutorial : {$max : &quot;$likes&quot;}}}])</td></tr><tr><td>$push</td><td>在结果文档中插入值到一个数组中。</td><td>db.mycol.aggregate([{$group : {_id : &quot;$by_user&quot;, url : {$push: &quot;$url&quot;}}}])</td></tr><tr><td>$addToSet</td><td>在结果文档中插入值到一个数组中，但不创建副本。</td><td>db.mycol.aggregate([{$group : {_id : &quot;$by_user&quot;, url : {$addToSet : &quot;$url&quot;}}}])</td></tr><tr><td>$first</td><td>根据资源文档的排序获取第一个文档数据。</td><td>db.mycol.aggregate([{$group : {_id : &quot;$by_user&quot;, first_url : {$first : &quot;$url&quot;}}}])</td></tr><tr><td>$last</td><td>根据资源文档的排序获取最后一个文档数据</td><td>db.mycol.aggregate([{$group : {_id : &quot;$by_user&quot;, last_url : {$last : &quot;$url&quot;}}}])</td></tr></tbody></table>',18),l=[r];function u(i,n,s,c,_,b){return a(),e("div",null,l)}const m=t(d,[["render",u]]);export{h as __pageData,m as default};
