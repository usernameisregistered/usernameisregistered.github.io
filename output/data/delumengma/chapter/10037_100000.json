{"pageProps":{"bookInfo":{"id":"10037","name":"redis","fullPath":"F:\\passerby\\database\\redis","chapterList":[{"id":"10037_100000","type":"chapter","name":"介绍","fullPath":"F:\\passerby\\database\\redis\\01介绍.md","url":"/chapter/10037_100000","content":"\n    \n    \n      <div class=\"crossnote markdown-preview  \">\n      \n<h1 id=\"redis-简介\">Redis 简介 </h1>\n<blockquote>\n<p>Redis 是完全开源免费的，遵守BSD协议，是一个高性能的key-value数据库</p>\n</blockquote>\n<h2 id=\"特点\">特点： </h2>\n<ol>\n<li>Redis支持数据的持久化，可以将内存中的数据保存在磁盘中，重启的时候可以再次加载进行使用</li>\n<li>Redis不仅仅支持简单的key-value类型的数据，同时还提供list，set，zset，hash等数据结构的存储</li>\n<li>Redis支持数据的备份，即master-slave模式的数据备份</li>\n</ol>\n<h2 id=\"优势\">优势： </h2>\n<ol>\n<li>性能极高 – Redis能读的速度是110000次/s,写的速度是81000次/s</li>\n<li>丰富的数据类型 – Redis支持二进制案例的 Strings, Lists, Hashes, Sets 及 Ordered Sets 数据类型操作</li>\n<li>原子 – Redis的所有操作都是原子性的，意思就是要么成功执行要么失败完全不执行。单个操作是原子性的。多个操作也支持事务，即原子性，通过MULTI和EXEC指令包起来</li>\n<li>丰富的特性 – Redis还支持 publish/subscribe, 通知, key 过期等等特性</li>\n</ol>\n\n      </div>\n      <div class=\"md-sidebar-toc\">\n<div class=\"md-toc\">\n<details style=\"padding:0;;padding-left:0px;\" open=\"\">\n        <summary class=\"md-toc-link-wrapper\">\n          <a href=\"#redis-简介\" class=\"md-toc-link\"><p>Redis 简介</p>\n</a>\n          </summary>\n        <div>\n          <div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#特点\" class=\"md-toc-link\">\n            <p>特点：</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#优势\" class=\"md-toc-link\">\n            <p>优势：</p>\n\n          </a></div>\n        </div>\n      </details>\n    \n</div>\n</div>\n      <a id=\"sidebar-toc-btn\">≡</a>\n    \n    \n    \n    \n    \n    \n<script>\n\nvar sidebarTOCBtn = document.getElementById('sidebar-toc-btn')\nsidebarTOCBtn.addEventListener('click', function(event) {\n  event.stopPropagation()\n  if (document.body.hasAttribute('html-show-sidebar-toc')) {\n    document.body.removeAttribute('html-show-sidebar-toc')\n  } else {\n    document.body.setAttribute('html-show-sidebar-toc', true)\n  }\n})\n</script>\n      \n  \n    "},{"id":"10037_100001","type":"chapter","name":"安装","fullPath":"F:\\passerby\\database\\redis\\02安装.md","url":"/chapter/10037_100001","content":"\n    \n    \n      <div class=\"crossnote markdown-preview  \">\n      \n<h1 id=\"redis-安装\">Redis 安装 </h1>\n<h2 id=\"window\">window </h2>\n<ol>\n<li>下载<a href=\"https://github.com/MSOpenTech/redis/releases\">下载地址</a></li>\n<li>解压重名为redis</li>\n<li>可选 将其移动到指定的安装目录</li>\n<li>启动 cmd 中切换到指定目录 执行 redis-server.exe redis.windows.conf</li>\n<li>连接 cmd redis-cli.exe -h 127.0.0.1 -p 6379</li>\n</ol>\n<h2 id=\"linux\">linux </h2>\n<ol>\n<li>wget <a href=\"http://download.redis.io/releases/redis-2.8.17.tar.gz\">http://download.redis.io/releases/redis-2.8.17.tar.gz</a></li>\n<li>tar -zxvf redis-2.8.17.tar.gz</li>\n<li>mv ./redis-2.8.17 /usr/local</li>\n<li>mv /usr/local/redis-2.8.17 /usr/local/redis</li>\n<li>cd /usr/local/redis</li>\n<li>make</li>\n<li>./src/redis-server ./redis.conf 启动</li>\n<li>./src/redis-cii 连接</li>\n</ol>\n\n      </div>\n      <div class=\"md-sidebar-toc\">\n<div class=\"md-toc\">\n<details style=\"padding:0;;padding-left:0px;\" open=\"\">\n        <summary class=\"md-toc-link-wrapper\">\n          <a href=\"#redis-安装\" class=\"md-toc-link\"><p>Redis 安装</p>\n</a>\n          </summary>\n        <div>\n          <div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#window\" class=\"md-toc-link\">\n            <p>window</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#linux\" class=\"md-toc-link\">\n            <p>linux</p>\n\n          </a></div>\n        </div>\n      </details>\n    \n</div>\n</div>\n      <a id=\"sidebar-toc-btn\">≡</a>\n    \n    \n    \n    \n    \n    \n<script>\n\nvar sidebarTOCBtn = document.getElementById('sidebar-toc-btn')\nsidebarTOCBtn.addEventListener('click', function(event) {\n  event.stopPropagation()\n  if (document.body.hasAttribute('html-show-sidebar-toc')) {\n    document.body.removeAttribute('html-show-sidebar-toc')\n  } else {\n    document.body.setAttribute('html-show-sidebar-toc', true)\n  }\n})\n</script>\n      \n  \n    "},{"id":"10037_100002","type":"chapter","name":"配置","fullPath":"F:\\passerby\\database\\redis\\03配置.md","url":"/chapter/10037_100002","content":"\n    \n    \n      <div class=\"crossnote markdown-preview  \">\n      \n<h1 id=\"redis-配置\">Redis 配置 </h1>\n<h2 id=\"配置获取\">配置获取 </h2>\n<pre data-role=\"codeBlock\" data-info=\"\" class=\"language-text\"><code>config get config_name\n</code></pre><h2 id=\"配置设置和修改\">配置设置和修改 </h2>\n<pre data-role=\"codeBlock\" data-info=\"\" class=\"language-text\"><code>config set config_name config_value \n</code></pre><h2 id=\"配置说明\">配置说明 </h2>\n<table>\n<thead>\n<tr>\n<th>配置项</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>daemonize</td>\n<td>no</td>\n<td>redis默认不以守护进程的方式运行可以修改配置项</td>\n</tr>\n<tr>\n<td>pidfile</td>\n<td>/var/run/redis.pid</td>\n<td>当redis以守护进程运行时的oid</td>\n</tr>\n<tr>\n<td>port</td>\n<td>6379</td>\n<td>指定的redis监听端口</td>\n</tr>\n<tr>\n<td>bind</td>\n<td>127.0.0.1</td>\n<td>绑定的主机地址</td>\n</tr>\n<tr>\n<td>timeout</td>\n<td>360</td>\n<td>当客户端多长时间不连接时关闭连接 为0时永不关闭</td>\n</tr>\n<tr>\n<td>loglevel</td>\n<td>notice</td>\n<td>指定日志的记录级别 debug , verbose , notice ，warning</td>\n</tr>\n<tr>\n<td>logfile</td>\n<td>stdout</td>\n<td>日志的记录方式 默认是标准输出</td>\n</tr>\n<tr>\n<td>databases</td>\n<td>16</td>\n<td>设置数据库的个数</td>\n</tr>\n<tr>\n<td>save &lt;seconds&gt; &lt;changes&gt;</td>\n<td>save 900 1</td>\n<td>900 秒（15 分钟）内有 1 个更改 指定在多长时间内，有多少次更新操作，就将数据同步到数据文件</td>\n</tr>\n<tr>\n<td>rdbcompression</td>\n<td>yes</td>\n<td>指定存储至本地数据库时是否压缩数据，默认为 yes</td>\n</tr>\n<tr>\n<td>dbfilename</td>\n<td>dump.rdb</td>\n<td>指定本地数据库文件名</td>\n</tr>\n<tr>\n<td>dir</td>\n<td>./</td>\n<td>指定本地数据库存放目录</td>\n</tr>\n<tr>\n<td>slaveof  &lt;masterip&gt; &lt;masterport&gt;</td>\n<td></td>\n<td>设置当本机为 slav 服务时，设置 master 服务的 IP 地址及端口，在 Redis 启动时，它会自动从 master</td>\n</tr>\n<tr>\n<td>masterauth &lt;master-password&gt;</td>\n<td></td>\n<td>当 master 服务设置了密码保护时，slav 服务连接 master 的密码</td>\n</tr>\n<tr>\n<td>requirepass</td>\n<td></td>\n<td>设置 Redis 连接密码，如果配置了连接密码，客户端在连接 Redis 时需要通过 AUTH &lt;password&gt; 命令提供密码，默认关闭</td>\n</tr>\n<tr>\n<td>maxclients</td>\n<td>128</td>\n<td>设置同一时间最大客户端连接数，默认无限制</td>\n</tr>\n<tr>\n<td>maxmemory</td>\n<td></td>\n<td>指定 Redis 最大内存限制，Redis 在启动时会把数据加载到内存中，达到最大内存后，Redis 会先尝试清除已到期或即将到期的 Key，当此方法处理 后，仍然到达最大内存设置，将无法再进行写入操作，但仍然可以进行读取操作。Redis 新的 vm 机制，会把 Key 存放内存，Value 会存放在 swap 区</td>\n</tr>\n<tr>\n<td>appendonly</td>\n<td>on</td>\n<td>指定是否在每次更新操作后进行日志记录</td>\n</tr>\n<tr>\n<td>appendfilename</td>\n<td>appendonly.aof</td>\n<td>指定更新日志文件名</td>\n</tr>\n<tr>\n<td>inclue</td>\n<td>/path/to/local.conf</td>\n<td>指定包含其它的配置文件，可以在同一主机上多个Redis实例之间使用同一份配置文件，而同时各个实例又拥有自己的特定配置文件</td>\n</tr>\n<tr>\n<td>activerehashing</td>\n<td>yes</td>\n<td>指定是否激活重置哈希，默认为开启</td>\n</tr>\n<tr>\n<td>vm-enabled</td>\n<td>no</td>\n<td>指定是否启用虚拟内存机制，默认值为 no</td>\n</tr>\n</tbody>\n</table>\n\n      </div>\n      <div class=\"md-sidebar-toc\">\n<div class=\"md-toc\">\n<details style=\"padding:0;;padding-left:0px;\" open=\"\">\n        <summary class=\"md-toc-link-wrapper\">\n          <a href=\"#redis-配置\" class=\"md-toc-link\"><p>Redis 配置</p>\n</a>\n          </summary>\n        <div>\n          <div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#配置获取\" class=\"md-toc-link\">\n            <p>配置获取</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#配置设置和修改\" class=\"md-toc-link\">\n            <p>配置设置和修改</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#配置说明\" class=\"md-toc-link\">\n            <p>配置说明</p>\n\n          </a></div>\n        </div>\n      </details>\n    \n</div>\n</div>\n      <a id=\"sidebar-toc-btn\">≡</a>\n    \n    \n    \n    \n    \n    \n<script>\n\nvar sidebarTOCBtn = document.getElementById('sidebar-toc-btn')\nsidebarTOCBtn.addEventListener('click', function(event) {\n  event.stopPropagation()\n  if (document.body.hasAttribute('html-show-sidebar-toc')) {\n    document.body.removeAttribute('html-show-sidebar-toc')\n  } else {\n    document.body.setAttribute('html-show-sidebar-toc', true)\n  }\n})\n</script>\n      \n  \n    "},{"id":"10037_100003","type":"chapter","name":"数据类型","fullPath":"F:\\passerby\\database\\redis\\04数据类型.md","url":"/chapter/10037_100003","content":"\n    \n    \n      <div class=\"crossnote markdown-preview  \">\n      \n<h1 id=\"redis-数据类型\">Redis 数据类型 </h1>\n<h2 id=\"string-字符串\">string 字符串 </h2>\n<p>最大能存储 512MB</p>\n<pre data-role=\"codeBlock\" data-info=\"\" class=\"language-text\"><code>set var \"name\"\nget var \ndel var\n</code></pre><h2 id=\"hash-哈希\">hash 哈希 </h2>\n<p>每个 hash 可以存储 2^32 -1 键值对（40多亿）</p>\n<pre data-role=\"codeBlock\" data-info=\"\" class=\"language-text\"><code>hset var name \"lisi\" age 20 \nhget var name \nhget var age\ndel var\n</code></pre><h2 id=\"list-列表\">list 列表 </h2>\n<p>列表最多可存储 232 - 1 元素</p>\n<pre data-role=\"codeBlock\" data-info=\"\" class=\"language-text\"><code>lpush test \"redis\" \"mongodb\"\nlrange test 0 2\ndel test\n</code></pre><h2 id=\"set-集合\">set 集合 </h2>\n<p>Set 是 string 类型的无序集合</p>\n<pre data-role=\"codeBlock\" data-info=\"\" class=\"language-text\"><code>sadd test redis\nsadd test mysql\nsmembers test \n</code></pre><h2 id=\"zset-有序集合\">zset 有序集合 </h2>\n<p>edis zset 和 set 一样也是string类型元素的集合,且不允许重复的成员<br>\n不同的是每个元素都会关联一个double类型的分数。redis正是通过分数来为集合中的成员进行从小到大的排序<br>\nzset的成员是唯一的,但分数(score)却可以重复</p>\n<pre data-role=\"codeBlock\" data-info=\"\" class=\"language-text\"><code>zadd test 20 redis\nzadd test 30 mysql\nzadd test 10 mongodb\nzrangbyscore test 0 1000\n</code></pre>\n      </div>\n      <div class=\"md-sidebar-toc\">\n<div class=\"md-toc\">\n<details style=\"padding:0;;padding-left:0px;\" open=\"\">\n        <summary class=\"md-toc-link-wrapper\">\n          <a href=\"#redis-数据类型\" class=\"md-toc-link\"><p>Redis 数据类型</p>\n</a>\n          </summary>\n        <div>\n          <div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#string-字符串\" class=\"md-toc-link\">\n            <p>string 字符串</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#hash-哈希\" class=\"md-toc-link\">\n            <p>hash 哈希</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#list-列表\" class=\"md-toc-link\">\n            <p>list 列表</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#set-集合\" class=\"md-toc-link\">\n            <p>set 集合</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#zset-有序集合\" class=\"md-toc-link\">\n            <p>zset 有序集合</p>\n\n          </a></div>\n        </div>\n      </details>\n    \n</div>\n</div>\n      <a id=\"sidebar-toc-btn\">≡</a>\n    \n    \n    \n    \n    \n    \n<script>\n\nvar sidebarTOCBtn = document.getElementById('sidebar-toc-btn')\nsidebarTOCBtn.addEventListener('click', function(event) {\n  event.stopPropagation()\n  if (document.body.hasAttribute('html-show-sidebar-toc')) {\n    document.body.removeAttribute('html-show-sidebar-toc')\n  } else {\n    document.body.setAttribute('html-show-sidebar-toc', true)\n  }\n})\n</script>\n      \n  \n    "},{"id":"10037_100004","type":"chapter","name":"命令","fullPath":"F:\\passerby\\database\\redis\\05命令.md","url":"/chapter/10037_100004","content":"\n    \n    \n      <div class=\"crossnote markdown-preview  \">\n      \n<h1 id=\"redis-命令\">Redis 命令 </h1>\n<blockquote>\n<p>ping 该命令用于检测 redis 服务是否启动</p>\n</blockquote>\n<blockquote>\n<p>quit 关闭当前连接</p>\n</blockquote>\n<blockquote>\n<p>select index 切换到指定的数据库</p>\n</blockquote>\n<blockquote>\n<p>echo messgae 打印字符串</p>\n</blockquote>\n<blockquote>\n<p>auth password 验证密码是否正确</p>\n</blockquote>\n<blockquote>\n<p>del key  该命令用于在 key 存在时删除 key</p>\n</blockquote>\n<blockquote>\n<p>dump key 序列化给定 key ，并返回被序列化的值</p>\n</blockquote>\n<blockquote>\n<p>exists key 检查给定 key 是否存在</p>\n</blockquote>\n<blockquote>\n<p>expire key second 为给定 key 设置过期时间，以秒计</p>\n</blockquote>\n<blockquote>\n<p>expireat key timestamp 不同在于 EXPIREAT 命令接受的时间参数是 UNIX 时间戳</p>\n</blockquote>\n<blockquote>\n<p>pexpire key millseconds 设置 key 的过期时间以毫秒计</p>\n</blockquote>\n<blockquote>\n<p>pexpireat key milliseconds-timestamp 设置key 过期时间的时间戳(unix timestamp) 以毫秒计</p>\n</blockquote>\n<blockquote>\n<p>keys pattern 查找所有符合给定模式 pattern 的 key</p>\n</blockquote>\n<blockquote>\n<p>move key db 将当前数据库的 key 移动到给定的数据库 db 当中</p>\n</blockquote>\n<blockquote>\n<p>presist key 移除 key 的过期时间，key 将持久保持</p>\n</blockquote>\n<blockquote>\n<p>pttl key 以毫秒为单位返回 key 的剩余的过期时间</p>\n</blockquote>\n<blockquote>\n<p>ttl key 以秒为单位，返回给定 key 的剩余生存时间</p>\n</blockquote>\n<blockquote>\n<p>randomkey 从当前数据库中随机返回一个 key</p>\n</blockquote>\n<blockquote>\n<p>rename key newkey 修改 key 的名称</p>\n</blockquote>\n<blockquote>\n<p>renamenx key newkey 仅当 newkey 不存在时，将 key 改名为 newkey</p>\n</blockquote>\n<blockquote>\n<p>type key 返回 key 所储存的值的类型</p>\n</blockquote>\n<blockquote>\n<p>bgsave 在后台异步保存当前数据库的数据到磁盘</p>\n</blockquote>\n<blockquote>\n<p>client list 获取连接到服务器的客户端连接列表</p>\n</blockquote>\n<blockquote>\n<p>client getname 获取连接的名称</p>\n</blockquote>\n<blockquote>\n<p>time 返回当前的服务器时间</p>\n</blockquote>\n<blockquote>\n<p>dbsize 返回当前数据库的key的个数</p>\n</blockquote>\n<blockquote>\n<p>flushall 删除所有数据库的所有key</p>\n</blockquote>\n<blockquote>\n<p>flushhbd 删除当前数据库的所有key</p>\n</blockquote>\n<blockquote>\n<p>save 同步保存数据到硬盘</p>\n</blockquote>\n<h2 id=\"string\">string </h2>\n<blockquote>\n<p>set key value  设置指定 key 的值</p>\n</blockquote>\n<blockquote>\n<p>get key 获取指定 key 的值</p>\n</blockquote>\n<blockquote>\n<p>getrange key start end 返回 key 中字符串值的子字符</p>\n</blockquote>\n<blockquote>\n<p>getset key value 将给定 key 的值设为 value ，并返回 key 的旧值</p>\n</blockquote>\n<blockquote>\n<p>getbit key offset 对 key 所储存的字符串值，获取指定偏移量上的位</p>\n</blockquote>\n<blockquote>\n<p>mget key1 key2 获取所有(一个或多个)给定 key 的值</p>\n</blockquote>\n<blockquote>\n<p>SETBIT key offset value 对 key 所储存的字符串值，设置或清除指定偏移量上的位(bit)</p>\n</blockquote>\n<blockquote>\n<p>setex key seconds value 将值 value 关联到 key ，并将 key 的过期时间设为 seconds</p>\n</blockquote>\n<blockquote>\n<p>setnx key value 只有在 key 不存在时设置 key 的值</p>\n</blockquote>\n<blockquote>\n<p>setrange key offset value 用 value 参数覆写给定 key 所储存的字符串值，从偏移量 offset 开始</p>\n</blockquote>\n<blockquote>\n<p>strlen key 返回 key 所储存的字符串值的长度</p>\n</blockquote>\n<blockquote>\n<p>mset key value key value 同时设置一个或多个 key-value 对</p>\n</blockquote>\n<blockquote>\n<p>msetex key value key value 同时设置一个或多个 key-value 对，当且仅当所有给定 key 都不存在</p>\n</blockquote>\n<blockquote>\n<p>psetex set millseconds value 个命令和 SETEX 命令相似，但它以毫秒为单位设置 key 的生存时间</p>\n</blockquote>\n<blockquote>\n<p>incr key 将 key 中储存的数字值增一</p>\n</blockquote>\n<blockquote>\n<p>incrby key increment 将 key 所储存的值加上给定的增量值</p>\n</blockquote>\n<blockquote>\n<p>incrgyfloat key increment 将 key 所储存的值加上给定的浮点增量值</p>\n</blockquote>\n<blockquote>\n<p>decr key 将 key 中储存的数字值减一</p>\n</blockquote>\n<blockquote>\n<p>decrby key descment key 所储存的值减去给定的减量值</p>\n</blockquote>\n<blockquote>\n<p>append key value 如果 key 已经存在并且是一个字符串， APPEND 命令将指定的 value 追加到该 key 原来值（value）的末尾</p>\n</blockquote>\n<h2 id=\"哈希\">哈希 </h2>\n<blockquote>\n<p>hdel key field1 field2 删除一个或多个哈希表字段</p>\n</blockquote>\n<blockquote>\n<p>hexists key field 查看哈希表 key 中，指定的字段是否存在。</p>\n</blockquote>\n<blockquote>\n<p>hget key field 获取存储在哈希表中指定字段的值</p>\n</blockquote>\n<blockquote>\n<p>hgetall key 获取在哈希表中指定 key 的所有字段和值</p>\n</blockquote>\n<blockquote>\n<p>hincrby key field increment 为哈希表 key 中的指定字段的整数值加上增量 increment</p>\n</blockquote>\n<blockquote>\n<p>hincrbyfloat key field increment 为哈希表 key 中的指定字段的浮点数值加上增量 increment</p>\n</blockquote>\n<blockquote>\n<p>hkeys key 获取所有哈希表中的字段</p>\n</blockquote>\n<blockquote>\n<p>hlen key 获取哈希表中字段的数量</p>\n</blockquote>\n<blockquote>\n<p>hmget key field1 field2 获取所有给定字段的值</p>\n</blockquote>\n<blockquote>\n<p>hmset key field value field value 同时将多个 field-value (域-值)对设置到哈希表 key 中</p>\n</blockquote>\n<blockquote>\n<p>hset key field value 将哈希表 key 中的字段 field 的值设为 value</p>\n</blockquote>\n<blockquote>\n<p>hsetnx key field value 只有在字段 field 不存在时，设置哈希表字段的值</p>\n</blockquote>\n<blockquote>\n<p>hvals key 获取哈希表中所有值</p>\n</blockquote>\n<blockquote>\n<p>hscan key cursor 迭代哈希表中的键值对</p>\n</blockquote>\n<h2 id=\"列表\">列表 </h2>\n<blockquote>\n<p>blpop key timeout 移出并获取列表的第一个元素， 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止</p>\n</blockquote>\n<blockquote>\n<p>brpop key timeout 移出并获取列表的最后一个元素， 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止</p>\n</blockquote>\n<blockquote>\n<p>brpoplpush source destiination timeout 从列表中弹出一个值，将弹出的元素插入到另外一个列表中并返回它； 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止。</p>\n</blockquote>\n<blockquote>\n<p>lindex key index 通过索引获取列表中的元素</p>\n</blockquote>\n<blockquote>\n<p>linsert key before|after pivot vlaue 在列表的元素前或者后插入元素</p>\n</blockquote>\n<blockquote>\n<p>llen key 获取列表长度</p>\n</blockquote>\n<blockquote>\n<p>lpop key 移出并获取列表的第一个元素</p>\n</blockquote>\n<blockquote>\n<p>lpush key value1 value2 将一个或多个值插入到列表头部</p>\n</blockquote>\n<blockquote>\n<p>lpushx key value 将一个值插入到已存在的列表头部</p>\n</blockquote>\n<blockquote>\n<p>lrange key start stop 获取列表指定范围内的元素</p>\n</blockquote>\n<blockquote>\n<p>lrem key count valur 移除列表元素</p>\n</blockquote>\n<blockquote>\n<p>lset key index value 通过索引设置列表元素的值</p>\n</blockquote>\n<blockquote>\n<p>ltrim key start stop 对一个列表进行修剪(trim)，就是说，让列表只保留指定区间内的元素，不在指定区间之内的元素都将被删除</p>\n</blockquote>\n<blockquote>\n<p>rpop key 移除列表的最后一个元素，返回值为移除的元素</p>\n</blockquote>\n<blockquote>\n<p>rpoplpush source destination 移除列表的最后一个元素，并将该元素添加到另一个列表并返回</p>\n</blockquote>\n<blockquote>\n<p>rpush key value 在列表中添加一个或多个值</p>\n</blockquote>\n<blockquote>\n<p>rpushx key value 为已存在的列表添加值</p>\n</blockquote>\n<h2 id=\"集合\">集合 </h2>\n<blockquote>\n<p>sass key member 向集合添加一个或多个成员</p>\n</blockquote>\n<blockquote>\n<p>scrad key 获取集合的成员数</p>\n</blockquote>\n<blockquote>\n<p>sdiff key key2 返回给定所有集合的差集</p>\n</blockquote>\n<blockquote>\n<p>sdffstore destination key1 key2 返回给定所有集合的差集并存储在 destination 中</p>\n</blockquote>\n<blockquote>\n<p>sinter key1 key2 返回给定所有集合的交集</p>\n</blockquote>\n<blockquote>\n<p>sinterstore destination key1 key2 返回给定所有集合的交集并存储在 destination 中</p>\n</blockquote>\n<blockquote>\n<p>sismember key member 判断 member 元素是否是集合 key 的成员</p>\n</blockquote>\n<blockquote>\n<p>smembers key 返回集合中的所有成员</p>\n</blockquote>\n<blockquote>\n<p>smove source destination member 将 member 元素从 source 集合移动到 destination 集合</p>\n</blockquote>\n<blockquote>\n<p>spop key 移除并返回集合中的一个随机元素</p>\n</blockquote>\n<blockquote>\n<p>srandmemember key count 返回集合中一个或多个随机数</p>\n</blockquote>\n<blockquote>\n<p>srem key member1 member2 移除集合中一个或多个成员</p>\n</blockquote>\n<blockquote>\n<p>sunion key1 key2 返回所有给定集合的并集</p>\n</blockquote>\n<blockquote>\n<p>sunionstore destination key1 key2 所有给定集合的并集存储在 destination 集合中</p>\n</blockquote>\n<blockquote>\n<p>sscan key cursor 迭代集合中的元素</p>\n</blockquote>\n<h2 id=\"zset\">zset </h2>\n<blockquote>\n<p>zadd key score member 向有序集合添加一个或多个成员，或者更新已存在成员的分数</p>\n</blockquote>\n<blockquote>\n<p>zcard key 获取有序集合的成员数</p>\n</blockquote>\n<blockquote>\n<p>zcount key min max 计算在有序集合中指定区间分数的成员数</p>\n</blockquote>\n<blockquote>\n<p>zincrby key incrment member 有序集合中对指定成员的分数加上增量 increment</p>\n</blockquote>\n<blockquote>\n<p>zinterscore destination numbers key 计算给定的一个或多个有序集的交集并将结果集存储在新的有序集合 key 中</p>\n</blockquote>\n<blockquote>\n<p>zlexcount key min max 在有序集合中计算指定字典区间内成员数量</p>\n</blockquote>\n<blockquote>\n<p>zrange key start stop 通过索引区间返回有序集合指定区间内的成员</p>\n</blockquote>\n<blockquote>\n<p>zrangebylex key min max 通过分数返回有序集合指定区间内的成员</p>\n</blockquote>\n<blockquote>\n<p>zrank key member 返回有序集合中指定成员的索引</p>\n</blockquote>\n<blockquote>\n<p>zrem key member 移除有序集合中的一个或多个成员</p>\n</blockquote>\n<blockquote>\n<p>zremrangebylex key min max 移除有序集合中给定的字典区间的所有成员</p>\n</blockquote>\n<blockquote>\n<p>zremrangebyscore key min max 移除有序集合中给定的分数区间的所有成员</p>\n</blockquote>\n<blockquote>\n<p>zrevange key start stop 返回有序集中指定区间内的成员，通过索引，分数从高到低</p>\n</blockquote>\n<blockquote>\n<p>zrevrangebyscore key min max 返回有序集中指定分数区间内的成员，分数从高到低排序</p>\n</blockquote>\n<blockquote>\n<p>zrevrank key member 返回有序集合中指定成员的排名，有序集成员按分数值递减</p>\n</blockquote>\n<blockquote>\n<p>zscore key member 返回有序集中，成员的分数值</p>\n</blockquote>\n<blockquote>\n<p>zunionstore destination numkeys key1 计算给定的一个或多个有序集的并集，并存储在新的 key 中</p>\n</blockquote>\n<blockquote>\n<p>zscan key cursor 迭代有序集合中的元素</p>\n</blockquote>\n<h2 id=\"hyperloglog\">HyperLogLog </h2>\n<blockquote>\n<p>HyperLogLog 是用来做基数统计的算法</p>\n</blockquote>\n<blockquote>\n<p>pfadd key element 添加指定元素到 HyperLogLog 中</p>\n</blockquote>\n<blockquote>\n<p>pfcount key 返回给定 HyperLogLog 的基数估算值</p>\n</blockquote>\n<blockquote>\n<p>pfmerge destkey sourcekey 将多个 HyperLogLog 合并为一个 HyperLogLog</p>\n</blockquote>\n<h2 id=\"发布订阅\">发布/订阅 </h2>\n<blockquote>\n<p>psubscribe pattern 订阅一个或多个符合给定模式的频道</p>\n</blockquote>\n<blockquote>\n<p>pubsub subcommand 查看订阅与发布系统状态</p>\n</blockquote>\n<blockquote>\n<p>publish channel messge 将信息发送到指定的频道。</p>\n</blockquote>\n<blockquote>\n<p>punsubscribe pattern 退订所有给定模式的频道</p>\n</blockquote>\n<blockquote>\n<p>subscribe channel 订阅给定的一个或多个频道的信息</p>\n</blockquote>\n<blockquote>\n<p>unsubscribe channel 指退订给定的频道</p>\n</blockquote>\n<h2 id=\"事务\">事务 </h2>\n<blockquote>\n<p>discard 取消事务，放弃执行事务块内的所有命令</p>\n</blockquote>\n<blockquote>\n<p>exec 执行所有事务块内的命令</p>\n</blockquote>\n<blockquote>\n<p>multi 标记一个事务块的开始</p>\n</blockquote>\n<blockquote>\n<p>unwatch 取消 WATCH 命令对所有 key 的监视</p>\n</blockquote>\n<blockquote>\n<p>watch key 监视一个(或多个) key ，如果在事务执行之前这个(或这些) key 被其他命令所改动，那么事务将被打断</p>\n</blockquote>\n\n      </div>\n      <div class=\"md-sidebar-toc\">\n<div class=\"md-toc\">\n<details style=\"padding:0;;padding-left:0px;\" open=\"\">\n        <summary class=\"md-toc-link-wrapper\">\n          <a href=\"#redis-命令\" class=\"md-toc-link\"><p>Redis 命令</p>\n</a>\n          </summary>\n        <div>\n          <div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#string\" class=\"md-toc-link\">\n            <p>string</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#哈希\" class=\"md-toc-link\">\n            <p>哈希</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#列表\" class=\"md-toc-link\">\n            <p>列表</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#集合\" class=\"md-toc-link\">\n            <p>集合</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#zset\" class=\"md-toc-link\">\n            <p>zset</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#hyperloglog\" class=\"md-toc-link\">\n            <p>HyperLogLog</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#发布订阅\" class=\"md-toc-link\">\n            <p>发布/订阅</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#事务\" class=\"md-toc-link\">\n            <p>事务</p>\n\n          </a></div>\n        </div>\n      </details>\n    \n</div>\n</div>\n      <a id=\"sidebar-toc-btn\">≡</a>\n    \n    \n    \n    \n    \n    \n<script>\n\nvar sidebarTOCBtn = document.getElementById('sidebar-toc-btn')\nsidebarTOCBtn.addEventListener('click', function(event) {\n  event.stopPropagation()\n  if (document.body.hasAttribute('html-show-sidebar-toc')) {\n    document.body.removeAttribute('html-show-sidebar-toc')\n  } else {\n    document.body.setAttribute('html-show-sidebar-toc', true)\n  }\n})\n</script>\n      \n  \n    "},{"id":"10037_100005","type":"chapter","name":"高级","fullPath":"F:\\passerby\\database\\redis\\06高级.md","url":"/chapter/10037_100005","content":"\n    \n    \n      <div class=\"crossnote markdown-preview  \">\n      \n<h2 id=\"数据备份与恢复\">数据备份与恢复 </h2>\n<blockquote>\n<p>BGSAVE<br>\nSAVE</p>\n</blockquote>\n<h2 id=\"安全\">安全 </h2>\n<blockquote>\n<p>config get requirepass<br>\nconfig set requirepass password<br>\nauth password</p>\n</blockquote>\n<h2 id=\"性能测试\">性能测试 </h2>\n<blockquote>\n<p>redis-benchmark</p>\n</blockquote>\n<h2 id=\"客户端连接\">客户端连接 </h2>\n<blockquote>\n<p>config get maxclients</p>\n</blockquote>\n<h2 id=\"php-使用-redis\">PHP 使用 Redis </h2>\n<blockquote>\n<p>安装</p>\n</blockquote>\n<pre data-role=\"codeBlock\" data-info=\"\" class=\"language-text\"><code>wget https://github.com/phpredis/phpredis/archive/3.1.4.tar.gz\ntar -zxvf phpredis-3.1.4.tar.gz\ncd phpredis-3.1.4    \n./configure --with-php-config=/usr/local/php/bin/php-config\nmake &amp;&amp; make install\nvi php.ini\nextension_dir = \"/usr/local/php/lib/php/extensions/no-debug-zts-20090626\"\nextension=redis.so\nservice apache restart\n</code></pre><pre data-role=\"codeBlock\" data-info=\"\" class=\"language-text\"><code>$redis = new Redis();\n$redis-&gt;connect('127.0.0.1', 6379);\necho \"Connection to server successfully\";\necho \"Server is running: \" . $redis-&gt;ping();\n$redis-&gt;set(\"tutorial-name\", \"Redis tutorial\")\necho \"Stored string in redis:: \" . $redis-&gt;get(\"tutorial-name\")\\\n$redis-&gt;lpush(\"tutorial-list\", \"Redis\");\n$redis-&gt;lpush(\"tutorial-list\", \"Mongodb\");\n$redis-&gt;lpush(\"tutorial-list\", \"Mysql\");\n$arList = $redis-&gt;lrange(\"tutorial-list\", 0 ,5)\nvar_dump($arList)\n</code></pre>\n      </div>\n      <div class=\"md-sidebar-toc\">\n<div class=\"md-toc\">\n<div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:18px\">\n          <a href=\"#数据备份与恢复\" class=\"md-toc-link\">\n            <p>数据备份与恢复</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:18px\">\n          <a href=\"#安全\" class=\"md-toc-link\">\n            <p>安全</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:18px\">\n          <a href=\"#性能测试\" class=\"md-toc-link\">\n            <p>性能测试</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:18px\">\n          <a href=\"#客户端连接\" class=\"md-toc-link\">\n            <p>客户端连接</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:18px\">\n          <a href=\"#php-使用-redis\" class=\"md-toc-link\">\n            <p>PHP 使用 Redis</p>\n\n          </a></div>\n</div>\n</div>\n      <a id=\"sidebar-toc-btn\">≡</a>\n    \n    \n    \n    \n    \n    \n<script>\n\nvar sidebarTOCBtn = document.getElementById('sidebar-toc-btn')\nsidebarTOCBtn.addEventListener('click', function(event) {\n  event.stopPropagation()\n  if (document.body.hasAttribute('html-show-sidebar-toc')) {\n    document.body.removeAttribute('html-show-sidebar-toc')\n  } else {\n    document.body.setAttribute('html-show-sidebar-toc', true)\n  }\n})\n</script>\n      \n  \n    "}],"type":"book","url":"/chapter/10037_100000"},"chapterInfo":{"id":"10037_100000","type":"chapter","name":"介绍","fullPath":"F:\\passerby\\database\\redis\\01介绍.md","url":"/chapter/10037_100000","content":"\n    \n    \n      <div class=\"crossnote markdown-preview  \">\n      \n<h1 id=\"redis-简介\">Redis 简介 </h1>\n<blockquote>\n<p>Redis 是完全开源免费的，遵守BSD协议，是一个高性能的key-value数据库</p>\n</blockquote>\n<h2 id=\"特点\">特点： </h2>\n<ol>\n<li>Redis支持数据的持久化，可以将内存中的数据保存在磁盘中，重启的时候可以再次加载进行使用</li>\n<li>Redis不仅仅支持简单的key-value类型的数据，同时还提供list，set，zset，hash等数据结构的存储</li>\n<li>Redis支持数据的备份，即master-slave模式的数据备份</li>\n</ol>\n<h2 id=\"优势\">优势： </h2>\n<ol>\n<li>性能极高 – Redis能读的速度是110000次/s,写的速度是81000次/s</li>\n<li>丰富的数据类型 – Redis支持二进制案例的 Strings, Lists, Hashes, Sets 及 Ordered Sets 数据类型操作</li>\n<li>原子 – Redis的所有操作都是原子性的，意思就是要么成功执行要么失败完全不执行。单个操作是原子性的。多个操作也支持事务，即原子性，通过MULTI和EXEC指令包起来</li>\n<li>丰富的特性 – Redis还支持 publish/subscribe, 通知, key 过期等等特性</li>\n</ol>\n\n      </div>\n      <div class=\"md-sidebar-toc\">\n<div class=\"md-toc\">\n<details style=\"padding:0;;padding-left:0px;\" open=\"\">\n        <summary class=\"md-toc-link-wrapper\">\n          <a href=\"#redis-简介\" class=\"md-toc-link\"><p>Redis 简介</p>\n</a>\n          </summary>\n        <div>\n          <div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#特点\" class=\"md-toc-link\">\n            <p>特点：</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#优势\" class=\"md-toc-link\">\n            <p>优势：</p>\n\n          </a></div>\n        </div>\n      </details>\n    \n</div>\n</div>\n      <a id=\"sidebar-toc-btn\">≡</a>\n    \n    \n    \n    \n    \n    \n<script>\n\nvar sidebarTOCBtn = document.getElementById('sidebar-toc-btn')\nsidebarTOCBtn.addEventListener('click', function(event) {\n  event.stopPropagation()\n  if (document.body.hasAttribute('html-show-sidebar-toc')) {\n    document.body.removeAttribute('html-show-sidebar-toc')\n  } else {\n    document.body.setAttribute('html-show-sidebar-toc', true)\n  }\n})\n</script>\n      \n  \n    "}},"__N_SSG":true}