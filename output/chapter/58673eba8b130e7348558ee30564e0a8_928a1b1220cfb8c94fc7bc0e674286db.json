{"pageProps":{"bookInfo":{"id":"58673eba8b130e7348558ee30564e0a8","name":"marked源码解析","fullPath":"F:\\passerby\\source\\marked源码解析","chapterList":[{"id":"58673eba8b130e7348558ee30564e0a8_e373581e0221c78fde3ed2a81f7dc1fd","type":"chapter","name":"00前置.md","fullPath":"F:\\passerby\\source\\marked源码解析\\00前置.md","url":"/chapter/58673eba8b130e7348558ee30564e0a8_e373581e0221c78fde3ed2a81f7dc1fd"},{"id":"58673eba8b130e7348558ee30564e0a8_c872f1c85a156ee39f1e95b391df14e4","type":"chapter","name":"01单例Marked.md","fullPath":"F:\\passerby\\source\\marked源码解析\\01单例Marked.md","url":"/chapter/58673eba8b130e7348558ee30564e0a8_c872f1c85a156ee39f1e95b391df14e4"},{"id":"58673eba8b130e7348558ee30564e0a8_cb4742a4f7aec1ec432cd2b96e87b011","type":"chapter","name":"02词法分析latex.md","fullPath":"F:\\passerby\\source\\marked源码解析\\02词法分析latex.md","url":"/chapter/58673eba8b130e7348558ee30564e0a8_cb4742a4f7aec1ec432cd2b96e87b011"},{"id":"58673eba8b130e7348558ee30564e0a8_928a1b1220cfb8c94fc7bc0e674286db","type":"chapter","name":"03分词器Tokenizer.md","fullPath":"F:\\passerby\\source\\marked源码解析\\03分词器Tokenizer.md","url":"/chapter/58673eba8b130e7348558ee30564e0a8_928a1b1220cfb8c94fc7bc0e674286db"},{"id":"58673eba8b130e7348558ee30564e0a8_6e5bc1d3b7941f518f5b2a7ffa882251","type":"chapter","name":"04规则rules.md","fullPath":"F:\\passerby\\source\\marked源码解析\\04规则rules.md","url":"/chapter/58673eba8b130e7348558ee30564e0a8_6e5bc1d3b7941f518f5b2a7ffa882251"},{"id":"58673eba8b130e7348558ee30564e0a8_eb9c33f6bdeedf087da65aec0e4f1463","type":"chapter","name":"05Token.md","fullPath":"F:\\passerby\\source\\marked源码解析\\05Token.md","url":"/chapter/58673eba8b130e7348558ee30564e0a8_eb9c33f6bdeedf087da65aec0e4f1463"}],"title":"03分词器Tokenizer","type":"book","url":"/book/58673eba8b130e7348558ee30564e0a8","content":"\n    \n    \n      <div class=\"crossnote markdown-preview  \">\n      \n<h1 id=\"分词器-tokenizer\">分词器 Tokenizer </h1>\n<pre data-role=\"codeBlock\" data-info=\"\" class=\"language-text\"><code>{\n    options: {},\n    rules: {\n        other: {},\n        block: {},\n        inline: {}\n    },\n    lexer: {}\n}\n\n</code></pre><h2 id=\"规则\">规则 </h2>\n<p>具体正则参考<a href=\"./04%E8%A7%84%E5%88%99rules.md\">规则rules</a><br>\n生成的词法凭证参考<a href=\"./05Token.md\">Token</a></p>\n<h3 id=\"块级类型-block\">块级类型 block </h3>\n<h4 id=\"新行\">新行 </h4>\n<pre data-role=\"codeBlock\" data-info=\"typescript\" class=\"language-typescript typescript\"><code><span class=\"token function\">space</span><span class=\"token punctuation\">(</span>src<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Tokens<span class=\"token punctuation\">.</span>Space <span class=\"token operator\">|</span> <span class=\"token keyword keyword-undefined\">undefined</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-const\">const</span> cap <span class=\"token operator\">=</span> <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>rules<span class=\"token punctuation\">.</span>block<span class=\"token punctuation\">.</span>newline<span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword keyword-if\">if</span> <span class=\"token punctuation\">(</span>cap <span class=\"token operator\">&amp;&amp;</span> cap<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword keyword-return\">return</span> <span class=\"token punctuation\">{</span>\n            type<span class=\"token operator\">:</span> <span class=\"token string\">'space'</span><span class=\"token punctuation\">,</span>\n            raw<span class=\"token operator\">:</span> cap<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><h4 id=\"code\">code </h4>\n<pre data-role=\"codeBlock\" data-info=\"typescript\" class=\"language-typescript typescript\"><code><span class=\"token function\">code</span><span class=\"token punctuation\">(</span>src<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Tokens<span class=\"token punctuation\">.</span>Code <span class=\"token operator\">|</span> <span class=\"token keyword keyword-undefined\">undefined</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-const\">const</span> cap <span class=\"token operator\">=</span> <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>rules<span class=\"token punctuation\">.</span>block<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword keyword-if\">if</span> <span class=\"token punctuation\">(</span>cap<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword keyword-const\">const</span> text <span class=\"token operator\">=</span> cap<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>rules<span class=\"token punctuation\">.</span>other<span class=\"token punctuation\">.</span>codeRemoveIndent<span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword keyword-return\">return</span> <span class=\"token punctuation\">{</span>\n            type<span class=\"token operator\">:</span> <span class=\"token string\">'code'</span><span class=\"token punctuation\">,</span>\n            raw<span class=\"token operator\">:</span> cap<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            codeBlockStyle<span class=\"token operator\">:</span> <span class=\"token string\">'indented'</span><span class=\"token punctuation\">,</span>\n            text<span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>pedantic\n            <span class=\"token operator\">?</span> <span class=\"token function\">rtrim</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">,</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token operator\">:</span> text<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><h4 id=\"fences-代码块\">fences 代码块 </h4>\n<pre data-role=\"codeBlock\" data-info=\"typescript\" class=\"language-typescript typescript\"><code><span class=\"token function\">fences</span><span class=\"token punctuation\">(</span>src<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Tokens<span class=\"token punctuation\">.</span>Code <span class=\"token operator\">|</span> <span class=\"token keyword keyword-undefined\">undefined</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-const\">const</span> cap <span class=\"token operator\">=</span> <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>rules<span class=\"token punctuation\">.</span>block<span class=\"token punctuation\">.</span>fences<span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword keyword-if\">if</span> <span class=\"token punctuation\">(</span>cap<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword keyword-const\">const</span> raw <span class=\"token operator\">=</span> cap<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword keyword-const\">const</span> text <span class=\"token operator\">=</span> <span class=\"token function\">indentCodeCompensation</span><span class=\"token punctuation\">(</span>raw<span class=\"token punctuation\">,</span> cap<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>rules<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword keyword-return\">return</span> <span class=\"token punctuation\">{</span>\n            type<span class=\"token operator\">:</span> <span class=\"token string\">'code'</span><span class=\"token punctuation\">,</span>\n            raw<span class=\"token punctuation\">,</span>\n            lang<span class=\"token operator\">:</span> cap<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span> cap<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>rules<span class=\"token punctuation\">.</span>inline<span class=\"token punctuation\">.</span>anyPunctuation<span class=\"token punctuation\">,</span> <span class=\"token string\">'$1'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> cap<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            text<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><h4 id=\"headingheading-标题\">heading/heading 标题 </h4>\n<pre data-role=\"codeBlock\" data-info=\"typescript\" class=\"language-typescript typescript\"><code><span class=\"token function\">heading</span><span class=\"token punctuation\">(</span>src<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Tokens<span class=\"token punctuation\">.</span>Heading <span class=\"token operator\">|</span> <span class=\"token keyword keyword-undefined\">undefined</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-const\">const</span> cap <span class=\"token operator\">=</span> <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>rules<span class=\"token punctuation\">.</span>block<span class=\"token punctuation\">.</span>heading<span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword keyword-if\">if</span> <span class=\"token punctuation\">(</span>cap<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword keyword-let\">let</span> text <span class=\"token operator\">=</span> cap<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword keyword-if\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>rules<span class=\"token punctuation\">.</span>other<span class=\"token punctuation\">.</span>endingHash<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword keyword-const\">const</span> trimmed <span class=\"token operator\">=</span> <span class=\"token function\">rtrim</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">,</span> <span class=\"token string\">'#'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword keyword-if\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>pedantic<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            text <span class=\"token operator\">=</span> trimmed<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword keyword-else\">else</span> <span class=\"token keyword keyword-if\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>trimmed <span class=\"token operator\">||</span> <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>rules<span class=\"token punctuation\">.</span>other<span class=\"token punctuation\">.</span>endingSpaceChar<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>trimmed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            text <span class=\"token operator\">=</span> trimmed<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword keyword-return\">return</span> <span class=\"token punctuation\">{</span>\n            type<span class=\"token operator\">:</span> <span class=\"token string\">'heading'</span><span class=\"token punctuation\">,</span>\n            raw<span class=\"token operator\">:</span> cap<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            depth<span class=\"token operator\">:</span> cap<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span>\n            text<span class=\"token punctuation\">,</span>\n            tokens<span class=\"token operator\">:</span> <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>lexer<span class=\"token punctuation\">.</span><span class=\"token function\">inline</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><h4 id=\"hr-水平线\">hr 水平线 </h4>\n<pre data-role=\"codeBlock\" data-info=\"typescript\" class=\"language-typescript typescript\"><code><span class=\"token function\">hr</span><span class=\"token punctuation\">(</span>src<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Tokens<span class=\"token punctuation\">.</span>Hr <span class=\"token operator\">|</span> <span class=\"token keyword keyword-undefined\">undefined</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-const\">const</span> cap <span class=\"token operator\">=</span> <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>rules<span class=\"token punctuation\">.</span>block<span class=\"token punctuation\">.</span>hr<span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword keyword-if\">if</span> <span class=\"token punctuation\">(</span>cap<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword keyword-return\">return</span> <span class=\"token punctuation\">{</span>\n            type<span class=\"token operator\">:</span> <span class=\"token string\">'hr'</span><span class=\"token punctuation\">,</span>\n            raw<span class=\"token operator\">:</span> <span class=\"token function\">rtrim</span><span class=\"token punctuation\">(</span>cap<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><h4 id=\"blockquote-块引用\">blockquote 块引用 </h4>\n<pre data-role=\"codeBlock\" data-info=\"typescript\" class=\"language-typescript typescript\"><code><span class=\"token function\">blockquote</span><span class=\"token punctuation\">(</span>src<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Tokens<span class=\"token punctuation\">.</span>Blockquote <span class=\"token operator\">|</span> <span class=\"token keyword keyword-undefined\">undefined</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-const\">const</span> cap <span class=\"token operator\">=</span> <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>rules<span class=\"token punctuation\">.</span>block<span class=\"token punctuation\">.</span>blockquote<span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword keyword-if\">if</span> <span class=\"token punctuation\">(</span>cap<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword keyword-let\">let</span> lines <span class=\"token operator\">=</span> <span class=\"token function\">rtrim</span><span class=\"token punctuation\">(</span>cap<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword keyword-let\">let</span> raw <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword keyword-let\">let</span> text <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword keyword-const\">const</span> tokens<span class=\"token operator\">:</span> Token<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword keyword-while\">while</span> <span class=\"token punctuation\">(</span>lines<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword keyword-let\">let</span> inBlockquote <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword keyword-const\">const</span> currentLines <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword keyword-let\">let</span> i<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword keyword-for\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> lines<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword keyword-if\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>rules<span class=\"token punctuation\">.</span>other<span class=\"token punctuation\">.</span>blockquoteStart<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>lines<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                currentLines<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>lines<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                inBlockquote <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword keyword-else\">else</span> <span class=\"token keyword keyword-if\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>inBlockquote<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                currentLines<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>lines<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword keyword-else\">else</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword keyword-break\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        lines <span class=\"token operator\">=</span> lines<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword keyword-const\">const</span> currentRaw <span class=\"token operator\">=</span> currentLines<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword keyword-const\">const</span> currentText <span class=\"token operator\">=</span> currentRaw\n        <span class=\"token comment\">// precede setext continuation with 4 spaces so it isn't a setext</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>rules<span class=\"token punctuation\">.</span>other<span class=\"token punctuation\">.</span>blockquoteSetextReplace<span class=\"token punctuation\">,</span> <span class=\"token string\">'\\n    $1'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>rules<span class=\"token punctuation\">.</span>other<span class=\"token punctuation\">.</span>blockquoteSetextReplace2<span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        raw <span class=\"token operator\">=</span> raw <span class=\"token operator\">?</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>raw<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\\n</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>currentRaw<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token operator\">:</span> currentRaw<span class=\"token punctuation\">;</span>\n        text <span class=\"token operator\">=</span> text <span class=\"token operator\">?</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>text<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\\n</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>currentText<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token operator\">:</span> currentText<span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// parse blockquote lines as top level tokens</span>\n        <span class=\"token comment\">// merge paragraphs if this is a continuation</span>\n        <span class=\"token keyword keyword-const\">const</span> top <span class=\"token operator\">=</span> <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>lexer<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>top<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>lexer<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>top <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>lexer<span class=\"token punctuation\">.</span><span class=\"token function\">blockTokens</span><span class=\"token punctuation\">(</span>currentText<span class=\"token punctuation\">,</span> tokens<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span>lexer<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>top <span class=\"token operator\">=</span> top<span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// if there is no continuation then we are done</span>\n        <span class=\"token keyword keyword-if\">if</span> <span class=\"token punctuation\">(</span>lines<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword keyword-break\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword keyword-const\">const</span> lastToken <span class=\"token operator\">=</span> tokens<span class=\"token punctuation\">.</span><span class=\"token function\">at</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword keyword-if\">if</span> <span class=\"token punctuation\">(</span>lastToken<span class=\"token operator\">?.</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'code'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// blockquote continuation cannot be preceded by a code block</span>\n            <span class=\"token keyword keyword-break\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword keyword-else\">else</span> <span class=\"token keyword keyword-if\">if</span> <span class=\"token punctuation\">(</span>lastToken<span class=\"token operator\">?.</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'blockquote'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// include continuation in nested blockquote</span>\n            <span class=\"token keyword keyword-const\">const</span> oldToken <span class=\"token operator\">=</span> lastToken <span class=\"token keyword keyword-as\">as</span> Tokens<span class=\"token punctuation\">.</span>Blockquote<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword keyword-const\">const</span> newText <span class=\"token operator\">=</span> oldToken<span class=\"token punctuation\">.</span>raw <span class=\"token operator\">+</span> <span class=\"token string\">'\\n'</span> <span class=\"token operator\">+</span> lines<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword keyword-const\">const</span> newToken <span class=\"token operator\">=</span> <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">blockquote</span><span class=\"token punctuation\">(</span>newText<span class=\"token punctuation\">)</span><span class=\"token operator\">!</span><span class=\"token punctuation\">;</span>\n            tokens<span class=\"token punctuation\">[</span>tokens<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> newToken<span class=\"token punctuation\">;</span>\n\n            raw <span class=\"token operator\">=</span> raw<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> raw<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> oldToken<span class=\"token punctuation\">.</span>raw<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> newToken<span class=\"token punctuation\">.</span>raw<span class=\"token punctuation\">;</span>\n            text <span class=\"token operator\">=</span> text<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> text<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> oldToken<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> newToken<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword keyword-break\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword keyword-else\">else</span> <span class=\"token keyword keyword-if\">if</span> <span class=\"token punctuation\">(</span>lastToken<span class=\"token operator\">?.</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'list'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// include continuation in nested list</span>\n            <span class=\"token keyword keyword-const\">const</span> oldToken <span class=\"token operator\">=</span> lastToken <span class=\"token keyword keyword-as\">as</span> Tokens<span class=\"token punctuation\">.</span>List<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword keyword-const\">const</span> newText <span class=\"token operator\">=</span> oldToken<span class=\"token punctuation\">.</span>raw <span class=\"token operator\">+</span> <span class=\"token string\">'\\n'</span> <span class=\"token operator\">+</span> lines<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword keyword-const\">const</span> newToken <span class=\"token operator\">=</span> <span class=\"token keyword keyword-this\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span>newText<span class=\"token punctuation\">)</span><span class=\"token operator\">!</span><span class=\"token punctuation\">;</span>\n            tokens<span class=\"token punctuation\">[</span>tokens<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> newToken<span class=\"token punctuation\">;</span>\n            raw <span class=\"token operator\">=</span> raw<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> raw<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> lastToken<span class=\"token punctuation\">.</span>raw<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> newToken<span class=\"token punctuation\">.</span>raw<span class=\"token punctuation\">;</span>\n            text <span class=\"token operator\">=</span> text<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> text<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> oldToken<span class=\"token punctuation\">.</span>raw<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> newToken<span class=\"token punctuation\">.</span>raw<span class=\"token punctuation\">;</span>\n            lines <span class=\"token operator\">=</span> newText<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span>tokens<span class=\"token punctuation\">.</span><span class=\"token function\">at</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!</span><span class=\"token punctuation\">.</span>raw<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword keyword-continue\">continue</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword keyword-return\">return</span> <span class=\"token punctuation\">{</span>\n        type<span class=\"token operator\">:</span> <span class=\"token string\">'blockquote'</span><span class=\"token punctuation\">,</span>\n        raw<span class=\"token punctuation\">,</span>\n        tokens<span class=\"token punctuation\">,</span>\n        text<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><h4 id=\"list-列表\">list 列表 </h4>\n<pre data-role=\"codeBlock\" data-info=\"js\" class=\"language-javascript js\"><code><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'list'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">raw</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> ordered： <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">start</span><span class=\"token operator\">:</span> number<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">loose</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">item</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span>\n</code></pre><h4 id=\"html\">html </h4>\n<pre data-role=\"codeBlock\" data-info=\"js\" class=\"language-javascript js\"><code><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'html'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">block</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>  <span class=\"token literal-property property\">raw</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">pre</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">text</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">}</span>\n</code></pre><h4 id=\"def-引用\">def 引用 </h4>\n<pre data-role=\"codeBlock\" data-info=\"js\" class=\"language-javascript js\"><code><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'def'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">tag</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">href</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>  <span class=\"token literal-property property\">raw</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">}</span>\n</code></pre><h4 id=\"table-表格\">table 表格 </h4>\n<pre data-role=\"codeBlock\" data-info=\"js\" class=\"language-javascript js\"><code><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'table'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">raw</span><span class=\"token operator\">:</span> cap<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">header</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">align</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">rows</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre><h4 id=\"paragraph-段落\">paragraph 段落 </h4>\n<pre data-role=\"codeBlock\" data-info=\"js\" class=\"language-javascript js\"><code><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'paragraph'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">raw</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">text</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">tokens</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span>\n</code></pre><h4 id=\"text-文本\">text 文本 </h4>\n<pre data-role=\"codeBlock\" data-info=\"js\" class=\"language-javascript js\"><code><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'text'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">raw</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">text</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">tokens</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span>\n</code></pre><h4 id=\"escape-转义字符\">escape 转义字符 </h4>\n<pre data-role=\"codeBlock\" data-info=\"js\" class=\"language-javascript js\"><code><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'escape'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">raw</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">text</span><span class=\"token operator\">:</span> string <span class=\"token punctuation\">}</span>\n</code></pre><h3 id=\"行内类型-inline\">行内类型 inline </h3>\n<h4 id=\"tag-标签\">tag 标签 </h4>\n<pre data-role=\"codeBlock\" data-info=\"js\" class=\"language-javascript js\"><code><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'html'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">raw</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">inLink</span><span class=\"token operator\">:</span> boolean<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">inRawBlock</span><span class=\"token operator\">:</span> boolean<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">block</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">text</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre><h4 id=\"linkreflink-链接\">link/reflink 链接 </h4>\n<pre data-role=\"codeBlock\" data-info=\"js\" class=\"language-javascript js\"><code><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'link'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">raw</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">,</span>  <span class=\"token literal-property property\">href</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">text</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">tokens</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span>\n</code></pre><h4 id=\"emstrong-斜体加粗\">emStrong 斜体加粗 </h4>\n<pre data-role=\"codeBlock\" data-info=\"js\" class=\"language-javascript js\"><code><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'em|strong'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">raw</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">text</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">,</span>  <span class=\"token literal-property property\">tokens</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>  <span class=\"token punctuation\">}</span>\n</code></pre><h4 id=\"codespan-单行代码\">codespan 单行代码 </h4>\n<pre data-role=\"codeBlock\" data-info=\"js\" class=\"language-javascript js\"><code><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'codespan'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">raw</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">text</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre><h4 id=\"br-换行\">br 换行 </h4>\n<pre data-role=\"codeBlock\" data-info=\"js\" class=\"language-javascript js\"><code><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'br'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">raw</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre><h4 id=\"del-删除\">del 删除 </h4>\n<pre data-role=\"codeBlock\" data-info=\"js\" class=\"language-javascript js\"><code><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'del'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">raw</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">text</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">token</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre><h4 id=\"autolink\">autolink </h4>\n<p>{ type: 'link', raw: string,  href: string, title: string, text: string, tokens: [{ type: 'text', raw: string, text: string }] }</p>\n<h4 id=\"inlinetext-行内文本\">inlineText 行内文本 </h4>\n<pre data-role=\"codeBlock\" data-info=\"js\" class=\"language-javascript js\"><code><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'text'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">raw</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">text</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">escaped</span><span class=\"token operator\">:</span> boolean <span class=\"token punctuation\">}</span>\n</code></pre><h3 id=\"其他类型-other\">其他类型 other </h3>\n<h4 id=\"表格相关\">表格相关 </h4>\n<ol>\n<li>tableAlignRight</li>\n<li>tableAlignLeft</li>\n<li>tableAlignCenter</li>\n<li>tableRowBlankLine</li>\n<li>tableDelimiter</li>\n</ol>\n<h4 id=\"code相关\">code相关 </h4>\n<ol>\n<li>indentCodeCompensation</li>\n<li>codeRemoveIndent</li>\n</ol>\n<h4 id=\"文本相关\">文本相关 </h4>\n<ol>\n<li>beginningSpace</li>\n<li>endingHash</li>\n<li>endingSpaceChar</li>\n<li>blockquoteStart</li>\n<li>blockquoteSetextReplace/blockquoteSetextReplace2</li>\n<li>blankLine</li>\n<li>doubleBlankLine</li>\n<li>anyLine</li>\n</ol>\n<h4 id=\"标签相关\">标签相关 </h4>\n<ol>\n<li>startATag</li>\n<li>endATag</li>\n<li>startPreScriptTag</li>\n<li>endPreScriptTag</li>\n</ol>\n\n      </div>\n      <div class=\"md-sidebar-toc\">\n<div class=\"md-toc\">\n<details style=\"padding:0;;padding-left:0px;\" open=\"\">\n        <summary class=\"md-toc-link-wrapper\">\n          <a href=\"#分词器-tokenizer\" class=\"md-toc-link\"><p>分词器 Tokenizer</p>\n</a>\n          </summary>\n        <div>\n          <details style=\"padding:0;;padding-left:24px;\" open=\"\">\n        <summary class=\"md-toc-link-wrapper\">\n          <a href=\"#规则\" class=\"md-toc-link\"><p>规则</p>\n</a>\n          </summary>\n        <div>\n          <details style=\"padding:0;;padding-left:24px;\" open=\"\">\n        <summary class=\"md-toc-link-wrapper\">\n          <a href=\"#块级类型-block\" class=\"md-toc-link\"><p>块级类型 block</p>\n</a>\n          </summary>\n        <div>\n          <div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#新行\" class=\"md-toc-link\">\n            <p>新行</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#code\" class=\"md-toc-link\">\n            <p>code</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#fences-代码块\" class=\"md-toc-link\">\n            <p>fences 代码块</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#headingheading-标题\" class=\"md-toc-link\">\n            <p>heading/heading 标题</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#hr-水平线\" class=\"md-toc-link\">\n            <p>hr 水平线</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#blockquote-块引用\" class=\"md-toc-link\">\n            <p>blockquote 块引用</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#list-列表\" class=\"md-toc-link\">\n            <p>list 列表</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#html\" class=\"md-toc-link\">\n            <p>html</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#def-引用\" class=\"md-toc-link\">\n            <p>def 引用</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#table-表格\" class=\"md-toc-link\">\n            <p>table 表格</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#paragraph-段落\" class=\"md-toc-link\">\n            <p>paragraph 段落</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#text-文本\" class=\"md-toc-link\">\n            <p>text 文本</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#escape-转义字符\" class=\"md-toc-link\">\n            <p>escape 转义字符</p>\n\n          </a></div>\n        </div>\n      </details>\n    <details style=\"padding:0;;padding-left:24px;\" open=\"\">\n        <summary class=\"md-toc-link-wrapper\">\n          <a href=\"#行内类型-inline\" class=\"md-toc-link\"><p>行内类型 inline</p>\n</a>\n          </summary>\n        <div>\n          <div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#tag-标签\" class=\"md-toc-link\">\n            <p>tag 标签</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#linkreflink-链接\" class=\"md-toc-link\">\n            <p>link/reflink 链接</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#emstrong-斜体加粗\" class=\"md-toc-link\">\n            <p>emStrong 斜体加粗</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#codespan-单行代码\" class=\"md-toc-link\">\n            <p>codespan 单行代码</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#br-换行\" class=\"md-toc-link\">\n            <p>br 换行</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#del-删除\" class=\"md-toc-link\">\n            <p>del 删除</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#autolink\" class=\"md-toc-link\">\n            <p>autolink</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#inlinetext-行内文本\" class=\"md-toc-link\">\n            <p>inlineText 行内文本</p>\n\n          </a></div>\n        </div>\n      </details>\n    <details style=\"padding:0;;padding-left:24px;\" open=\"\">\n        <summary class=\"md-toc-link-wrapper\">\n          <a href=\"#其他类型-other\" class=\"md-toc-link\"><p>其他类型 other</p>\n</a>\n          </summary>\n        <div>\n          <div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#表格相关\" class=\"md-toc-link\">\n            <p>表格相关</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#code相关\" class=\"md-toc-link\">\n            <p>code相关</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#文本相关\" class=\"md-toc-link\">\n            <p>文本相关</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#标签相关\" class=\"md-toc-link\">\n            <p>标签相关</p>\n\n          </a></div>\n        </div>\n      </details>\n    \n        </div>\n      </details>\n    \n        </div>\n      </details>\n    \n</div>\n</div>\n      <a id=\"sidebar-toc-btn\">≡</a>\n    \n    \n    \n    \n    \n    \n<script>\n\nvar sidebarTOCBtn = document.getElementById('sidebar-toc-btn')\nsidebarTOCBtn.addEventListener('click', function(event) {\n  event.stopPropagation()\n  if (document.body.hasAttribute('html-show-sidebar-toc')) {\n    document.body.removeAttribute('html-show-sidebar-toc')\n  } else {\n    document.body.setAttribute('html-show-sidebar-toc', true)\n  }\n})\n</script>\n      \n  \n    "},"title":"03分词器Tokenizer"},"__N_SSG":true}