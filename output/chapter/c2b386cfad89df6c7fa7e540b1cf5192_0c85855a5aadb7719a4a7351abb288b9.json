{"pageProps":{"bookInfo":{"id":"c2b386cfad89df6c7fa7e540b1cf5192","name":"WPF教程","fullPath":"F:\\passerby\\csharp\\WPF教程","chapterList":[{"id":"c2b386cfad89df6c7fa7e540b1cf5192_ef577b720dacf53df3ae49bb90bac72a","type":"chapter","name":"01WPF体系结构.md","fullPath":"F:\\passerby\\csharp\\WPF教程\\01WPF体系结构.md","url":"/chapter/c2b386cfad89df6c7fa7e540b1cf5192_ef577b720dacf53df3ae49bb90bac72a"},{"id":"c2b386cfad89df6c7fa7e540b1cf5192_4d2ac4a7f3dd2c6c1b4caf16f11c972f","type":"chapter","name":"02WPF应用程序管理.md","fullPath":"F:\\passerby\\csharp\\WPF教程\\02WPF应用程序管理.md","url":"/chapter/c2b386cfad89df6c7fa7e540b1cf5192_4d2ac4a7f3dd2c6c1b4caf16f11c972f"},{"id":"c2b386cfad89df6c7fa7e540b1cf5192_dccdac507a316e4e80df39c473c9cd53","type":"chapter","name":"03WPF窗体.md","fullPath":"F:\\passerby\\csharp\\WPF教程\\03WPF窗体.md","url":"/chapter/c2b386cfad89df6c7fa7e540b1cf5192_dccdac507a316e4e80df39c473c9cd53"},{"id":"c2b386cfad89df6c7fa7e540b1cf5192_8c8c5a68dfc06a8d598bd12da1fc7aaf","type":"chapter","name":"04WPF布局.md","fullPath":"F:\\passerby\\csharp\\WPF教程\\04WPF布局.md","url":"/chapter/c2b386cfad89df6c7fa7e540b1cf5192_8c8c5a68dfc06a8d598bd12da1fc7aaf"},{"id":"c2b386cfad89df6c7fa7e540b1cf5192_68af2be695174cb3ec4408ddfcefd90b","type":"chapter","name":"05WPF控件模型.md","fullPath":"F:\\passerby\\csharp\\WPF教程\\05WPF控件模型.md","url":"/chapter/c2b386cfad89df6c7fa7e540b1cf5192_68af2be695174cb3ec4408ddfcefd90b"},{"id":"c2b386cfad89df6c7fa7e540b1cf5192_0c85855a5aadb7719a4a7351abb288b9","type":"chapter","name":"06WPF依赖项属性和路由事件.md","fullPath":"F:\\passerby\\csharp\\WPF教程\\06WPF依赖项属性和路由事件.md","url":"/chapter/c2b386cfad89df6c7fa7e540b1cf5192_0c85855a5aadb7719a4a7351abb288b9"},{"id":"c2b386cfad89df6c7fa7e540b1cf5192_524c4971908be13b6f37367cc71ce39c","type":"chapter","name":"07WPF键盘输入、鼠标输入、焦点处理.md","fullPath":"F:\\passerby\\csharp\\WPF教程\\07WPF键盘输入、鼠标输入、焦点处理.md","url":"/chapter/c2b386cfad89df6c7fa7e540b1cf5192_524c4971908be13b6f37367cc71ce39c"},{"id":"c2b386cfad89df6c7fa7e540b1cf5192_8e3e067e78e962ea24d6868bfe119d70","type":"chapter","name":"08WPF命令.md","fullPath":"F:\\passerby\\csharp\\WPF教程\\08WPF命令.md","url":"/chapter/c2b386cfad89df6c7fa7e540b1cf5192_8e3e067e78e962ea24d6868bfe119d70"},{"id":"c2b386cfad89df6c7fa7e540b1cf5192_30dfa04cc943d72e072ca2137a7305e4","type":"chapter","name":"09WPF资源.md","fullPath":"F:\\passerby\\csharp\\WPF教程\\09WPF资源.md","url":"/chapter/c2b386cfad89df6c7fa7e540b1cf5192_30dfa04cc943d72e072ca2137a7305e4"},{"id":"c2b386cfad89df6c7fa7e540b1cf5192_21dc9b2382d63bf02f951b51778d8b5c","type":"chapter","name":"10WPF样式与模板.md","fullPath":"F:\\passerby\\csharp\\WPF教程\\10WPF样式与模板.md","url":"/chapter/c2b386cfad89df6c7fa7e540b1cf5192_21dc9b2382d63bf02f951b51778d8b5c"},{"id":"c2b386cfad89df6c7fa7e540b1cf5192_905a7533a2c0d9bb42e08852ce81a13c","type":"chapter","name":"11WPF更换主题.md","fullPath":"F:\\passerby\\csharp\\WPF教程\\11WPF更换主题.md","url":"/chapter/c2b386cfad89df6c7fa7e540b1cf5192_905a7533a2c0d9bb42e08852ce81a13c"},{"id":"c2b386cfad89df6c7fa7e540b1cf5192_04078b526541a1e84bc17d6f367ed1bb","type":"chapter","name":"12WPF数据绑定.md","fullPath":"F:\\passerby\\csharp\\WPF教程\\12WPF数据绑定.md","url":"/chapter/c2b386cfad89df6c7fa7e540b1cf5192_04078b526541a1e84bc17d6f367ed1bb"},{"id":"c2b386cfad89df6c7fa7e540b1cf5192_0789e3dd7dcfe7a364b09978ebf0c5ce","type":"chapter","name":"13WPF基本图形.md","fullPath":"F:\\passerby\\csharp\\WPF教程\\13WPF基本图形.md","url":"/chapter/c2b386cfad89df6c7fa7e540b1cf5192_0789e3dd7dcfe7a364b09978ebf0c5ce"},{"id":"c2b386cfad89df6c7fa7e540b1cf5192_f9e2cf299b43fd1ed1ce78a44fb8e17c","type":"chapter","name":"14WPFBrush.md","fullPath":"F:\\passerby\\csharp\\WPF教程\\14WPFBrush.md","url":"/chapter/c2b386cfad89df6c7fa7e540b1cf5192_f9e2cf299b43fd1ed1ce78a44fb8e17c"}],"title":"06WPF依赖项属性和路由事件","type":"book","url":"/book/c2b386cfad89df6c7fa7e540b1cf5192","content":"\n    \n    \n      <div class=\"crossnote markdown-preview  \">\n      \n<h1 id=\"wpf依赖项属性和路由事件\">WPF依赖项属性和路由事件 </h1>\n<h2 id=\"依赖项属性dependency-property\">依赖项属性（Dependency Property） </h2>\n<blockquote>\n<p>Windows Presentation Foundation (WPF) 提供了一组服务，这些服务可用于扩展公共语言运行时 (CLR) 属性的功能。这些服务通常统称为 WPF 属性系统。由 WPF 属性系统支持的属性称为依赖项属性。本概述介绍 WPF 属性系统以及依赖项属性的功能，这包括如何在可扩展应用程序标记语言 (XAML) 中和代码中使用现有的依赖项属性。<br>\n依赖项属性的用途在于提供一种方法来基于其他输入的值计算属性值。这些其他输入可以包括系统属性（如主题和用户首选项）、实时属性确定机制（如数据绑定和动画/演示图板）、重用模板（如资源和样式）或者通过与元素树中其他元素的父子关系来公开的值。另外，可以通过实现依赖项属性来提供独立验证、默认值、监视其他属性的更改的回调以及可以基于可能的运行时信息来强制指定属性值的系统。派生类还可以通过重写依赖项属性元数据（而不是重写现有属性的实际实现或者创建新属性）来更改现有属性的某些具体特征。</p>\n</blockquote>\n<ul>\n<li>依赖项属性与CLR 包装属性</li>\n</ul>\n<pre data-role=\"codeBlock\" data-info=\"c#\" class=\"language-c# c#\"><code>// 通过包装的属性设置按钮的背景颜色\nbtn_ButtonC.Background = new SolidColorBrush(Colors.Red);\n\n// 通过依赖性属性的SetValue设置按钮的背景颜色\nSolidColorBrush brush = new SolidColorBrush(Colors.Blue);\nbtn_ButtonD.SetValue(Button.BackgroundProperty, brush);\n\n// 通过包装的属性获取ButtonB的背景颜色\nSolidColorBrush b_Brush1 = (SolidColorBrush) (btn_ButtonB.Background);\ntxt_Value1.Text = b_Brush1.Color.ToString();\n\n// 通过依赖性属性的GetValue获取ButtonB的背景颜色\nSolidColorBrush b_Brush2 = (SolidColorBrush) (btn_ButtonB.GetValue(Button.BackgroundProperty));\ntxt_Value2.Text = b_Brush2.Color.ToString();\n</code></pre><ul>\n<li>使用由依赖项属性提供的属性功能</li>\n</ul>\n<blockquote>\n<p>依赖项属性提供用来扩展属性功能的功能，这与字段支持的属性相反。每个这样的功能通常都表示或支持整套WPF功能中的特定功能：资源数据绑定样式动画元数据重写属性值继承WPF设计器集成</p>\n</blockquote>\n<ul>\n<li>自定义依赖项属性及重写依赖项属性</li>\n</ul>\n<blockquote>\n<p>对于自定义依赖项属性，其所在的类型必须直接或间接继承System.Windows.DependencyObject类，依赖项属性是通过调用 Register 方法（或 RegisterReadOnly，自定义的只读的依赖项属性）在 WPF 属性系统中注册，并通过 DependencyProperty 标识符字段备份的属性。依赖项属性只能由 DependencyObject 类型使用，但 DependencyObject 在 WPF 类层次结构中的级别很高，因此，WPF 中的大多数可用类都支持依赖项属性。在对依赖项属性及CLR包装属性命名时必须满足：CLR包装属性名+Property＝依赖项属性名。</p>\n</blockquote>\n<pre data-role=\"codeBlock\" data-info=\"c#\" class=\"language-c# c#\"><code>public static readonly DependencyProperty AquariumGraphicProperty = DependencyProperty.Register(\n    \"AquariumGraphic\",              // 要注册的依赖项对象的名称\n    typeof(Uri),                    // 属性的类型\n    typeof(AquariumObject),         // 正注册依赖项对象的所有者类型\n    new FrameworkPropertyMetadata(  // 依赖项对象的属性元数据\n    null,\n    FrameworkPropertyMetadataOptions.AffectsRender,\n    new PropertyChangedCallback(OnUriChanged)\n    );\n)\n\npublic Uri AquariumGraphic\n{\n    get { return (Uri)GetValue(AquariumGraphicProperty); }\n    set { SetValue(AquariumGraphicProperty, value); }\n}\n\n</code></pre><h2 id=\"路由事件routedevent\">路由事件（RoutedEvent） </h2>\n<h3 id=\"路由事件的处理模型常用的有三种\">路由事件的处理模型常用的有三种 </h3>\n<ul>\n<li>冒泡事件：由子控件位次向父容器传递，大部分的路由事件都是冒泡事件</li>\n<li>隧道事件：由父容器位次向其子容器、控件传递，一般PreXXX事件属性隧道事件</li>\n<li>直接</li>\n</ul>\n\n      </div>\n      <div class=\"md-sidebar-toc\">\n<div class=\"md-toc\">\n<details style=\"padding:0;;padding-left:0px;\" open=\"\">\n        <summary class=\"md-toc-link-wrapper\">\n          <a href=\"#wpf依赖项属性和路由事件\" class=\"md-toc-link\"><p>WPF依赖项属性和路由事件</p>\n</a>\n          </summary>\n        <div>\n          <div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#依赖项属性dependency-property\" class=\"md-toc-link\">\n            <p>依赖项属性（Dependency Property）</p>\n\n          </a></div><details style=\"padding:0;;padding-left:24px;\" open=\"\">\n        <summary class=\"md-toc-link-wrapper\">\n          <a href=\"#路由事件routedevent\" class=\"md-toc-link\"><p>路由事件（RoutedEvent）</p>\n</a>\n          </summary>\n        <div>\n          <div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#路由事件的处理模型常用的有三种\" class=\"md-toc-link\">\n            <p>路由事件的处理模型常用的有三种</p>\n\n          </a></div>\n        </div>\n      </details>\n    \n        </div>\n      </details>\n    \n</div>\n</div>\n      <a id=\"sidebar-toc-btn\">≡</a>\n    \n    \n    \n    \n    \n    \n<script>\n\nvar sidebarTOCBtn = document.getElementById('sidebar-toc-btn')\nsidebarTOCBtn.addEventListener('click', function(event) {\n  event.stopPropagation()\n  if (document.body.hasAttribute('html-show-sidebar-toc')) {\n    document.body.removeAttribute('html-show-sidebar-toc')\n  } else {\n    document.body.setAttribute('html-show-sidebar-toc', true)\n  }\n})\n</script>\n      \n  \n    "},"title":"06WPF依赖项属性和路由事件"},"__N_SSG":true}