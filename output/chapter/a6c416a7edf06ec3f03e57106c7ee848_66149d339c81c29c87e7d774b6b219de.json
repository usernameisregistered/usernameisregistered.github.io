{"pageProps":{"bookInfo":{"id":"a6c416a7edf06ec3f03e57106c7ee848","name":"计算机图形学","fullPath":"F:\\passerby\\graph\\计算机图形学","chapterList":[{"id":"a6c416a7edf06ec3f03e57106c7ee848_66149d339c81c29c87e7d774b6b219de","type":"chapter","name":"01概要.md","fullPath":"F:\\passerby\\graph\\计算机图形学\\01概要.md","url":"/chapter/a6c416a7edf06ec3f03e57106c7ee848_66149d339c81c29c87e7d774b6b219de"},{"id":"a6c416a7edf06ec3f03e57106c7ee848_dba7988f648c4809d68c9e4a6198259a","type":"chapter","name":"02直线算法.md","fullPath":"F:\\passerby\\graph\\计算机图形学\\02直线算法.md","url":"/chapter/a6c416a7edf06ec3f03e57106c7ee848_dba7988f648c4809d68c9e4a6198259a"},{"id":"a6c416a7edf06ec3f03e57106c7ee848_28329a7286bb4038932d738600dae5b9","type":"chapter","name":"03曲线算法.md","fullPath":"F:\\passerby\\graph\\计算机图形学\\03曲线算法.md","url":"/chapter/a6c416a7edf06ec3f03e57106c7ee848_28329a7286bb4038932d738600dae5b9"}],"title":"01概要","type":"book","url":"/book/a6c416a7edf06ec3f03e57106c7ee848","content":"\n    \n    \n      <div class=\"crossnote markdown-preview  \">\n      \n<h1 id=\"概要\">概要 </h1>\n<p>本文的内容主要来自与计算机图形学第三版</p>\n<h2 id=\"计算机图形学的几种用途\">计算机图形学的几种用途 </h2>\n<ol>\n<li>用户界面</li>\n<li>商业与科技中的交互绘图</li>\n<li>制图学</li>\n<li>医学</li>\n<li>计算机辅助制图和设计</li>\n<li>多媒体系统</li>\n<li>科学计算可视化和环境的模拟与动画</li>\n</ol>\n<h2 id=\"交互式图形学\">交互式图形学 </h2>\n<blockquote>\n<p>交互式的计算机图形是自摄影和电视发明以来最重要的图形方法，他有许多额外的优点，</p>\n</blockquote>\n<p><strong>运动动力学</strong>：使物体相对于静止的观察者移动或者旋转；也可以保持物体不动。而使观察者围绕物体移动、摇动镜头以选择视框或拉近或推远景物以选择细节的多寡，这就像快速移动摄像机时，通过瞄准镜所看到的情况一样。在更多的情况下，是物体和观察者都在运动</p>\n<p><strong>更新动力学</strong>：被观察者物体的形状、颜色或其他性质实际发生了变化。</p>\n<h3 id=\"概念框架\">概念框架 </h3>\n<p>计算机从交互设备接收输入，并向显示设备输出图像。软件有3个部分：</p>\n<blockquote>\n<p>应用程序 ↔ 应用模型 ↔  图形系统</p>\n</blockquote>\n<h4 id=\"应用程序\">应用程序 </h4>\n<p>创建图元并将之存入应用模型或由应用模型取回</p>\n<h4 id=\"应用模型\">应用模型 </h4>\n<p>表示将在屏幕上显示的数据和物体</p>\n<h4 id=\"图形系统\">图形系统 </h4>\n<p>负责从对象的细节描述产生实际的对象，并将用户的输入传递给应用程序，以供处理。</p>\n<p>光栅图形软件包近似做出数学意义上的图元。这个图元被定义在笛卡尔坐标系的网格点上。用适当亮度或者色彩的像素点来表示。这些像素一般作为位图或者像素图存储在CPU内存或者帧缓存中。</p>\n<h2 id=\"显示系统体系结构的含义\">显示系统体系结构的含义 </h2>\n<p>SRGP的程序可以分成两部分。一部分是输出流水线，另一部分是输入流水线</p>\n<p>在输出流水线中，应用程序根据应用模型或数据结构中存储的或退到的图元和属性对物体进行描述，并将这些信息传递给图形包，有图形包将它们裁剪和扫描转换为最终在屏幕上显示的像素。<br>\n在输入流水线中，在显示终端的用户交互操作由图形包的采样程序或者事件驱动输入程序转换成度量信息。并将这些信息传递给应用程序，然后应用程序根据这些度量信息对模型或者屏幕上的图像进行修改；与输入相关的程序包括：初始化和控制输入设备的程序、在交互过程中从输入设备获取度量信息的程序。</p>\n<p>实现一个SRGP图形包必须充分考虑各种显示器。有些显示器系统带有自己的帧缓存和显示控制器。这些显示控制器的工作就是解释和执行绘图命令，将生成像素写入帧缓；另外一些简单的系统只可直接又CPU进行刷新。其图形包的只输出部分可以驱动光栅硬拷贝设备。</p>\n<h3 id=\"具有帧缓存和显示控制器的显示器\">具有帧缓存和显示控制器的显示器 </h3>\n<p>SRGP只需将它关于图元、属性和写模式的内部表示转化成显示外设能够直接绘图的方式即可</p>\n<h3 id=\"只有帧缓存的显示器\">只有帧缓存的显示器 </h3>\n<p>SRGP自身进行扫描转换已生成屏幕画面外的画布和帧缓存图像。</p>\n<h3 id=\"硬拷贝设备\">硬拷贝设备 </h3>\n<p>SRGP必须生成完整的位图或者像素图。并一次扫描出一条线传递给输出设备</p>\n<p><strong>裁剪</strong>： 图元中不在裁剪框中的图像不显示</p>\n\n      </div>\n      <div class=\"md-sidebar-toc\">\n<div class=\"md-toc\">\n<details style=\"padding:0;;padding-left:0px;\" open=\"\">\n        <summary class=\"md-toc-link-wrapper\">\n          <a href=\"#概要\" class=\"md-toc-link\"><p>概要</p>\n</a>\n          </summary>\n        <div>\n          <div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#计算机图形学的几种用途\" class=\"md-toc-link\">\n            <p>计算机图形学的几种用途</p>\n\n          </a></div><details style=\"padding:0;;padding-left:24px;\" open=\"\">\n        <summary class=\"md-toc-link-wrapper\">\n          <a href=\"#交互式图形学\" class=\"md-toc-link\"><p>交互式图形学</p>\n</a>\n          </summary>\n        <div>\n          <details style=\"padding:0;;padding-left:24px;\" open=\"\">\n        <summary class=\"md-toc-link-wrapper\">\n          <a href=\"#概念框架\" class=\"md-toc-link\"><p>概念框架</p>\n</a>\n          </summary>\n        <div>\n          <div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#应用程序\" class=\"md-toc-link\">\n            <p>应用程序</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#应用模型\" class=\"md-toc-link\">\n            <p>应用模型</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#图形系统\" class=\"md-toc-link\">\n            <p>图形系统</p>\n\n          </a></div>\n        </div>\n      </details>\n    \n        </div>\n      </details>\n    <details style=\"padding:0;;padding-left:24px;\" open=\"\">\n        <summary class=\"md-toc-link-wrapper\">\n          <a href=\"#显示系统体系结构的含义\" class=\"md-toc-link\"><p>显示系统体系结构的含义</p>\n</a>\n          </summary>\n        <div>\n          <div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#具有帧缓存和显示控制器的显示器\" class=\"md-toc-link\">\n            <p>具有帧缓存和显示控制器的显示器</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#只有帧缓存的显示器\" class=\"md-toc-link\">\n            <p>只有帧缓存的显示器</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#硬拷贝设备\" class=\"md-toc-link\">\n            <p>硬拷贝设备</p>\n\n          </a></div>\n        </div>\n      </details>\n    \n        </div>\n      </details>\n    \n</div>\n</div>\n      <a id=\"sidebar-toc-btn\">≡</a>\n    \n    \n    \n    \n    \n    \n<script>\n\nvar sidebarTOCBtn = document.getElementById('sidebar-toc-btn')\nsidebarTOCBtn.addEventListener('click', function(event) {\n  event.stopPropagation()\n  if (document.body.hasAttribute('html-show-sidebar-toc')) {\n    document.body.removeAttribute('html-show-sidebar-toc')\n  } else {\n    document.body.setAttribute('html-show-sidebar-toc', true)\n  }\n})\n</script>\n      \n  \n    "},"title":"01概要"},"__N_SSG":true}