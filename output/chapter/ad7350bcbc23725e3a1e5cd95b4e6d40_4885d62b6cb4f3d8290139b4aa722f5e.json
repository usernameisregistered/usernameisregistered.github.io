{"pageProps":{"bookInfo":{"id":"ad7350bcbc23725e3a1e5cd95b4e6d40","name":"Web性能","fullPath":"F:\\passerby\\web\\Web性能","chapterList":[{"id":"ad7350bcbc23725e3a1e5cd95b4e6d40_27bc707ed506f3bac95a5c2cd96628f7","type":"chapter","name":"01概述.md","fullPath":"F:\\passerby\\web\\Web性能\\01概述.md","url":"/chapter/ad7350bcbc23725e3a1e5cd95b4e6d40_27bc707ed506f3bac95a5c2cd96628f7"},{"id":"ad7350bcbc23725e3a1e5cd95b4e6d40_e93adda3e055e10673f2dfcc56779604","type":"chapter","name":"02渲染页面：浏览器的工作原理.md","fullPath":"F:\\passerby\\web\\Web性能\\02渲染页面：浏览器的工作原理.md","url":"/chapter/ad7350bcbc23725e3a1e5cd95b4e6d40_e93adda3e055e10673f2dfcc56779604"},{"id":"ad7350bcbc23725e3a1e5cd95b4e6d40_35e9ce7dee62796c422685ecd288dd85","type":"chapter","name":"03关键渲染路径.md","fullPath":"F:\\passerby\\web\\Web性能\\03关键渲染路径.md","url":"/chapter/ad7350bcbc23725e3a1e5cd95b4e6d40_35e9ce7dee62796c422685ecd288dd85"},{"id":"ad7350bcbc23725e3a1e5cd95b4e6d40_4885d62b6cb4f3d8290139b4aa722f5e","type":"chapter","name":"04CSS动画与JavaScript动画的性能.md","fullPath":"F:\\passerby\\web\\Web性能\\04CSS动画与JavaScript动画的性能.md","url":"/chapter/ad7350bcbc23725e3a1e5cd95b4e6d40_4885d62b6cb4f3d8290139b4aa722f5e"},{"id":"ad7350bcbc23725e3a1e5cd95b4e6d40_f69864169b133924e7fbc07972b57107","type":"chapter","name":"05优化启动性能.md","fullPath":"F:\\passerby\\web\\Web性能\\05优化启动性能.md","url":"/chapter/ad7350bcbc23725e3a1e5cd95b4e6d40_f69864169b133924e7fbc07972b57107"},{"id":"ad7350bcbc23725e3a1e5cd95b4e6d40_cf8a5cad1866ef93258e28085d7fccc5","type":"chapter","name":"06使用dns-prefetch.md","fullPath":"F:\\passerby\\web\\Web性能\\06使用dns-prefetch.md","url":"/chapter/ad7350bcbc23725e3a1e5cd95b4e6d40_cf8a5cad1866ef93258e28085d7fccc5"},{"id":"ad7350bcbc23725e3a1e5cd95b4e6d40_341056199d4eae720af791f9b0173de8","type":"chapter","name":"07懒加载.md","fullPath":"F:\\passerby\\web\\Web性能\\07懒加载.md","url":"/chapter/ad7350bcbc23725e3a1e5cd95b4e6d40_341056199d4eae720af791f9b0173de8"},{"id":"ad7350bcbc23725e3a1e5cd95b4e6d40_201df68755b3e4b5bae98025f97336be","type":"chapter","name":"08感知性能.md","fullPath":"F:\\passerby\\web\\Web性能\\08感知性能.md","url":"/chapter/ad7350bcbc23725e3a1e5cd95b4e6d40_201df68755b3e4b5bae98025f97336be"},{"id":"ad7350bcbc23725e3a1e5cd95b4e6d40_2ed26193cfaaa1b84eddceb8916dcfc6","type":"chapter","name":"09JavaScript性能优化.md","fullPath":"F:\\passerby\\web\\Web性能\\09JavaScript性能优化.md","url":"/chapter/ad7350bcbc23725e3a1e5cd95b4e6d40_2ed26193cfaaa1b84eddceb8916dcfc6"},{"id":"ad7350bcbc23725e3a1e5cd95b4e6d40_7cb11ebe066f3016752b653be24f8462","type":"chapter","name":"10css性能优化.md","fullPath":"F:\\passerby\\web\\Web性能\\10css性能优化.md","url":"/chapter/ad7350bcbc23725e3a1e5cd95b4e6d40_7cb11ebe066f3016752b653be24f8462"},{"id":"ad7350bcbc23725e3a1e5cd95b4e6d40_3886481dc942fc073ec91a4da0553bca","type":"chapter","name":"11HTML性能优化.md","fullPath":"F:\\passerby\\web\\Web性能\\11HTML性能优化.md","url":"/chapter/ad7350bcbc23725e3a1e5cd95b4e6d40_3886481dc942fc073ec91a4da0553bca"}],"title":"04CSS动画与JavaScript动画的性能","type":"book","url":"/book/ad7350bcbc23725e3a1e5cd95b4e6d40","content":"\n    \n    \n      <div class=\"crossnote markdown-preview  \">\n      \n<h1 id=\"css-动画与-javascript-动画的性能\">CSS 动画与 JavaScript 动画的性能 </h1>\n<p>对众多应用程序而言，动画对提供友好的用户体验有着关键的作用。我们有很多方式生成 web 动画，比如 CSS transition 和 animation 或者基于 JavaScript 的动画（使用 requestAnimationFrame()）。</p>\n<h2 id=\"css-过渡和动画\">CSS 过渡和动画 </h2>\n<ul>\n<li><strong>CSS transition</strong> 提供了一个简单的方式去创造当前样式与结束状态样式之间的动画，比如一个 button 的普通状态和 hover 状态。</li>\n<li><strong>CSS animation</strong> 许开发者去通过一个初始状态属性值集合与最终状态属性值集合创造动画，而不是单单的初始和最终状态。CSS animations 由两部分组成：描述 CSS 动画的样式，以及一组关键帧，表示动画样式的开始和结束状态，以及可能的中间状态。</li>\n</ul>\n<p>就性能方面来说，无论通过 CSS animation 还是 transition 创造动画，</p>\n<h2 id=\"requestanimationframe\">requestAnimationFrame </h2>\n<p>提供了一种用 JavaScript 代码制作动画的高效方式。本方法的回调函数在绘制下一帧之前由浏览器调用。与需要一个延迟参数的 setTimeout() 或 setInterval() 相比，requestAnimationFrame() 效率高得多。开发人员可以在 requestAnimationFrame() 回调函数中通过简单地改变元素的样式（或者更新画布绘制，等等）来创建动画。</p>\n<h2 id=\"性能对比transitions-vs-requestanimationframe\">性能对比：transitions vs requestAnimationFrame </h2>\n<p>事实上，大多数场景下，基于 CSS 的动画几乎是跟 JavaScript 动画表现一致，</p>\n<p>一些基于 Javascript 的动画库，像GSAP和Velocity.JS，甚至声称他们在性能上可以做得比原生 CSS transition/animation 更好。这是可能的，因为在重绘事件发生之前，CSS transition 和 animation 在主的 UI 线程仅仅是重新采集元素的样式，这跟通过 requestAnimationFrame() 回调获取重新采集元素样式是一样的，也是在下一次重绘之前触发。假如二者都是在主 UI 线程创建的动画，那它们在性能方面没有差异。</p>\n<p>虽然他们在性能之间没有差异，但是仍然认为 CSS 动画是更好的选择。为什么？关键是只要动画涉及的属性不引起 reflow（重新布局），我们可以把采样操作移出主线程。最常见的属性是 CSS transform。如果一个元素被提升为一个 layer，transform 属性动画就可以在 GPU中进行。这意味着更好地性能，特别是在移动设备上。</p>\n\n      </div>\n      <div class=\"md-sidebar-toc\">\n<div class=\"md-toc\">\n<details style=\"padding:0;;padding-left:0px;\" open=\"\">\n        <summary class=\"md-toc-link-wrapper\">\n          <a href=\"#css-动画与-javascript-动画的性能\" class=\"md-toc-link\"><p>CSS 动画与 JavaScript 动画的性能</p>\n</a>\n          </summary>\n        <div>\n          <div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#css-过渡和动画\" class=\"md-toc-link\">\n            <p>CSS 过渡和动画</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#requestanimationframe\" class=\"md-toc-link\">\n            <p>requestAnimationFrame</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#性能对比transitions-vs-requestanimationframe\" class=\"md-toc-link\">\n            <p>性能对比：transitions vs requestAnimationFrame</p>\n\n          </a></div>\n        </div>\n      </details>\n    \n</div>\n</div>\n      <a id=\"sidebar-toc-btn\">≡</a>\n    \n    \n    \n    \n    \n    \n<script>\n\nvar sidebarTOCBtn = document.getElementById('sidebar-toc-btn')\nsidebarTOCBtn.addEventListener('click', function(event) {\n  event.stopPropagation()\n  if (document.body.hasAttribute('html-show-sidebar-toc')) {\n    document.body.removeAttribute('html-show-sidebar-toc')\n  } else {\n    document.body.setAttribute('html-show-sidebar-toc', true)\n  }\n})\n</script>\n      \n  \n    "},"title":"04CSS动画与JavaScript动画的性能"},"__N_SSG":true}