{"pageProps":{"bookInfo":{"id":"179059a67f73c82efbc38427d53604f6","name":"前端工程化","fullPath":"F:\\passerby\\web\\前端工程化","chapterList":[{"id":"179059a67f73c82efbc38427d53604f6_eadd643c7ba846de825bc34b3b43e80a","type":"chapter","name":"前端工程化说明.md","fullPath":"F:\\passerby\\web\\前端工程化\\前端工程化说明.md","url":"/chapter/179059a67f73c82efbc38427d53604f6_eadd643c7ba846de825bc34b3b43e80a"},{"id":"179059a67f73c82efbc38427d53604f6_c864bbf34cb535b68e99a4820305c092","type":"chapter","name":"工程化专题系列.md","fullPath":"F:\\passerby\\web\\前端工程化\\工程化专题系列.md","url":"/chapter/179059a67f73c82efbc38427d53604f6_c864bbf34cb535b68e99a4820305c092"},{"id":"179059a67f73c82efbc38427d53604f6_18f8511fa7cb8e0160db22d8488191b4","type":"chapter","name":"框架对比.md","fullPath":"F:\\passerby\\web\\前端工程化\\框架对比.md","url":"/chapter/179059a67f73c82efbc38427d53604f6_18f8511fa7cb8e0160db22d8488191b4"},{"id":"179059a67f73c82efbc38427d53604f6_fe82fa5cd621fb346ee56338648482b8","type":"chapter","name":"美团技术架构.md","fullPath":"F:\\passerby\\web\\前端工程化\\美团技术架构.md","url":"/chapter/179059a67f73c82efbc38427d53604f6_fe82fa5cd621fb346ee56338648482b8"}],"title":"框架对比","type":"book","url":"/book/179059a67f73c82efbc38427d53604f6","content":"\n    \n    \n      <div class=\"crossnote markdown-preview  \">\n      \n<h2 id=\"基本选型\">基本选型 </h2>\n<ol>\n<li>pc用react,手机用vue,固定的管理系统会部分用ng</li>\n<li>团队技术基础一般的vue(尤其传统前端过渡阶段的),技术基础好并且有react实践经验的react,技术非常好并且对ng有深度实践的可以用ng</li>\n<li>能以数据模型、逻辑性的角度去思考前端页面的用react,以组件库、页面为维度思考的用vue</li>\n<li>喜欢青睐组件单向数据流以及组件传递单向的用react，否则用vue</li>\n</ol>\n<h3 id=\"框架特征描述\">框架特征描述 </h3>\n<h4 id=\"ng\">ng </h4>\n<p>ng与另外两者相比更像一个框架，其包括控制层，服务，指令等完整的生态，文档比较完善，而且其后台为google，其学习使用成本较高，需要你掌握typescript.(其中ts是js强类型的体现)</p>\n<h4 id=\"react\">react </h4>\n<p>react以任意单位的可重复组件为基本单位，它最大程度的打破了使用使用基本的h5标签为最小单位的常规思路，并创建了自己对组件的注入以及状态机概念，通过组件的相关特性来实现界面的更新以及数据的渲染使用<br>\n比较零散的一个前端的页面模板框架，需要搭配各种相关生态才可以完成完整的应用<br>\n属于逻辑性的技术框架，所以其样式、交互、模板等都尽可能的融入到了js当中，对js基础非常好的人是比较容易吸收的，但切实的用好是较难的，尤其在大型的管理系统、业务系统中，一般都是用react就是因为其对逻辑性的偏好</p>\n<h4 id=\"vue\">vue </h4>\n<p>学习曲线最平缓的，对原常规前端开发人员是最友好的，基本是面向html&amp;&amp;css&amp;&amp;js实现的页面框架，而且提供了完整的一些列的语法文档以及语法糖，提供了丰富的api来完整基本功能开发需求<br>\n开发人员很少使用它的组件维度，也很少去设计和考虑公用组件的继承以及拓展。导致目前大部分vue的项目都是把页面组件当做vue的基本单位</p>\n\n      </div>\n      <div class=\"md-sidebar-toc\">\n<div class=\"md-toc\">\n<details style=\"padding:0;;padding-left:0px;\" open=\"\">\n        <summary class=\"md-toc-link-wrapper\">\n          <a href=\"#基本选型\" class=\"md-toc-link\"><p>基本选型</p>\n</a>\n          </summary>\n        <div>\n          <details style=\"padding:0;;padding-left:24px;\" open=\"\">\n        <summary class=\"md-toc-link-wrapper\">\n          <a href=\"#框架特征描述\" class=\"md-toc-link\"><p>框架特征描述</p>\n</a>\n          </summary>\n        <div>\n          <div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#ng\" class=\"md-toc-link\">\n            <p>ng</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#react\" class=\"md-toc-link\">\n            <p>react</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#vue\" class=\"md-toc-link\">\n            <p>vue</p>\n\n          </a></div>\n        </div>\n      </details>\n    \n        </div>\n      </details>\n    \n</div>\n</div>\n      <a id=\"sidebar-toc-btn\">≡</a>\n    \n    \n    \n    \n    \n    \n<script>\n\nvar sidebarTOCBtn = document.getElementById('sidebar-toc-btn')\nsidebarTOCBtn.addEventListener('click', function(event) {\n  event.stopPropagation()\n  if (document.body.hasAttribute('html-show-sidebar-toc')) {\n    document.body.removeAttribute('html-show-sidebar-toc')\n  } else {\n    document.body.setAttribute('html-show-sidebar-toc', true)\n  }\n})\n</script>\n      \n  \n    "},"title":"框架对比"},"__N_SSG":true}