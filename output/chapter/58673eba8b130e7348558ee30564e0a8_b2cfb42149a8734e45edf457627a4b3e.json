{"pageProps":{"bookInfo":{"id":"58673eba8b130e7348558ee30564e0a8","name":"marked源码解析","fullPath":"F:\\passerby\\source\\marked源码解析","chapterList":[{"id":"58673eba8b130e7348558ee30564e0a8_b2cfb42149a8734e45edf457627a4b3e","type":"chapter","name":"02语法正则二.md","fullPath":"F:\\passerby\\source\\marked源码解析\\02语法正则二.md","url":"/chapter/58673eba8b130e7348558ee30564e0a8_b2cfb42149a8734e45edf457627a4b3e"},{"id":"58673eba8b130e7348558ee30564e0a8_77673491a3513f502cad5f07eb7d7242","type":"chapter","name":"03语法正则三.md","fullPath":"F:\\passerby\\source\\marked源码解析\\03语法正则三.md","url":"/chapter/58673eba8b130e7348558ee30564e0a8_77673491a3513f502cad5f07eb7d7242"},{"id":"58673eba8b130e7348558ee30564e0a8_8ac594c5dd0d1dcc922bf59f676eae48","type":"chapter","name":"语法正则.md","fullPath":"F:\\passerby\\source\\marked源码解析\\语法正则.md","url":"/chapter/58673eba8b130e7348558ee30564e0a8_8ac594c5dd0d1dcc922bf59f676eae48"}],"title":"02语法正则二","type":"book","url":"/book/58673eba8b130e7348558ee30564e0a8","content":"\n    \n    \n      <div class=\"crossnote markdown-preview  \">\n      \n<h1 id=\"markdown语法正则二\">markdown语法正则二 </h1>\n<blockquote>\n<p>markdown首要内容正则</p>\n</blockquote>\n<p><strong>清单</strong></p>\n<pre data-role=\"codeBlock\" data-info=\"js\" class=\"language-javascript js\"><code><span class=\"token keyword keyword-const\">const</span> bullet <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(?:[*+-]|\\d{1,9}[.)])</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">;</span>\n</code></pre><p><strong>代码块</strong></p>\n<pre data-role=\"codeBlock\" data-info=\"js\" class=\"language-javascript js\"><code><span class=\"token keyword keyword-const\">const</span> blockCode <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\"> {4}</span><span class=\"token regex-delimiter\">/</span></span>\n</code></pre><p><strong>围栏代码块</strong></p>\n<pre data-role=\"codeBlock\" data-info=\"js\" class=\"language-javascript js\"><code><span class=\"token keyword keyword-const\">const</span> fences <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\"> {0,3}(?:`{3,}|~{3,})</span><span class=\"token regex-delimiter\">/</span></span>\n</code></pre><p><strong>引用</strong></p>\n<pre data-role=\"codeBlock\" data-info=\"js\" class=\"language-javascript js\"><code><span class=\"token keyword keyword-const\">const</span> blockquote <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\"> {0,3}&gt;</span><span class=\"token regex-delimiter\">/</span></span>\n</code></pre><p><strong>标题</strong></p>\n<pre data-role=\"codeBlock\" data-info=\"js\" class=\"language-javascript js\"><code><span class=\"token keyword keyword-const\">const</span> heading <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\"> {0,3}#{1,6}</span><span class=\"token regex-delimiter\">/</span></span>\n</code></pre><p><strong>HTML</strong></p>\n<pre data-role=\"codeBlock\" data-info=\"js\" class=\"language-javascript js\"><code><span class=\"token keyword keyword-const\">const</span> html <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\"> {0,3}&lt;[^\\n&gt;]+&gt;\\n</span><span class=\"token regex-delimiter\">/</span></span>\n</code></pre><p><strong>初步猜测是匹配标题1和标题2的替代模式</strong></p>\n<pre data-role=\"codeBlock\" data-info=\"js\" class=\"language-javascript js\"><code><span class=\"token keyword keyword-const\">const</span> header2 <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\n {0,3}(=+|-+) *(?:\\n+|$)</span><span class=\"token regex-delimiter\">/</span></span>\n</code></pre><pre data-role=\"codeBlock\" data-info=\"js\" class=\"language-javascript js\"><code><span class=\"token keyword keyword-function\">function</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">regex<span class=\"token punctuation\">,</span> opt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-let\">let</span> source <span class=\"token operator\">=</span> <span class=\"token keyword keyword-typeof\">typeof</span> regex <span class=\"token operator\">===</span> <span class=\"token string\">'string'</span> <span class=\"token operator\">?</span> regex <span class=\"token operator\">:</span> regex<span class=\"token punctuation\">.</span><span class=\"token property-access\">source</span><span class=\"token punctuation\">;</span>\n  opt <span class=\"token operator\">=</span> opt <span class=\"token operator\">||</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword keyword-const\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">replace</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> val</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword keyword-let\">let</span> valSource <span class=\"token operator\">=</span> <span class=\"token keyword keyword-typeof\">typeof</span> val <span class=\"token operator\">===</span> <span class=\"token string\">'string'</span> <span class=\"token operator\">?</span> val <span class=\"token operator\">:</span> val<span class=\"token punctuation\">.</span><span class=\"token property-access\">source</span><span class=\"token punctuation\">;</span>\n      valSource <span class=\"token operator\">=</span> valSource<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span>caret<span class=\"token punctuation\">,</span> <span class=\"token string\">'$1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      source <span class=\"token operator\">=</span> source<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> valSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword control-flow keyword-return\">return</span> obj<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">getRegex</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword control-flow keyword-return\">return</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token class-name\">RegExp</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span> opt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow keyword-return\">return</span> obj<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword keyword-const\">const</span> caret <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(^|[^\\[])\\^</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword keyword-const\">const</span> bullet <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(?:[*+-]|\\d{1,9}[.)])</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword keyword-const\">const</span> lheading <span class=\"token operator\">=</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^(?!bull |blockCode|fences|blockquote|heading|html)((?:.|\\n(?!\\s*?\\n|bull |blockCode|fences|blockquote|heading|html))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">bull</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> bullet<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">blockCode</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> blockCode<span class=\"token punctuation\">)</span> \n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">fences</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> fences<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">blockquote</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> blockquote<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">heading</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> heading<span class=\"token punctuation\">)</span> \n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">html</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> html<span class=\"token punctuation\">)</span> \n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getRegex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// /^(?!(?:[*+-]|\\d{1,9}[.)]) | {4}| {0,3}(?:`{3,}|~{3,})| {0,3}&gt;| {0,3}#{1,6}| {0,3}&lt;[^\\n&gt;]+&gt;\\n)((?:.|\\n(?!\\s*?\\n|(?:[*+-]|\\d{1,9}[.)]) | {4}| {0,3}(?:`{3,}|~{3,})| {0,3}&gt;| {0,3}#{1,6}| {0,3}&lt;[^\\n&gt;]+&gt;\\n))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/</span>\n</code></pre><p><img src=\"/assets/17357321107349198.png\" alt=\"正则解释图\"></p>\n\n      </div>\n      <div class=\"md-sidebar-toc\">\n<div class=\"md-toc\">\n<div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:18px\">\n          <a href=\"#markdown语法正则二\" class=\"md-toc-link\">\n            <p>markdown语法正则二</p>\n\n          </a></div>\n</div>\n</div>\n      <a id=\"sidebar-toc-btn\">≡</a>\n    \n    \n    \n    \n    \n    \n<script>\n\nvar sidebarTOCBtn = document.getElementById('sidebar-toc-btn')\nsidebarTOCBtn.addEventListener('click', function(event) {\n  event.stopPropagation()\n  if (document.body.hasAttribute('html-show-sidebar-toc')) {\n    document.body.removeAttribute('html-show-sidebar-toc')\n  } else {\n    document.body.setAttribute('html-show-sidebar-toc', true)\n  }\n})\n</script>\n      \n  \n    "},"title":"02语法正则二"},"__N_SSG":true}