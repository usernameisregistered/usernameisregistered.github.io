{"pageProps":{"bookInfo":{"id":"c2b386cfad89df6c7fa7e540b1cf5192","name":"WPF教程","fullPath":"F:\\passerby\\csharp\\WPF教程","chapterList":[{"id":"c2b386cfad89df6c7fa7e540b1cf5192_ef577b720dacf53df3ae49bb90bac72a","type":"chapter","name":"01WPF体系结构.md","fullPath":"F:\\passerby\\csharp\\WPF教程\\01WPF体系结构.md","url":"/chapter/c2b386cfad89df6c7fa7e540b1cf5192_ef577b720dacf53df3ae49bb90bac72a"},{"id":"c2b386cfad89df6c7fa7e540b1cf5192_4d2ac4a7f3dd2c6c1b4caf16f11c972f","type":"chapter","name":"02WPF应用程序管理.md","fullPath":"F:\\passerby\\csharp\\WPF教程\\02WPF应用程序管理.md","url":"/chapter/c2b386cfad89df6c7fa7e540b1cf5192_4d2ac4a7f3dd2c6c1b4caf16f11c972f"},{"id":"c2b386cfad89df6c7fa7e540b1cf5192_dccdac507a316e4e80df39c473c9cd53","type":"chapter","name":"03WPF窗体.md","fullPath":"F:\\passerby\\csharp\\WPF教程\\03WPF窗体.md","url":"/chapter/c2b386cfad89df6c7fa7e540b1cf5192_dccdac507a316e4e80df39c473c9cd53"},{"id":"c2b386cfad89df6c7fa7e540b1cf5192_8c8c5a68dfc06a8d598bd12da1fc7aaf","type":"chapter","name":"04WPF布局.md","fullPath":"F:\\passerby\\csharp\\WPF教程\\04WPF布局.md","url":"/chapter/c2b386cfad89df6c7fa7e540b1cf5192_8c8c5a68dfc06a8d598bd12da1fc7aaf"},{"id":"c2b386cfad89df6c7fa7e540b1cf5192_68af2be695174cb3ec4408ddfcefd90b","type":"chapter","name":"05WPF控件模型.md","fullPath":"F:\\passerby\\csharp\\WPF教程\\05WPF控件模型.md","url":"/chapter/c2b386cfad89df6c7fa7e540b1cf5192_68af2be695174cb3ec4408ddfcefd90b"},{"id":"c2b386cfad89df6c7fa7e540b1cf5192_0c85855a5aadb7719a4a7351abb288b9","type":"chapter","name":"06WPF依赖项属性和路由事件.md","fullPath":"F:\\passerby\\csharp\\WPF教程\\06WPF依赖项属性和路由事件.md","url":"/chapter/c2b386cfad89df6c7fa7e540b1cf5192_0c85855a5aadb7719a4a7351abb288b9"},{"id":"c2b386cfad89df6c7fa7e540b1cf5192_524c4971908be13b6f37367cc71ce39c","type":"chapter","name":"07WPF键盘输入、鼠标输入、焦点处理.md","fullPath":"F:\\passerby\\csharp\\WPF教程\\07WPF键盘输入、鼠标输入、焦点处理.md","url":"/chapter/c2b386cfad89df6c7fa7e540b1cf5192_524c4971908be13b6f37367cc71ce39c"},{"id":"c2b386cfad89df6c7fa7e540b1cf5192_8e3e067e78e962ea24d6868bfe119d70","type":"chapter","name":"08WPF命令.md","fullPath":"F:\\passerby\\csharp\\WPF教程\\08WPF命令.md","url":"/chapter/c2b386cfad89df6c7fa7e540b1cf5192_8e3e067e78e962ea24d6868bfe119d70"},{"id":"c2b386cfad89df6c7fa7e540b1cf5192_30dfa04cc943d72e072ca2137a7305e4","type":"chapter","name":"09WPF资源.md","fullPath":"F:\\passerby\\csharp\\WPF教程\\09WPF资源.md","url":"/chapter/c2b386cfad89df6c7fa7e540b1cf5192_30dfa04cc943d72e072ca2137a7305e4"},{"id":"c2b386cfad89df6c7fa7e540b1cf5192_21dc9b2382d63bf02f951b51778d8b5c","type":"chapter","name":"10WPF样式与模板.md","fullPath":"F:\\passerby\\csharp\\WPF教程\\10WPF样式与模板.md","url":"/chapter/c2b386cfad89df6c7fa7e540b1cf5192_21dc9b2382d63bf02f951b51778d8b5c"},{"id":"c2b386cfad89df6c7fa7e540b1cf5192_905a7533a2c0d9bb42e08852ce81a13c","type":"chapter","name":"11WPF更换主题.md","fullPath":"F:\\passerby\\csharp\\WPF教程\\11WPF更换主题.md","url":"/chapter/c2b386cfad89df6c7fa7e540b1cf5192_905a7533a2c0d9bb42e08852ce81a13c"},{"id":"c2b386cfad89df6c7fa7e540b1cf5192_04078b526541a1e84bc17d6f367ed1bb","type":"chapter","name":"12WPF数据绑定.md","fullPath":"F:\\passerby\\csharp\\WPF教程\\12WPF数据绑定.md","url":"/chapter/c2b386cfad89df6c7fa7e540b1cf5192_04078b526541a1e84bc17d6f367ed1bb"},{"id":"c2b386cfad89df6c7fa7e540b1cf5192_0789e3dd7dcfe7a364b09978ebf0c5ce","type":"chapter","name":"13WPF基本图形.md","fullPath":"F:\\passerby\\csharp\\WPF教程\\13WPF基本图形.md","url":"/chapter/c2b386cfad89df6c7fa7e540b1cf5192_0789e3dd7dcfe7a364b09978ebf0c5ce"},{"id":"c2b386cfad89df6c7fa7e540b1cf5192_f9e2cf299b43fd1ed1ce78a44fb8e17c","type":"chapter","name":"14WPFBrush.md","fullPath":"F:\\passerby\\csharp\\WPF教程\\14WPFBrush.md","url":"/chapter/c2b386cfad89df6c7fa7e540b1cf5192_f9e2cf299b43fd1ed1ce78a44fb8e17c"}],"title":"05WPF控件模型","type":"book","url":"/book/c2b386cfad89df6c7fa7e540b1cf5192","content":"\n    \n    \n      <div class=\"crossnote markdown-preview  \">\n      \n<h1 id=\"wpf控件模型\">WPF控件模型 </h1>\n<p>绿色代表抽象类，蓝色代表非抽象类<br>\n<img src=\"/assets/68742055c13d5e59ecbf1d337b70c486\" alt=\"控件的继承方式\"></p>\n<h2 id=\"控件内容模型\">控件内容模型 </h2>\n<blockquote>\n<p>System.Windows.Controls.Control类：表示 用户界面 (UI) 元素的基类，这些元素使用ControlTemplate来定义其外观</p>\n</blockquote>\n<ul>\n<li><a href=\"https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.controls.contentcontrol?view=windowsdesktop-8.0\">ContentControl</a>：ContentControl 是一种包含一段内容的 Control</li>\n<li><a href=\"https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.controls.headeredcontentcontrol?view=windowsdesktop-8.0\">HeaderedContentControl</a>：包含一段内容并具有 Header 的 ContentControl</li>\n<li><a href=\"https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.controls.itemscontrol?view=windowsdesktop-8.0\">ItemsControl</a>：可包含多个项目（例如字符串、对象或其他元素）的 Control</li>\n<li><a href=\"https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.controls.headereditemscontrol?view=windowsdesktop-8.0\">HeaderedItemsControl</a>：可包含多个项目（例如字符串、对象或其他元素）并具有标题的ItemsControl</li>\n</ul>\n<h3 id=\"contentcontrol\">ContentControl </h3>\n<blockquote>\n<p>ContentControl模型的类型具有一个 Content 属性。Content 属性的类型为 Object，因此，对于您在 ContentControl 中可以放置的内容没有任何限制。可以使用可扩展应用程序标记语言 (XAML) 或代码来设置 Content。以下控件使用 ContentControl 内容模型：Button、ButtonBase、CheckBox、ComboBoxItem、ContentControl、Frame、GridViewColumnHeader、GroupItem、Label、ListBoxItem、ListViewItem、NavigationWindow、RadioButton、RepeatButton、ScrollViewer、StatusBarItem、ToggleButton、ToolTip、UserControl、Window<br>\n在Content中只能放置一个控件（可以放置一个容器，然后再在容器中放置多个控件）</p>\n</blockquote>\n<pre data-role=\"codeBlock\" data-info=\"xml\" class=\"language-xml xml\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Button</span> <span class=\"token attr-name\">Margin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>5<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Button.Content</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Image</span> <span class=\"token attr-name\">Source</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Images/DVD.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>48<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>48<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Button.Content</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Button</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Button</span> <span class=\"token attr-name\">Margin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>5<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Image</span> <span class=\"token attr-name\">Source</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Images/DVD.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>48<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>48<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Button</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre><h3 id=\"headeredcontentcontrol模型\">HeaderedContentControl模型 </h3>\n<blockquote>\n<p>HeaderedContentControl类继承ContentControl类，表示带有Header的ContentControl，其除了具有ContentControl的Content属性外，还具有一个Header属性，Header的类型也是Object对象，与Content属性的用法类似。从 HeaderedContentControl 继承的控件有：Expander、GroupBox、TabItem。</p>\n</blockquote>\n<h3 id=\"itemscontrol模型\">ItemsControl模型 </h3>\n<blockquote>\n<p>从 ItemsControl 继承的控件包含一个对象集合。 ItemsControl 的一个示例是 ListBox。可以使用 ItemsSource 属性或 Items 属性来填充一个 ItemsControl。</p>\n</blockquote>\n<h3 id=\"headereditemscontrol模型\">HeaderedItemsControl模型 </h3>\n<blockquote>\n<p>HeaderedItemsControl 从 ItemsControl 类继承。HeaderedItemsControl 定义 Header 属性，该属性遵从相同的规则，因为 HeaderedContentControl. WPF 的 Header 属性附带三个从 HeaderedItemsControl 继承的控件：MenuItem、ToolBar、TreeViewItem</p>\n</blockquote>\n<h2 id=\"panel内容模型\">Panel内容模型 </h2>\n<blockquote>\n<p>System.Windows.Controls.Panel抽象类：为所有 Panel 元素提供基类。使用 Panel 元素在 Windows Presentation Foundation (WPF) 应用程序中放置和排列子对象,Panel内容模型包含的容器有：Canvas,DockPanel,Grid,TabPanel,ToolBarOverflowPanel,UniformGrid,StackPanel,ToolBarPanel,VirtualizingPanel,VirtualizingStackPanel,WrapPanel;对于Panel模型，其包含一个Children属性，表示其所有的子控件和子容器的集合</p>\n</blockquote>\n<h2 id=\"sharp模型\">Sharp模型 </h2>\n<blockquote>\n<p>System.Windows.Sharps.Sharp抽象类：为 Ellipse、Polygon 和 Rectangle 之类的形状元素提供基类</p>\n</blockquote>\n<h2 id=\"decorator模型\">Decorator模型 </h2>\n<blockquote>\n<p>System.Windows.Controls.Decorator类：提供在单个子元素（如 Border 或 Viewbox）上或周围应用效果的元素的基类,Decorator模型的主要控件包含：,AdornerDecorator,Border,InlineUIContainer,BulletDecorator,ButtonChrome,ClassicBorderDecorator,InkPresenter,ListBoxChrome,SystemDropShadowChrome,Viewbox;Decorator模型包含一个Child属性，表示其包含的一个子元素（注意，只能是一个子元素（控件或容器，在容器中可以再添加其他的控件）），Child属性的XAML标记可以省略。</p>\n</blockquote>\n<pre data-role=\"codeBlock\" data-info=\"xml\" class=\"language-xml xml\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>StackPanel</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mainPanel<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Border</span> <span class=\"token attr-name\">BorderThickness</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>5<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">BorderBrush</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>DarkBlue<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Margin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>5<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Border.Child</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>TextBox</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>TextBox Content<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Border.Child</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Border</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>StackPanel</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n      </div>\n      <div class=\"md-sidebar-toc\">\n<div class=\"md-toc\">\n<details style=\"padding:0;;padding-left:0px;\" open=\"\">\n        <summary class=\"md-toc-link-wrapper\">\n          <a href=\"#wpf控件模型\" class=\"md-toc-link\"><p>WPF控件模型</p>\n</a>\n          </summary>\n        <div>\n          <details style=\"padding:0;;padding-left:24px;\" open=\"\">\n        <summary class=\"md-toc-link-wrapper\">\n          <a href=\"#控件内容模型\" class=\"md-toc-link\"><p>控件内容模型</p>\n</a>\n          </summary>\n        <div>\n          <div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#contentcontrol\" class=\"md-toc-link\">\n            <p>ContentControl</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#headeredcontentcontrol模型\" class=\"md-toc-link\">\n            <p>HeaderedContentControl模型</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#itemscontrol模型\" class=\"md-toc-link\">\n            <p>ItemsControl模型</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#headereditemscontrol模型\" class=\"md-toc-link\">\n            <p>HeaderedItemsControl模型</p>\n\n          </a></div>\n        </div>\n      </details>\n    <div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#panel内容模型\" class=\"md-toc-link\">\n            <p>Panel内容模型</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#sharp模型\" class=\"md-toc-link\">\n            <p>Sharp模型</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#decorator模型\" class=\"md-toc-link\">\n            <p>Decorator模型</p>\n\n          </a></div>\n        </div>\n      </details>\n    \n</div>\n</div>\n      <a id=\"sidebar-toc-btn\">≡</a>\n    \n    \n    \n    \n    \n    \n<script>\n\nvar sidebarTOCBtn = document.getElementById('sidebar-toc-btn')\nsidebarTOCBtn.addEventListener('click', function(event) {\n  event.stopPropagation()\n  if (document.body.hasAttribute('html-show-sidebar-toc')) {\n    document.body.removeAttribute('html-show-sidebar-toc')\n  } else {\n    document.body.setAttribute('html-show-sidebar-toc', true)\n  }\n})\n</script>\n      \n  \n    "},"title":"05WPF控件模型"},"__N_SSG":true}