{"pageProps":{"bookInfo":{"id":"01288e0e885cf75f8b4030462c73080c","name":"IndexedDB","fullPath":"F:\\passerby\\database\\IndexedDB","chapterList":[{"id":"01288e0e885cf75f8b4030462c73080c_c54aca2a56dea5b07f85c2e105552f27","type":"chapter","name":"01基础.md","fullPath":"F:\\passerby\\database\\IndexedDB\\01基础.md","url":"/chapter/01288e0e885cf75f8b4030462c73080c_c54aca2a56dea5b07f85c2e105552f27"},{"id":"01288e0e885cf75f8b4030462c73080c_58d3e8ce1bf4951200b44c765ace9991","type":"chapter","name":"02浏览器存储限制和清理标准.md","fullPath":"F:\\passerby\\database\\IndexedDB\\02浏览器存储限制和清理标准.md","url":"/chapter/01288e0e885cf75f8b4030462c73080c_58d3e8ce1bf4951200b44c765ace9991"},{"id":"01288e0e885cf75f8b4030462c73080c_082eb46db76273d24977be29fc67558e","type":"chapter","name":"03接口.md","fullPath":"F:\\passerby\\database\\IndexedDB\\03接口.md","url":"/chapter/01288e0e885cf75f8b4030462c73080c_082eb46db76273d24977be29fc67558e"}],"title":"01基础","type":"book","url":"/book/01288e0e885cf75f8b4030462c73080c","content":"\n    \n    \n      <div class=\"crossnote markdown-preview  \">\n      \n<h1 id=\"indexeddb\">IndexedDB </h1>\n<blockquote>\n<p>一款基于浏览器客户端实现的存储大量的结构化数据的事务型数据库系统, 是一种底层API。该 API 使用索引实现对数据的高性能搜索；<br>\nIndexedDB 是一个基于 JavaScript 的面向对象数据库</p>\n</blockquote>\n<p>IndexedDB 执行的操作是异步执行的，以免阻塞应用程序</p>\n<h2 id=\"使用步骤\">使用步骤 </h2>\n<ol>\n<li>打开数据库</li>\n<li>在数据库中创建一个对象存储</li>\n<li>启动事务，并发送一个请求来执行一些数据库操作</li>\n<li>通过监听DOM事件等待操作完成</li>\n<li>对结果进行一些操作</li>\n</ol>\n<h3 id=\"打开数据库\">打开数据库 </h3>\n<pre data-role=\"codeBlock\" data-info=\"javascript\" class=\"language-javascript javascript\"><code><span class=\"token keyword keyword-const\">const</span> dbFactory <span class=\"token operator\">=</span> <span class=\"token dom variable\">window</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">indexedDB</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"TestDatabase\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword keyword-let\">let</span> dbInstance<span class=\"token punctuation\">;</span>\ndbFactory<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span><span class=\"token arrow operator\">=&gt;</span><span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">数据库错误：</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>event<span class=\"token punctuation\">.</span><span class=\"token property-access\">target</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">errorCode</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\ndbFactory<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"success\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span><span class=\"token arrow operator\">=&gt;</span><span class=\"token punctuation\">{</span>\n    dbInstance <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span><span class=\"token property-access\">target</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">result</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre><h3 id=\"在数据库中创建一个对象存储\">在数据库中创建一个对象存储 </h3>\n<p>IndexedDB 使用对象存储而不是表，并且一个数据库可以包含任意数量的对象存储。每当一个值被存入一个对象存储时，它会与一个键相关联。键的提供可以有几种不同的方法，这取决于对象存储是使用键路径还是键生成器</p>\n<table>\n<thead>\n<tr>\n<th>键路径</th>\n<th>键生成器</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>启用</td>\n<td>禁用</td>\n<td>可以保存任意类型的值，甚至是像数字和字符串这种原始值。每当我们想要增加一个新值的时候，必须提供一个单独的键参数</td>\n</tr>\n<tr>\n<td>启用</td>\n<td>禁用</td>\n<td>只能保存 JavaScript 对象。这些对象必须具有一个和键路径同名的属性</td>\n</tr>\n<tr>\n<td>禁用</td>\n<td>启用</td>\n<td>可以保存任意类型的值。键会为我们自动生成，或者如果你想要使用一个特定键的话你可以提供一个单独的键参数</td>\n</tr>\n<tr>\n<td>启用</td>\n<td>启用</td>\n<td>只能保存 JavaScript 对象。通常一个键被生成的同时，生成的键的值会被存储在对象中的一个和键路径同名的属性中。然而，如果已存在该属性，该属性的值将被用作键而不会生成一个新的键</td>\n</tr>\n</tbody>\n</table>\n<pre data-role=\"codeBlock\" data-info=\"javascript\" class=\"language-javascript javascript\"><code><span class=\"token keyword keyword-const\">const</span> customerData <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">ssn</span><span class=\"token operator\">:</span> <span class=\"token string\">\"444-44-4444\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Bill\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">35</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">email</span><span class=\"token operator\">:</span> <span class=\"token string\">\"bill@company.com\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">ssn</span><span class=\"token operator\">:</span> <span class=\"token string\">\"555-55-5555\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Donna\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">email</span><span class=\"token operator\">:</span> <span class=\"token string\">\"donna@home.org\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword keyword-const\">const</span> objectStore <span class=\"token operator\">=</span> dbInstance<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createObjectStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"customers\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">keyPath</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ssn\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nobjectStore<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createIndex</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">unique</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nobjectStore<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createIndex</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"email\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"email\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">unique</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nobjectStore<span class=\"token punctuation\">.</span><span class=\"token property-access\">transaction</span><span class=\"token punctuation\">.</span><span class=\"token method-variable function-variable method function property-access\">oncomplete</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 将数据保存到新创建的对象存储中。</span>\n    <span class=\"token keyword keyword-const\">const</span> customerObjectStore <span class=\"token operator\">=</span> dbInstance\n      <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">transaction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"customers\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"readwrite\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">objectStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"customers\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    customerData<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">customer</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      customerObjectStore<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">add</span><span class=\"token punctuation\">(</span>customer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n      </div>\n      <div class=\"md-sidebar-toc\">\n<div class=\"md-toc\">\n<details style=\"padding:0;;padding-left:0px;\" open=\"\">\n        <summary class=\"md-toc-link-wrapper\">\n          <a href=\"#indexeddb\" class=\"md-toc-link\"><p>IndexedDB</p>\n</a>\n          </summary>\n        <div>\n          <details style=\"padding:0;;padding-left:24px;\" open=\"\">\n        <summary class=\"md-toc-link-wrapper\">\n          <a href=\"#使用步骤\" class=\"md-toc-link\"><p>使用步骤</p>\n</a>\n          </summary>\n        <div>\n          <div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#打开数据库\" class=\"md-toc-link\">\n            <p>打开数据库</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#在数据库中创建一个对象存储\" class=\"md-toc-link\">\n            <p>在数据库中创建一个对象存储</p>\n\n          </a></div>\n        </div>\n      </details>\n    \n        </div>\n      </details>\n    \n</div>\n</div>\n      <a id=\"sidebar-toc-btn\">≡</a>\n    \n    \n    \n    \n    \n    \n<script>\n\nvar sidebarTOCBtn = document.getElementById('sidebar-toc-btn')\nsidebarTOCBtn.addEventListener('click', function(event) {\n  event.stopPropagation()\n  if (document.body.hasAttribute('html-show-sidebar-toc')) {\n    document.body.removeAttribute('html-show-sidebar-toc')\n  } else {\n    document.body.setAttribute('html-show-sidebar-toc', true)\n  }\n})\n</script>\n      \n  \n    "},"title":"01基础"},"__N_SSG":true}