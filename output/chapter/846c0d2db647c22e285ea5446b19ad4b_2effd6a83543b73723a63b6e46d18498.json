{"pageProps":{"bookInfo":{"id":"846c0d2db647c22e285ea5446b19ad4b","name":"地理信息系统算法基础","fullPath":"F:\\passerby\\gis\\地理信息系统算法基础","chapterList":[{"id":"846c0d2db647c22e285ea5446b19ad4b_2effd6a83543b73723a63b6e46d18498","type":"chapter","name":"01_第一章算法设计与分析.md","fullPath":"F:\\passerby\\gis\\地理信息系统算法基础\\01_第一章算法设计与分析.md","url":"/chapter/846c0d2db647c22e285ea5446b19ad4b_2effd6a83543b73723a63b6e46d18498"},{"id":"846c0d2db647c22e285ea5446b19ad4b_cfd04aa2bab6682f5a84b7c849be3958","type":"chapter","name":"02_第二章GIS算法中的计算几何基础.md","fullPath":"F:\\passerby\\gis\\地理信息系统算法基础\\02_第二章GIS算法中的计算几何基础.md","url":"/chapter/846c0d2db647c22e285ea5446b19ad4b_cfd04aa2bab6682f5a84b7c849be3958"},{"id":"846c0d2db647c22e285ea5446b19ad4b_1de381d432f230c2c3964bdd3c33c036","type":"chapter","name":"03_第三章空间数据的变换算法.md","fullPath":"F:\\passerby\\gis\\地理信息系统算法基础\\03_第三章空间数据的变换算法.md","url":"/chapter/846c0d2db647c22e285ea5446b19ad4b_1de381d432f230c2c3964bdd3c33c036"},{"id":"846c0d2db647c22e285ea5446b19ad4b_4a5502cbf8b3d3e5c7eb20e3f3352c85","type":"chapter","name":"04_空间数据的组织算法.md","fullPath":"F:\\passerby\\gis\\地理信息系统算法基础\\04_空间数据的组织算法.md","url":"/chapter/846c0d2db647c22e285ea5446b19ad4b_4a5502cbf8b3d3e5c7eb20e3f3352c85"},{"id":"846c0d2db647c22e285ea5446b19ad4b_f736b46643076940c922d3b1261e0a17","type":"chapter","name":"04_第四章空间数据转换算法.md","fullPath":"F:\\passerby\\gis\\地理信息系统算法基础\\04_第四章空间数据转换算法.md","url":"/chapter/846c0d2db647c22e285ea5446b19ad4b_f736b46643076940c922d3b1261e0a17"},{"id":"846c0d2db647c22e285ea5446b19ad4b_7a250f3580bbf64827e232db34b8f07b","type":"chapter","name":"05_空间度量算法.md","fullPath":"F:\\passerby\\gis\\地理信息系统算法基础\\05_空间度量算法.md","url":"/chapter/846c0d2db647c22e285ea5446b19ad4b_7a250f3580bbf64827e232db34b8f07b"},{"id":"846c0d2db647c22e285ea5446b19ad4b_ff697c8c07453113e22357b2494ea4a8","type":"chapter","name":"06_空间数据索引算法.md","fullPath":"F:\\passerby\\gis\\地理信息系统算法基础\\06_空间数据索引算法.md","url":"/chapter/846c0d2db647c22e285ea5446b19ad4b_ff697c8c07453113e22357b2494ea4a8"},{"id":"846c0d2db647c22e285ea5446b19ad4b_91eb892a82e3ff088927b9a718a8a2fb","type":"chapter","name":"12_空间数据挖掘算法.md","fullPath":"F:\\passerby\\gis\\地理信息系统算法基础\\12_空间数据挖掘算法.md","url":"/chapter/846c0d2db647c22e285ea5446b19ad4b_91eb892a82e3ff088927b9a718a8a2fb"},{"id":"846c0d2db647c22e285ea5446b19ad4b_89477a4771bf88c8e1be8a1f2e037e22","type":"chapter","name":"13_数据输出算法.md","fullPath":"F:\\passerby\\gis\\地理信息系统算法基础\\13_数据输出算法.md","url":"/chapter/846c0d2db647c22e285ea5446b19ad4b_89477a4771bf88c8e1be8a1f2e037e22"}],"title":"01_第一章算法设计与分析","type":"book","url":"/book/846c0d2db647c22e285ea5446b19ad4b","content":"\n    \n    \n      <div class=\"crossnote markdown-preview  \">\n      \n<h1 id=\"算法设计与分析\">算法设计与分析 </h1>\n<h2 id=\"概述\">概述 </h2>\n<blockquote>\n<p>算法是解决问题方法的精确描述;但是并不是所有问题都有算法，有些问题经研究可行，则相应的有算法，但这并不是说问题就有结果，上述中的“可行”，是指对算法的研究可行</p>\n</blockquote>\n<h3 id=\"待解问题的描述\">待解问题的描述 </h3>\n<p>待解问题的描述应精确、简练、清楚、使用形式化模型刻画问题是最恰当的。例如，使用数学模型刻画问题是最简明、严格的，一旦问题形式化了，就可依据严格的模型对问题求解</p>\n<h3 id=\"算法设计\">算法设计 </h3>\n<p>算法设计的任务是对各类具体问题设计良好的的算法以及研究设计算法的规律和方法，常用的算法有穷举搜索法、递归法、回溯法、贪心法、分治法等</p>\n<h3 id=\"算法分析\">算法分析 </h3>\n<p>算法分析的任务是对设计出的每一个具体的算法，利用数学工具，讨论各种复杂度度，探讨某种具体算法适用于哪类问题或某类问题宜采用那种算法。</p>\n<h2 id=\"算法设计原则\">算法设计原则 </h2>\n<blockquote>\n<p>设计的真谛，就是在一些互相冲突的需求和越少条件之间寻找平衡点，什么是一个良好的算法，这个问题可以从许多方面来阐述，不管是那种情况，都无法放之四海而皆准，但总有一些原则是在不断的探索中被发现并潜移默化的影响着我们的思维。算法的设计应当遵循一下一些原则</p>\n</blockquote>\n<h3 id=\"正确性\">正确性 </h3>\n<blockquote>\n<p>算法的正确性是指对于一个问题，之所以将其放在第一位是因为如果一个算法自身存在缺陷，或者不适合于问题的求解，那么该算法将不会解决问题。</p>\n</blockquote>\n<h3 id=\"确定性\">确定性 </h3>\n<blockquote>\n<p>算法的确定性是指算法的每个步骤必须含义明确，对每种可能的情况，算法都能给出确定的操作。即采用同一种算法，在同样的条件下无论计算多少次，始终能够得到确定的结果</p>\n</blockquote>\n<h3 id=\"清晰行\">清晰行 </h3>\n<blockquote>\n<p>一个良好的算法必须思路清晰，结构合理。算法的设计要模块化，模块化是指将一个大的算法分解成若干小而简单的部分---模块。每个模块可以独立的编写、测试，最后组装完成整个算法。模块化的目的是使算法的结构清晰，容易阅读、容易理解、容易测试、容易修改。模块的分割原则是要符合抽象原则，即指每个模块都要有明确的抽象意义。例如，在面向对象方法中，建立一个类的主要依据是该类描述的抽象数据类型</p>\n</blockquote>\n<h2 id=\"算法复杂性的度量\">算法复杂性的度量 </h2>\n<blockquote>\n<p>算法复杂性的包括算法的时间复杂性和空间复杂性。为了说明复杂性的概念。先介绍问题规模的概念，用一个与问题相关的整数量来衡量问题的大小，该整数量表示输入数据量的尺度，称为问题的规模。例如，行列式的规模可以用其阶数n来表示，图问题的规模可以用其边数或者定点数来表示等。</p>\n</blockquote>\n<p>利用某算法来处理一个问题规模为n的输入所需要的的时间称为该算法的时间复杂度，它显示是n的函数记为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">T(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></p>\n<p>类似的可以定义算法的空间复杂性<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">S(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></p>\n<h3 id=\"时间复杂性\">时间复杂性 </h3>\n<h4 id=\"阶的增长\">阶的增长 </h4>\n<p>显而易见，说一个算法A对于输入x，要用y秒运行是没有意义的，这是因为影响实际时间的因素不仅有相应的算法，还有其他诸多因素，例如，算法在什么机器上和怎样执行的，用的是哪一种编程语言，甚至于编译程序或者程序员的能力都有影响。因此只要的出确切实际的近似数就可以了，但是最重要的是，在评估一个算法效率的时候，我们需要的是确切时间还是近似时间，事实上，我们甚至不需要近似时间，这是由许多因素造成的，首先，在分析算法运行时间时，我们通常会将算法和解决同一个问题甚至是不同问题的算法相比较，这样，估计时间是相对的而不是绝对的，其次，我们希望一个算法不仅是独立于机器的，而且他能够用各种语言来表示，甚至是人类语言，再者，它还应该是技术独立的，也就是说，无论科技如何进步，我们对算法运行时间的测量始终成立，第四，我们主要不是关心小规模输入量的情况，最关心的是在大的输入实例时算法的运行情况</p>\n<p>事实上，在算法的某个“合理”实现中的计算运算次数，是比它所需要的的多了一些，作为上面第四种因素的推论，我们可以前进一大步，要精确计算所有的运算次数，如果不是不可能的话，也是非常麻烦的，由于我们只对大的输入时的运行时间感兴趣，可以讨论运行时间的增长率或者增长的阶，例如，如果可以寻找到某个常量c &gt; 0, 当给算法A以大小为n的输入时，算法的运行时间至多为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><msup><mi>n</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">cn^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span>,随着n越来越大，c将主键不起作用，进一步吧这个函数和另一个求解同一个问题的算法B的不同阶函数(<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><msup><mi>n</mi><mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">dn^3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span></span></span></span>)作比较，很明显，该常量并不会有太大的作用。同样的道理使用与函数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msup><mi>n</mi><mn>2</mn></msup><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo>+</mo><mn>10</mn><msup><mi>n</mi><mn>2</mn></msup><mo>+</mo><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">f(n)=n^2logn+10n^2+n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0085em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8974em;vertical-align:-0.0833em;\"></span><span class=\"mord\">10</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>中的低阶项，我们观察到，当n的值越大，低阶项<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>10</mn><msup><mi>n</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">10n^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\">10</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span>和n的影响就越小，因此，可以说算法A和B的运行时间分别是“<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">n^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span>阶”和“<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>n</mi><mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">n^3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span></span></span></span>阶”的或者属于“<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">n^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span>阶”和“<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>n</mi><mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">n^3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span></span></span></span>阶”，类似的我们可以说上面的函数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>是<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n^2logn</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0085em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">n</span></span></span></span>阶的</p>\n<p>一旦去除了表示算法运行时间的函数中的低阶项和首项常数，就成是在度量算法的渐近运行时间，与此相同，在算法分析的术语中，可以用更为技术性的术语“时间复杂性”来表示这一渐近时间</p>\n<p>对任何计算步骤，他的代价总是以一个时间常量为上界，而不管输入数据或者执行的算法，我们称该计算步骤为“元运算”。例如，取2个整数相加的运算，不管使用何种算法，我们都规定他的运算对象的大小是固定的，这一运算的运行时间是常数，而且由于显示是处理渐近的运行时间，我们可以任意选择正整数k为计算模型的“字长”</p>\n<h3 id=\"空间复杂性\">空间复杂性 </h3>\n<p>我们把算法使用的空间定义成：为了求解问题的实例而执行的计算步骤所需要的的内存空间数目，他不包括分配用来存储输入的空间；换句话说，仅仅是算法需要的工作空间</p>\n<h2 id=\"算法的评价\">算法的评价 </h2>\n<h3 id=\"如何估计算法运行时间\">如何估计算法运行时间 </h3>\n<ul>\n<li>计算迭代次数</li>\n<li>计算基本运算的频度</li>\n</ul>\n\n      </div>\n      <div class=\"md-sidebar-toc\">\n<div class=\"md-toc\">\n<details style=\"padding:0;;padding-left:0px;\" open=\"\">\n        <summary class=\"md-toc-link-wrapper\">\n          <a href=\"#算法设计与分析\" class=\"md-toc-link\"><p>算法设计与分析</p>\n</a>\n          </summary>\n        <div>\n          <details style=\"padding:0;;padding-left:24px;\" open=\"\">\n        <summary class=\"md-toc-link-wrapper\">\n          <a href=\"#概述\" class=\"md-toc-link\"><p>概述</p>\n</a>\n          </summary>\n        <div>\n          <div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#待解问题的描述\" class=\"md-toc-link\">\n            <p>待解问题的描述</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#算法设计\" class=\"md-toc-link\">\n            <p>算法设计</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#算法分析\" class=\"md-toc-link\">\n            <p>算法分析</p>\n\n          </a></div>\n        </div>\n      </details>\n    <details style=\"padding:0;;padding-left:24px;\" open=\"\">\n        <summary class=\"md-toc-link-wrapper\">\n          <a href=\"#算法设计原则\" class=\"md-toc-link\"><p>算法设计原则</p>\n</a>\n          </summary>\n        <div>\n          <div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#正确性\" class=\"md-toc-link\">\n            <p>正确性</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#确定性\" class=\"md-toc-link\">\n            <p>确定性</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#清晰行\" class=\"md-toc-link\">\n            <p>清晰行</p>\n\n          </a></div>\n        </div>\n      </details>\n    <details style=\"padding:0;;padding-left:24px;\" open=\"\">\n        <summary class=\"md-toc-link-wrapper\">\n          <a href=\"#算法复杂性的度量\" class=\"md-toc-link\"><p>算法复杂性的度量</p>\n</a>\n          </summary>\n        <div>\n          <details style=\"padding:0;;padding-left:24px;\" open=\"\">\n        <summary class=\"md-toc-link-wrapper\">\n          <a href=\"#时间复杂性\" class=\"md-toc-link\"><p>时间复杂性</p>\n</a>\n          </summary>\n        <div>\n          <div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#阶的增长\" class=\"md-toc-link\">\n            <p>阶的增长</p>\n\n          </a></div>\n        </div>\n      </details>\n    <div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#空间复杂性\" class=\"md-toc-link\">\n            <p>空间复杂性</p>\n\n          </a></div>\n        </div>\n      </details>\n    <details style=\"padding:0;;padding-left:24px;\" open=\"\">\n        <summary class=\"md-toc-link-wrapper\">\n          <a href=\"#算法的评价\" class=\"md-toc-link\"><p>算法的评价</p>\n</a>\n          </summary>\n        <div>\n          <div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#如何估计算法运行时间\" class=\"md-toc-link\">\n            <p>如何估计算法运行时间</p>\n\n          </a></div>\n        </div>\n      </details>\n    \n        </div>\n      </details>\n    \n</div>\n</div>\n      <a id=\"sidebar-toc-btn\">≡</a>\n    \n    \n    \n    \n    \n    \n<script>\n\nvar sidebarTOCBtn = document.getElementById('sidebar-toc-btn')\nsidebarTOCBtn.addEventListener('click', function(event) {\n  event.stopPropagation()\n  if (document.body.hasAttribute('html-show-sidebar-toc')) {\n    document.body.removeAttribute('html-show-sidebar-toc')\n  } else {\n    document.body.setAttribute('html-show-sidebar-toc', true)\n  }\n})\n</script>\n      \n  \n    "},"title":"01_第一章算法设计与分析"},"__N_SSG":true}