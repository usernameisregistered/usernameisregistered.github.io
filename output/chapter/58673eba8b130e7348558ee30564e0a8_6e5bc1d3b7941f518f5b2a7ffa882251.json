{"pageProps":{"bookInfo":{"id":"58673eba8b130e7348558ee30564e0a8","name":"marked源码解析","fullPath":"F:\\passerby\\source\\marked源码解析","chapterList":[{"id":"58673eba8b130e7348558ee30564e0a8_c872f1c85a156ee39f1e95b391df14e4","type":"chapter","name":"01单例Marked.md","fullPath":"F:\\passerby\\source\\marked源码解析\\01单例Marked.md","url":"/chapter/58673eba8b130e7348558ee30564e0a8_c872f1c85a156ee39f1e95b391df14e4"},{"id":"58673eba8b130e7348558ee30564e0a8_cb4742a4f7aec1ec432cd2b96e87b011","type":"chapter","name":"02词法分析latex.md","fullPath":"F:\\passerby\\source\\marked源码解析\\02词法分析latex.md","url":"/chapter/58673eba8b130e7348558ee30564e0a8_cb4742a4f7aec1ec432cd2b96e87b011"},{"id":"58673eba8b130e7348558ee30564e0a8_928a1b1220cfb8c94fc7bc0e674286db","type":"chapter","name":"03分词器Tokenizer.md","fullPath":"F:\\passerby\\source\\marked源码解析\\03分词器Tokenizer.md","url":"/chapter/58673eba8b130e7348558ee30564e0a8_928a1b1220cfb8c94fc7bc0e674286db"},{"id":"58673eba8b130e7348558ee30564e0a8_6e5bc1d3b7941f518f5b2a7ffa882251","type":"chapter","name":"04规则rules.md","fullPath":"F:\\passerby\\source\\marked源码解析\\04规则rules.md","url":"/chapter/58673eba8b130e7348558ee30564e0a8_6e5bc1d3b7941f518f5b2a7ffa882251"},{"id":"58673eba8b130e7348558ee30564e0a8_eb9c33f6bdeedf087da65aec0e4f1463","type":"chapter","name":"05Token.md","fullPath":"F:\\passerby\\source\\marked源码解析\\05Token.md","url":"/chapter/58673eba8b130e7348558ee30564e0a8_eb9c33f6bdeedf087da65aec0e4f1463"},{"id":"58673eba8b130e7348558ee30564e0a8_0fd00fbea263a8af4316e97677823ab5","type":"chapter","name":"前置.md","fullPath":"F:\\passerby\\source\\marked源码解析\\前置.md","url":"/chapter/58673eba8b130e7348558ee30564e0a8_0fd00fbea263a8af4316e97677823ab5"}],"title":"04规则rules","type":"book","url":"/book/58673eba8b130e7348558ee30564e0a8","content":"\n    \n    \n      <div class=\"crossnote markdown-preview  \">\n      \n<h1 id=\"解析规则-rules\">解析规则 rules </h1>\n<h2 id=\"正则编辑器\">正则编辑器 </h2>\n<pre data-role=\"codeBlock\" data-info=\"typescript\" class=\"language-typescript typescript\"><code><span class=\"token keyword keyword-function\">function</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>regex<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> RegExp<span class=\"token punctuation\">,</span> opt <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword keyword-let\">let</span> source <span class=\"token operator\">=</span> <span class=\"token keyword keyword-typeof\">typeof</span> regex <span class=\"token operator\">===</span> <span class=\"token string\">'string'</span> <span class=\"token operator\">?</span> regex <span class=\"token operator\">:</span> regex<span class=\"token punctuation\">.</span>source<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword keyword-const\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">replace</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> RegExp<span class=\"token punctuation\">,</span> val<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> RegExp<span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword keyword-let\">let</span> valSource <span class=\"token operator\">=</span> <span class=\"token keyword keyword-typeof\">typeof</span> val <span class=\"token operator\">===</span> <span class=\"token string\">'string'</span> <span class=\"token operator\">?</span> val <span class=\"token operator\">:</span> val<span class=\"token punctuation\">.</span>source<span class=\"token punctuation\">;</span>\n      valSource <span class=\"token operator\">=</span> valSource<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>other<span class=\"token punctuation\">.</span>caret<span class=\"token punctuation\">,</span> <span class=\"token string\">'$1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      source <span class=\"token operator\">=</span> source<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> valSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword keyword-return\">return</span> obj<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">getRegex</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword keyword-return\">return</span> <span class=\"token keyword keyword-new\">new</span> <span class=\"token class-name\">RegExp</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span> opt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword keyword-return\">return</span> obj<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><h2 id=\"其他类型\">其他类型 </h2>\n<p>| 匹配代码行的缩进| codeRemoveIndent|  <code>/^(?: {1,4}| {0,3}\\t)/gm</code> |<br>\noutputLinkReplace <code>/\\\\([\\[\\]])/g</code><br>\nindentCodeCompensation <code>/^(\\s+)(?:```)/</code><br>\nbeginningSpace <code>/^\\s+/</code><br>\nendingHash: <code>/#$/</code><br>\nstartingSpaceChar <code>/^ /</code><br>\nendingSpaceChar <code>/ $/</code><br>\nnonSpaceChar: <code>/[^ ]/</code><br>\nnewLineCharGlobal <code>/\\n/g</code><br>\n|制表符 | tabCharGlobal | <code>/\\t/g</code> |<br>\nmultipleSpaceGlobal <code>/\\s+/g</code><br>\nblankLine <code>/^[ \\t]*$/</code><br>\ndoubleBlankLine <code>/\\n[ \\t]*\\n[ \\t]*$/</code><br>\nblockquoteStart <code>/^ {0,3}&gt;/</code><br>\nblockquoteSetextReplace <code>/\\n {0,3}((?:=+|-+) *)(?=\\n|$)/g</code><br>\nblockquoteSetextReplace2 <code>/^ {0,3}&gt;[ \\t]?/gm</code><br>\nlistReplaceTabs <code>/^\\t+/</code><br>\nlistReplaceNesting <code>/^ {1,4}(?=( {4})*[^ ])/g</code><br>\nlistIsTask <code>/^\\[[ xX]\\] /</code><br>\nlistReplaceTask <code>/^\\[[ xX]\\] +/</code><br>\nanyLine <code>/\\n.*\\n/</code><br>\nhrefBrackets <code>/^&lt;(.*)&gt;$/</code><br>\ntableDelimiter <code>/[:|]/</code><br>\ntableAlignChars <code>/^\\||\\| *$/g</code><br>\ntableRowBlankLine <code>/\\n[ \\t]*$/</code><br>\ntableAlignRight <code>/^ *-+: *$/</code><br>\ntableAlignCenter <code>/^ *:-+: *$/</code><br>\ntableAlignLeft <code>/^ *:-+ *$/</code><br>\nstartATag <code>/^&lt;a /i</code><br>\nendATag <code>/^&lt;\\/a&gt;/i</code><br>\nstartPreScriptTag <code>/^&lt;(pre|code|kbd|script)(\\s|&gt;)/i</code><br>\nendPreScriptTag <code>/^&lt;\\/(pre|code|kbd|script)(\\s|&gt;)/i</code><br>\nstartAngleBracket <code>/^&lt;/</code><br>\nendAngleBracket <code>/&gt;$/</code><br>\npedanticHrefTitle <code>/^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/</code><br>\nunicodeAlphaNumeric <code>/[\\p{L}\\p{N}]/u</code><br>\nescapeTest <code>/[&amp;&lt;&gt;\"']/</code><br>\nescapeReplace <code>/[&amp;&lt;&gt;\"']/g</code><br>\nescapeTestNoEncode <code>/[&lt;&gt;\"']|&amp;(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/</code><br>\nescapeReplaceNoEncode <code>/[&lt;&gt;\"']|&amp;(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/g</code><br>\nunescapeTest <code>/&amp;(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig</code><br>\ncaret <code>/(^|[^\\[])\\^/g</code><br>\npercentDecode <code>/%25/g</code><br>\nfindPipe <code>/\\|/g</code><br>\nsplitPipe <code>/ \\|/</code><br>\nslashPipe <code>/\\\\\\|/g</code><br>\n| 回车换行 | carriageReturn|  <code>/\\r\\n|\\r/g</code> |<br>\n| spaceLine | 空行 |<code>/^ +$/gm</code> |<br>\nnotSpaceStart <code>/^\\S*/</code><br>\nendingNewline <code>/\\n$/</code><br>\nlistItemRegex <code>(bull: string) =&gt; new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`)</code><br>\nnextBulletRegex <code>(indent: number) =&gt; new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`)</code><br>\nhrRegex <code>(indent: number) =&gt; new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`)</code><br>\nfencesBeginRegex <code>(indent: number) =&gt; new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`)</code><br>\nheadingBeginRegex <code>(indent: number) =&gt; new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`)</code><br>\nhtmlBeginRegex <code>(indent: number) =&gt; new RegExp(`^ {0,${Math.min(3, indent - 1)}}&lt;(?:[a-z].*&gt;|!--)`, 'i')</code></p>\n<h2 id=\"块级类型\">块级类型 </h2>\n<p>| 空白行 | newline | <code>/^(?:[ \\t]*(?:\\n|$))+/</code> |<br>\n| 代码块（缩进）| blockCode |<code>/^((?: {4}| {0,3}\\t)[^\\n]+(?:\\n(?:[ \\t]*(?:\\n|$))*)?)+/;</code>|<br>\nfences <code>/^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/</code><br>\nhr <code>/^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/</code><br>\nheading <code>/^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/</code><br>\nbullet <code>/(?:[*+-]|\\d{1,9}[.)])/</code><br>\nlheading</p>\n<pre data-role=\"codeBlock\" data-info=\"javascript\" class=\"language-javascript javascript\"><code><span class=\"token function\">edit</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^(?!bull |blockCode|fences|blockquote|heading|html)((?:.|\\n(?!\\s*?\\n|bull |blockCode|fences|blockquote|heading|html))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">bull</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> bullet<span class=\"token punctuation\">)</span> <span class=\"token comment\">// lists can interrupt</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">blockCode</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(?: {4}| {0,3}\\t)</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// indented code blocks can interrupt</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">fences</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\"> {0,3}(?:`{3,}|~{3,})</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// fenced code blocks can interrupt</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">blockquote</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\"> {0,3}&gt;</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// blockquote can interrupt</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">heading</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\"> {0,3}#{1,6}</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// ATX heading can interrupt</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">html</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\"> {0,3}&lt;[^\\n&gt;]+&gt;\\n</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// block html can interrupt</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getRegex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre><p>_paragraph <code>/^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/</code><br>\nblockText <code>/^[^\\n]+/</code><br>\n_blockLabel  <code>/(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/</code><br>\ndef</p>\n<pre data-role=\"codeBlock\" data-info=\"javascript\" class=\"language-javascript javascript\"><code><span class=\"token function\">edit</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^ {0,3}\\[(label)\\]: *(?:\\n[ \\t]*)?([^&lt;\\s][^\\s]*|&lt;.*?&gt;)(?:(?: +(?:\\n[ \\t]*)?| *\\n[ \\t]*)(title))? *(?:\\n+|$)</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'label'</span><span class=\"token punctuation\">,</span> _blockLabel<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'title'</span><span class=\"token punctuation\">,</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getRegex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre><p>list</p>\n<pre data-role=\"codeBlock\" data-info=\"javascript\" class=\"language-javascript javascript\"><code><span class=\"token function\">edit</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">bull</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> bullet<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getRegex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre><p>_tag</p>\n<pre data-role=\"codeBlock\" data-info=\"javascript\" class=\"language-javascript javascript\"><code><span class=\"token string\">'address|article|aside|base|basefont|blockquote|body|caption'</span>\n  <span class=\"token operator\">+</span> <span class=\"token string\">'|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'</span>\n  <span class=\"token operator\">+</span> <span class=\"token string\">'|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'</span>\n  <span class=\"token operator\">+</span> <span class=\"token string\">'|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'</span>\n  <span class=\"token operator\">+</span> <span class=\"token string\">'|p|param|search|section|summary|table|tbody|td|tfoot|th|thead|title'</span>\n  <span class=\"token operator\">+</span> <span class=\"token string\">'|tr|track|ul'</span>\n</code></pre><p>_comment <code>/&lt;!--(?:-?&gt;|[\\s\\S]*?(?:--&gt;|$))/</code><br>\nhtml</p>\n<pre data-role=\"codeBlock\" data-info=\"javascript\" class=\"language-javascript javascript\"><code><span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'^ {0,3}(?:'</span> <span class=\"token comment\">// optional indentation</span>\n<span class=\"token operator\">+</span> <span class=\"token string\">'&lt;(script|pre|style|textarea)[\\\\s&gt;][\\\\s\\\\S]*?(?:&lt;/\\\\1&gt;[^\\\\n]*\\\\n+|$)'</span> <span class=\"token comment\">// (1)</span>\n<span class=\"token operator\">+</span> <span class=\"token string\">'|comment[^\\\\n]*(\\\\n+|$)'</span> <span class=\"token comment\">// (2)</span>\n<span class=\"token operator\">+</span> <span class=\"token string\">'|&lt;\\\\?[\\\\s\\\\S]*?(?:\\\\?&gt;\\\\n*|$)'</span> <span class=\"token comment\">// (3)</span>\n<span class=\"token operator\">+</span> <span class=\"token string\">'|&lt;![A-Z][\\\\s\\\\S]*?(?:&gt;\\\\n*|$)'</span> <span class=\"token comment\">// (4)</span>\n<span class=\"token operator\">+</span> <span class=\"token string\">'|&lt;!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]&gt;\\\\n*|$)'</span> <span class=\"token comment\">// (5)</span>\n<span class=\"token operator\">+</span> <span class=\"token string\">'|&lt;/?(tag)(?: +|\\\\n|/?&gt;)[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)'</span> <span class=\"token comment\">// (6)</span>\n<span class=\"token operator\">+</span> <span class=\"token string\">'|&lt;(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?&gt;(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)'</span> <span class=\"token comment\">// (7) open tag</span>\n<span class=\"token operator\">+</span> <span class=\"token string\">'|&lt;/(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*&gt;(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)'</span> <span class=\"token comment\">// (7) closing tag</span>\n<span class=\"token operator\">+</span> <span class=\"token string\">')'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'i'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'comment'</span><span class=\"token punctuation\">,</span> _comment<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tag'</span><span class=\"token punctuation\">,</span> _tag<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'attribute'</span><span class=\"token punctuation\">,</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\"> +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=&lt;&gt;`]+)?</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getRegex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre><p>paragraph</p>\n<pre data-role=\"codeBlock\" data-info=\"javascript\" class=\"language-javascript javascript\"><code> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>_paragraph<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hr'</span><span class=\"token punctuation\">,</span> hr<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'heading'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' {0,3}#{1,6}(?:\\\\s|$)'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'|lheading'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// setext headings don't interrupt commonmark paragraphs</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'|table'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'blockquote'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' {0,3}&gt;'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fences'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'list'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' {0,3}(?:[*+-]|1[.)]) '</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// only lists starting from 1 can interrupt</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'html'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'&lt;/?(?:tag)(?: +|\\\\n|/?&gt;)|&lt;(?:script|pre|style|textarea|!--)'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tag'</span><span class=\"token punctuation\">,</span> _tag<span class=\"token punctuation\">)</span> <span class=\"token comment\">// pars can be interrupted by type (6) html blocks</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getRegex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><p>blockquote</p>\n<pre data-role=\"codeBlock\" data-info=\"javascript\" class=\"language-javascript javascript\"><code><span class=\"token function\">edit</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^( {0,3}&gt; ?(paragraph|[^\\n]*)(?:\\n|$))+</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'paragraph'</span><span class=\"token punctuation\">,</span> paragraph<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getRegex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre><p>gfmTable</p>\n<pre data-role=\"codeBlock\" data-info=\"javascript\" class=\"language-javascript javascript\"><code><span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'^ *([^\\\\n ].*)\\\\n'</span> <span class=\"token comment\">// Header</span>\n<span class=\"token operator\">+</span> <span class=\"token string\">' {0,3}((?:\\\\| *)?:?-+:? *(?:\\\\| *:?-+:? *)*(?:\\\\| *)?)'</span> <span class=\"token comment\">// Align</span>\n<span class=\"token operator\">+</span> <span class=\"token string\">'(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Cells</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hr'</span><span class=\"token punctuation\">,</span> hr<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'heading'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' {0,3}#{1,6}(?:\\\\s|$)'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'blockquote'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' {0,3}&gt;'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'code'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'(?: {4}| {0,3}\\t)[^\\\\n]'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fences'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'list'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' {0,3}(?:[*+-]|1[.)]) '</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// only lists starting from 1 can interrupt</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'html'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'&lt;/?(?:tag)(?: +|\\\\n|/?&gt;)|&lt;(?:script|pre|style|textarea|!--)'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tag'</span><span class=\"token punctuation\">,</span> _tag<span class=\"token punctuation\">)</span> <span class=\"token comment\">// tables can be interrupted by type (6) html blocks</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getRegex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre><h2 id=\"行内类型\">行内类型 </h2>\n\n      </div>\n      <div class=\"md-sidebar-toc\">\n<div class=\"md-toc\">\n<details style=\"padding:0;;padding-left:0px;\" open=\"\">\n        <summary class=\"md-toc-link-wrapper\">\n          <a href=\"#解析规则-rules\" class=\"md-toc-link\"><p>解析规则 rules</p>\n</a>\n          </summary>\n        <div>\n          <div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#正则编辑器\" class=\"md-toc-link\">\n            <p>正则编辑器</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#其他类型\" class=\"md-toc-link\">\n            <p>其他类型</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#块级类型\" class=\"md-toc-link\">\n            <p>块级类型</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#行内类型\" class=\"md-toc-link\">\n            <p>行内类型</p>\n\n          </a></div>\n        </div>\n      </details>\n    \n</div>\n</div>\n      <a id=\"sidebar-toc-btn\">≡</a>\n    \n    \n    \n    \n    \n    \n<script>\n\nvar sidebarTOCBtn = document.getElementById('sidebar-toc-btn')\nsidebarTOCBtn.addEventListener('click', function(event) {\n  event.stopPropagation()\n  if (document.body.hasAttribute('html-show-sidebar-toc')) {\n    document.body.removeAttribute('html-show-sidebar-toc')\n  } else {\n    document.body.setAttribute('html-show-sidebar-toc', true)\n  }\n})\n</script>\n      \n  \n    "},"title":"04规则rules"},"__N_SSG":true}