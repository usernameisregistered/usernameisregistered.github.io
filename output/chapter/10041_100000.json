{"pageProps":{"bookInfo":{"id":"10041","name":"静态站点工具","fullPath":"F:\\passerby\\develop\\静态站点工具","chapterList":[{"id":"10041_100000","type":"chapter","name":"nextjs","fullPath":"F:\\passerby\\develop\\静态站点工具\\nextjs.md","url":"/chapter/10041_100000","content":"\n    \n    \n      <div class=\"crossnote markdown-preview  \">\n      \n<h1 id=\"介绍\">介绍 </h1>\n<blockquote>\n<p>此文章的内容呢针对于nextjs的初学者</p>\n</blockquote>\n<p>Next.js 是一个灵活的 React 框架，为开发者提供了构建高性能、可扩展 Web 应用的全套工具</p>\n<p>Next.js <strong>使用基于文件系统的路由</strong></p>\n<p>nextjs的实例可以参考<a href=\"https://github.com/usernameisregistered/usernameisregistered.github.io/tree/nextjs_devlop\">usernameisregistered.github.io</a></p>\n<h2 id=\"开发注意事项\">开发注意事项 </h2>\n<h3 id=\"打包过程中的过程报错文件大小超128kb\">打包过程中的过程报错文件大小超128kB </h3>\n<p>修改配置文件<code>next.config.ts</code>，在配置文件修改属性largePageDataBytes</p>\n<pre data-role=\"codeBlock\" data-info=\"ts\" class=\"language-ts ts\"><code><span class=\"token keyword keyword-const\">const</span> nextConfig<span class=\"token operator\">:</span> NextConfig <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* config options here */</span>\n  experimental<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> \n    largePageDataBytes<span class=\"token operator\">:</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">// 单位是字节</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre><h3 id=\"ssg生成后的文件无法直接发布在git-page上\">SSG生成后的文件无法直接发布在<code>git page</code>上 </h3>\n<p><strong>页面地址和内容</strong></p>\n<ul>\n<li>生成的静态页面位于<code>.next/server/pages</code></li>\n<li>生成后的静态资源文件位于<code>.next/static</code></li>\n<li>模板页面使用的静态图片位于<code>public</code></li>\n<li>SSG生成的静态页面的资源引用地址<code>/.next/static/xxx</code></li>\n</ul>\n<p>为了使得在git page上直接发布需要对静态资源进行整理和引用内容地址进行更改然后重写<br>\n可以参考<a href=\"https://github.com/usernameisregistered/usernameisregistered.github.io/blob/master/export.js\">export.js</a></p>\n<h3 id=\"使用pididtsx的动态路由ssg生成的页面不全面\">使用[pid]/[id].tsx的动态路由SSG生成的页面不全面 </h3>\n<p>当使用上述的动态路由模式时,当<code>pid</code>和<code>id</code>同时进行变化时，而且<code>id</code>存在多个内容时，虽然在开发环境中会不管有多少个<code>id</code>页面时能够正常预览的。但是在build是生成的页面会只有最后一个页面被渲染，其他的页面不只是被覆盖还是未生成；针对这种情况可以考虑将<code>pid</code>和<code>id</code>进行合并,使用单动态路由去渲染页面<em>暂时没有找到好的解决方案</em>，使用<code>name/[allId].tsx</code>去生成界面，以避免上述问题</p>\n<h3 id=\"针对不同的页面如何生成不同的title\">针对不同的页面如何生成不同的title </h3>\n<p>在tsx的模板的<code>render</code>函数中使用<code>next/head</code>提供的组件容器<code>Head</code>, 如</p>\n<pre data-role=\"codeBlock\" data-info=\"react\" class=\"language-react react\"><code>&lt;Head&gt;\n    &lt;title&gt;{title}&lt;/title&gt;\n    &lt;meta name=\"keywords\" content=\"{keywords}\"/&gt;\n    &lt;meta name=\"description\" content=\"{description}\"/&gt;\n&lt;/Head&gt;\n</code></pre>\n      </div>\n      <div class=\"md-sidebar-toc\">\n<div class=\"md-toc\">\n<details style=\"padding:0;;padding-left:0px;\" open=\"\">\n        <summary class=\"md-toc-link-wrapper\">\n          <a href=\"#介绍\" class=\"md-toc-link\"><p>介绍</p>\n</a>\n          </summary>\n        <div>\n          <details style=\"padding:0;;padding-left:24px;\" open=\"\">\n        <summary class=\"md-toc-link-wrapper\">\n          <a href=\"#开发注意事项\" class=\"md-toc-link\"><p>开发注意事项</p>\n</a>\n          </summary>\n        <div>\n          <div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#打包过程中的过程报错文件大小超128kb\" class=\"md-toc-link\">\n            <p>打包过程中的过程报错文件大小超128kB</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#ssg生成后的文件无法直接发布在git-page上\" class=\"md-toc-link\">\n            <p>SSG生成后的文件无法直接发布在<code>git page</code>上</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#使用pididtsx的动态路由ssg生成的页面不全面\" class=\"md-toc-link\">\n            <p>使用[pid]/[id].tsx的动态路由SSG生成的页面不全面</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#针对不同的页面如何生成不同的title\" class=\"md-toc-link\">\n            <p>针对不同的页面如何生成不同的title</p>\n\n          </a></div>\n        </div>\n      </details>\n    \n        </div>\n      </details>\n    \n</div>\n</div>\n      <a id=\"sidebar-toc-btn\">≡</a>\n    \n    \n    \n    \n    \n    \n<script>\n\nvar sidebarTOCBtn = document.getElementById('sidebar-toc-btn')\nsidebarTOCBtn.addEventListener('click', function(event) {\n  event.stopPropagation()\n  if (document.body.hasAttribute('html-show-sidebar-toc')) {\n    document.body.removeAttribute('html-show-sidebar-toc')\n  } else {\n    document.body.setAttribute('html-show-sidebar-toc', true)\n  }\n})\n</script>\n      \n  \n    "}],"type":"book","url":"/book/10041"},"chapterInfo":{"id":"10041_100000","type":"chapter","name":"nextjs","fullPath":"F:\\passerby\\develop\\静态站点工具\\nextjs.md","url":"/chapter/10041_100000","content":"\n    \n    \n      <div class=\"crossnote markdown-preview  \">\n      \n<h1 id=\"介绍\">介绍 </h1>\n<blockquote>\n<p>此文章的内容呢针对于nextjs的初学者</p>\n</blockquote>\n<p>Next.js 是一个灵活的 React 框架，为开发者提供了构建高性能、可扩展 Web 应用的全套工具</p>\n<p>Next.js <strong>使用基于文件系统的路由</strong></p>\n<p>nextjs的实例可以参考<a href=\"https://github.com/usernameisregistered/usernameisregistered.github.io/tree/nextjs_devlop\">usernameisregistered.github.io</a></p>\n<h2 id=\"开发注意事项\">开发注意事项 </h2>\n<h3 id=\"打包过程中的过程报错文件大小超128kb\">打包过程中的过程报错文件大小超128kB </h3>\n<p>修改配置文件<code>next.config.ts</code>，在配置文件修改属性largePageDataBytes</p>\n<pre data-role=\"codeBlock\" data-info=\"ts\" class=\"language-ts ts\"><code><span class=\"token keyword keyword-const\">const</span> nextConfig<span class=\"token operator\">:</span> NextConfig <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* config options here */</span>\n  experimental<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> \n    largePageDataBytes<span class=\"token operator\">:</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">// 单位是字节</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre><h3 id=\"ssg生成后的文件无法直接发布在git-page上\">SSG生成后的文件无法直接发布在<code>git page</code>上 </h3>\n<p><strong>页面地址和内容</strong></p>\n<ul>\n<li>生成的静态页面位于<code>.next/server/pages</code></li>\n<li>生成后的静态资源文件位于<code>.next/static</code></li>\n<li>模板页面使用的静态图片位于<code>public</code></li>\n<li>SSG生成的静态页面的资源引用地址<code>/.next/static/xxx</code></li>\n</ul>\n<p>为了使得在git page上直接发布需要对静态资源进行整理和引用内容地址进行更改然后重写<br>\n可以参考<a href=\"https://github.com/usernameisregistered/usernameisregistered.github.io/blob/master/export.js\">export.js</a></p>\n<h3 id=\"使用pididtsx的动态路由ssg生成的页面不全面\">使用[pid]/[id].tsx的动态路由SSG生成的页面不全面 </h3>\n<p>当使用上述的动态路由模式时,当<code>pid</code>和<code>id</code>同时进行变化时，而且<code>id</code>存在多个内容时，虽然在开发环境中会不管有多少个<code>id</code>页面时能够正常预览的。但是在build是生成的页面会只有最后一个页面被渲染，其他的页面不只是被覆盖还是未生成；针对这种情况可以考虑将<code>pid</code>和<code>id</code>进行合并,使用单动态路由去渲染页面<em>暂时没有找到好的解决方案</em>，使用<code>name/[allId].tsx</code>去生成界面，以避免上述问题</p>\n<h3 id=\"针对不同的页面如何生成不同的title\">针对不同的页面如何生成不同的title </h3>\n<p>在tsx的模板的<code>render</code>函数中使用<code>next/head</code>提供的组件容器<code>Head</code>, 如</p>\n<pre data-role=\"codeBlock\" data-info=\"react\" class=\"language-react react\"><code>&lt;Head&gt;\n    &lt;title&gt;{title}&lt;/title&gt;\n    &lt;meta name=\"keywords\" content=\"{keywords}\"/&gt;\n    &lt;meta name=\"description\" content=\"{description}\"/&gt;\n&lt;/Head&gt;\n</code></pre>\n      </div>\n      <div class=\"md-sidebar-toc\">\n<div class=\"md-toc\">\n<details style=\"padding:0;;padding-left:0px;\" open=\"\">\n        <summary class=\"md-toc-link-wrapper\">\n          <a href=\"#介绍\" class=\"md-toc-link\"><p>介绍</p>\n</a>\n          </summary>\n        <div>\n          <details style=\"padding:0;;padding-left:24px;\" open=\"\">\n        <summary class=\"md-toc-link-wrapper\">\n          <a href=\"#开发注意事项\" class=\"md-toc-link\"><p>开发注意事项</p>\n</a>\n          </summary>\n        <div>\n          <div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#打包过程中的过程报错文件大小超128kb\" class=\"md-toc-link\">\n            <p>打包过程中的过程报错文件大小超128kB</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#ssg生成后的文件无法直接发布在git-page上\" class=\"md-toc-link\">\n            <p>SSG生成后的文件无法直接发布在<code>git page</code>上</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#使用pididtsx的动态路由ssg生成的页面不全面\" class=\"md-toc-link\">\n            <p>使用[pid]/[id].tsx的动态路由SSG生成的页面不全面</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#针对不同的页面如何生成不同的title\" class=\"md-toc-link\">\n            <p>针对不同的页面如何生成不同的title</p>\n\n          </a></div>\n        </div>\n      </details>\n    \n        </div>\n      </details>\n    \n</div>\n</div>\n      <a id=\"sidebar-toc-btn\">≡</a>\n    \n    \n    \n    \n    \n    \n<script>\n\nvar sidebarTOCBtn = document.getElementById('sidebar-toc-btn')\nsidebarTOCBtn.addEventListener('click', function(event) {\n  event.stopPropagation()\n  if (document.body.hasAttribute('html-show-sidebar-toc')) {\n    document.body.removeAttribute('html-show-sidebar-toc')\n  } else {\n    document.body.setAttribute('html-show-sidebar-toc', true)\n  }\n})\n</script>\n      \n  \n    "}},"__N_SSG":true}