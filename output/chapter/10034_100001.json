{"pageProps":{"bookInfo":{"id":"10034","name":"memcached","fullPath":"D:\\personal\\文档\\passerby\\database\\memcached","chapterList":[{"id":"10034_100000","type":"chapter","name":"介绍","fullPath":"D:\\personal\\文档\\passerby\\database\\memcached\\01介绍.md","url":"/chapter/10034_100000","content":"\n    \n    \n      <div class=\"crossnote markdown-preview  \">\n      \n<h1 id=\"介绍\">介绍 </h1>\n<p>Memcached是一种基于内存的key-value存储，用来存储小块的任意数据（字符串、对象）</p>\n<h2 id=\"安装\">安装 </h2>\n<p>[linux]<br>\nyum install libevent libevent-devel<br>\nyum install memcached</p>\n<p>启动 /usr/local/memcached/bin/memcached -p 11211 -m 64m -d</p>\n<p>[windows]</p>\n<h2 id=\"连接\">连接 </h2>\n<p>telnet HOST PORT</p>\n\n      </div>\n      <div class=\"md-sidebar-toc\">\n<div class=\"md-toc\">\n<details style=\"padding:0;;padding-left:0px;\" open=\"\">\n        <summary class=\"md-toc-link-wrapper\">\n          <a href=\"#介绍\" class=\"md-toc-link\"><p>介绍</p>\n</a>\n          </summary>\n        <div>\n          <div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#安装\" class=\"md-toc-link\">\n            <p>安装</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#连接\" class=\"md-toc-link\">\n            <p>连接</p>\n\n          </a></div>\n        </div>\n      </details>\n    \n</div>\n</div>\n      <a id=\"sidebar-toc-btn\">≡</a>\n    \n    \n    \n    \n    \n    \n<script>\n\nvar sidebarTOCBtn = document.getElementById('sidebar-toc-btn')\nsidebarTOCBtn.addEventListener('click', function(event) {\n  event.stopPropagation()\n  if (document.body.hasAttribute('html-show-sidebar-toc')) {\n    document.body.removeAttribute('html-show-sidebar-toc')\n  } else {\n    document.body.setAttribute('html-show-sidebar-toc', true)\n  }\n})\n</script>\n      \n  \n    "},{"id":"10034_100001","type":"chapter","name":"命令","fullPath":"D:\\personal\\文档\\passerby\\database\\memcached\\02命令.md","url":"/chapter/10034_100001","content":"\n    \n    \n      <div class=\"crossnote markdown-preview  \">\n      \n<p>将 value(数据值) 存储在指定的 key(键) 中</p>\n<pre data-role=\"codeBlock\" data-info=\"\" class=\"language-text\"><code>set key flags exptime bytes [noreply] \nvalue \n\nadd key flags exptime bytes [noreply]\nvalue\n</code></pre><p>替换已存在的 key(键) 的 value(数据值)</p>\n<pre data-role=\"codeBlock\" data-info=\"\" class=\"language-text\"><code>replace key flags exptime bytes [noreply]\nvalue\n</code></pre><p>向已存在 key(键) 的 value(数据值) 后面追加数据</p>\n<pre data-role=\"codeBlock\" data-info=\"\" class=\"language-text\"><code>append key flags exptime bytes [noreply]\nvalue\n</code></pre><p>向已存在 key(键) 的 value(数据值) 前面追加数据</p>\n<pre data-role=\"codeBlock\" data-info=\"\" class=\"language-text\"><code>prepend key flags exptime bytes [noreply]\nvalue\n</code></pre><p>用于执行一个\"检查并设置\"的操作</p>\n<pre data-role=\"codeBlock\" data-info=\"\" class=\"language-text\"><code>cas key flags exptime bytes unique_cas_token [noreply]\nvalue\n</code></pre><p>获取存储在 key(键) 中的 value(数据值)</p>\n<pre data-role=\"codeBlock\" data-info=\"\" class=\"language-text\"><code>get key\nget key1 key2 key3\n</code></pre><p>获取带有 CAS 令牌存 的 value(数据值)</p>\n<pre data-role=\"codeBlock\" data-info=\"\" class=\"language-text\"><code>gets key\ngets key1 key2 key3\n</code></pre><p>删除已存在的 key(键)</p>\n<pre data-role=\"codeBlock\" data-info=\"\" class=\"language-text\"><code>delete key [noreply]\n</code></pre><p>对已存在的 key(键) 的数字值进行自增或自减操作</p>\n<pre data-role=\"codeBlock\" data-info=\"\" class=\"language-text\"><code>incr key increment_value\ndecr key decrement_value\n</code></pre><p>返回统计信息例如 PID(进程号)、版本号、连接数  stats<br>\n显示各个 slab 中 item 的数目和存储时长 stats items<br>\n显示各个slab的信息，包括chunk的大小、数目、使用情况  stats slabs<br>\n显示所有item的大小和个数 stats sizes<br>\n清理缓存中的所有 key=&gt;value(键=&gt;值) 对 flush_all [time] [noreply]</p>\n\n      </div>\n      <div class=\"md-sidebar-toc\"></div>\n      <a id=\"sidebar-toc-btn\">≡</a>\n    \n    \n    \n    \n    \n    \n<script>\n\nvar sidebarTOCBtn = document.getElementById('sidebar-toc-btn')\nsidebarTOCBtn.addEventListener('click', function(event) {\n  event.stopPropagation()\n  if (document.body.hasAttribute('html-show-sidebar-toc')) {\n    document.body.removeAttribute('html-show-sidebar-toc')\n  } else {\n    document.body.setAttribute('html-show-sidebar-toc', true)\n  }\n})\n</script>\n      \n  \n    "}],"type":"book","url":"/book/10034"},"chapterInfo":{"id":"10034_100001","type":"chapter","name":"命令","fullPath":"D:\\personal\\文档\\passerby\\database\\memcached\\02命令.md","url":"/chapter/10034_100001","content":"\n    \n    \n      <div class=\"crossnote markdown-preview  \">\n      \n<p>将 value(数据值) 存储在指定的 key(键) 中</p>\n<pre data-role=\"codeBlock\" data-info=\"\" class=\"language-text\"><code>set key flags exptime bytes [noreply] \nvalue \n\nadd key flags exptime bytes [noreply]\nvalue\n</code></pre><p>替换已存在的 key(键) 的 value(数据值)</p>\n<pre data-role=\"codeBlock\" data-info=\"\" class=\"language-text\"><code>replace key flags exptime bytes [noreply]\nvalue\n</code></pre><p>向已存在 key(键) 的 value(数据值) 后面追加数据</p>\n<pre data-role=\"codeBlock\" data-info=\"\" class=\"language-text\"><code>append key flags exptime bytes [noreply]\nvalue\n</code></pre><p>向已存在 key(键) 的 value(数据值) 前面追加数据</p>\n<pre data-role=\"codeBlock\" data-info=\"\" class=\"language-text\"><code>prepend key flags exptime bytes [noreply]\nvalue\n</code></pre><p>用于执行一个\"检查并设置\"的操作</p>\n<pre data-role=\"codeBlock\" data-info=\"\" class=\"language-text\"><code>cas key flags exptime bytes unique_cas_token [noreply]\nvalue\n</code></pre><p>获取存储在 key(键) 中的 value(数据值)</p>\n<pre data-role=\"codeBlock\" data-info=\"\" class=\"language-text\"><code>get key\nget key1 key2 key3\n</code></pre><p>获取带有 CAS 令牌存 的 value(数据值)</p>\n<pre data-role=\"codeBlock\" data-info=\"\" class=\"language-text\"><code>gets key\ngets key1 key2 key3\n</code></pre><p>删除已存在的 key(键)</p>\n<pre data-role=\"codeBlock\" data-info=\"\" class=\"language-text\"><code>delete key [noreply]\n</code></pre><p>对已存在的 key(键) 的数字值进行自增或自减操作</p>\n<pre data-role=\"codeBlock\" data-info=\"\" class=\"language-text\"><code>incr key increment_value\ndecr key decrement_value\n</code></pre><p>返回统计信息例如 PID(进程号)、版本号、连接数  stats<br>\n显示各个 slab 中 item 的数目和存储时长 stats items<br>\n显示各个slab的信息，包括chunk的大小、数目、使用情况  stats slabs<br>\n显示所有item的大小和个数 stats sizes<br>\n清理缓存中的所有 key=&gt;value(键=&gt;值) 对 flush_all [time] [noreply]</p>\n\n      </div>\n      <div class=\"md-sidebar-toc\"></div>\n      <a id=\"sidebar-toc-btn\">≡</a>\n    \n    \n    \n    \n    \n    \n<script>\n\nvar sidebarTOCBtn = document.getElementById('sidebar-toc-btn')\nsidebarTOCBtn.addEventListener('click', function(event) {\n  event.stopPropagation()\n  if (document.body.hasAttribute('html-show-sidebar-toc')) {\n    document.body.removeAttribute('html-show-sidebar-toc')\n  } else {\n    document.body.setAttribute('html-show-sidebar-toc', true)\n  }\n})\n</script>\n      \n  \n    "}},"__N_SSG":true}