{"pageProps":{"bookInfo":{"id":"c2b386cfad89df6c7fa7e540b1cf5192","name":"WPF教程","fullPath":"F:\\passerby\\csharp\\WPF教程","chapterList":[{"id":"c2b386cfad89df6c7fa7e540b1cf5192_ef577b720dacf53df3ae49bb90bac72a","type":"chapter","name":"01WPF体系结构.md","fullPath":"F:\\passerby\\csharp\\WPF教程\\01WPF体系结构.md","url":"/chapter/c2b386cfad89df6c7fa7e540b1cf5192_ef577b720dacf53df3ae49bb90bac72a"},{"id":"c2b386cfad89df6c7fa7e540b1cf5192_4d2ac4a7f3dd2c6c1b4caf16f11c972f","type":"chapter","name":"02WPF应用程序管理.md","fullPath":"F:\\passerby\\csharp\\WPF教程\\02WPF应用程序管理.md","url":"/chapter/c2b386cfad89df6c7fa7e540b1cf5192_4d2ac4a7f3dd2c6c1b4caf16f11c972f"},{"id":"c2b386cfad89df6c7fa7e540b1cf5192_dccdac507a316e4e80df39c473c9cd53","type":"chapter","name":"03WPF窗体.md","fullPath":"F:\\passerby\\csharp\\WPF教程\\03WPF窗体.md","url":"/chapter/c2b386cfad89df6c7fa7e540b1cf5192_dccdac507a316e4e80df39c473c9cd53"},{"id":"c2b386cfad89df6c7fa7e540b1cf5192_8c8c5a68dfc06a8d598bd12da1fc7aaf","type":"chapter","name":"04WPF布局.md","fullPath":"F:\\passerby\\csharp\\WPF教程\\04WPF布局.md","url":"/chapter/c2b386cfad89df6c7fa7e540b1cf5192_8c8c5a68dfc06a8d598bd12da1fc7aaf"},{"id":"c2b386cfad89df6c7fa7e540b1cf5192_68af2be695174cb3ec4408ddfcefd90b","type":"chapter","name":"05WPF控件模型.md","fullPath":"F:\\passerby\\csharp\\WPF教程\\05WPF控件模型.md","url":"/chapter/c2b386cfad89df6c7fa7e540b1cf5192_68af2be695174cb3ec4408ddfcefd90b"},{"id":"c2b386cfad89df6c7fa7e540b1cf5192_0c85855a5aadb7719a4a7351abb288b9","type":"chapter","name":"06WPF依赖项属性和路由事件.md","fullPath":"F:\\passerby\\csharp\\WPF教程\\06WPF依赖项属性和路由事件.md","url":"/chapter/c2b386cfad89df6c7fa7e540b1cf5192_0c85855a5aadb7719a4a7351abb288b9"},{"id":"c2b386cfad89df6c7fa7e540b1cf5192_524c4971908be13b6f37367cc71ce39c","type":"chapter","name":"07WPF键盘输入、鼠标输入、焦点处理.md","fullPath":"F:\\passerby\\csharp\\WPF教程\\07WPF键盘输入、鼠标输入、焦点处理.md","url":"/chapter/c2b386cfad89df6c7fa7e540b1cf5192_524c4971908be13b6f37367cc71ce39c"},{"id":"c2b386cfad89df6c7fa7e540b1cf5192_8e3e067e78e962ea24d6868bfe119d70","type":"chapter","name":"08WPF命令.md","fullPath":"F:\\passerby\\csharp\\WPF教程\\08WPF命令.md","url":"/chapter/c2b386cfad89df6c7fa7e540b1cf5192_8e3e067e78e962ea24d6868bfe119d70"},{"id":"c2b386cfad89df6c7fa7e540b1cf5192_30dfa04cc943d72e072ca2137a7305e4","type":"chapter","name":"09WPF资源.md","fullPath":"F:\\passerby\\csharp\\WPF教程\\09WPF资源.md","url":"/chapter/c2b386cfad89df6c7fa7e540b1cf5192_30dfa04cc943d72e072ca2137a7305e4"},{"id":"c2b386cfad89df6c7fa7e540b1cf5192_21dc9b2382d63bf02f951b51778d8b5c","type":"chapter","name":"10WPF样式与模板.md","fullPath":"F:\\passerby\\csharp\\WPF教程\\10WPF样式与模板.md","url":"/chapter/c2b386cfad89df6c7fa7e540b1cf5192_21dc9b2382d63bf02f951b51778d8b5c"},{"id":"c2b386cfad89df6c7fa7e540b1cf5192_905a7533a2c0d9bb42e08852ce81a13c","type":"chapter","name":"11WPF更换主题.md","fullPath":"F:\\passerby\\csharp\\WPF教程\\11WPF更换主题.md","url":"/chapter/c2b386cfad89df6c7fa7e540b1cf5192_905a7533a2c0d9bb42e08852ce81a13c"},{"id":"c2b386cfad89df6c7fa7e540b1cf5192_04078b526541a1e84bc17d6f367ed1bb","type":"chapter","name":"12WPF数据绑定.md","fullPath":"F:\\passerby\\csharp\\WPF教程\\12WPF数据绑定.md","url":"/chapter/c2b386cfad89df6c7fa7e540b1cf5192_04078b526541a1e84bc17d6f367ed1bb"},{"id":"c2b386cfad89df6c7fa7e540b1cf5192_0789e3dd7dcfe7a364b09978ebf0c5ce","type":"chapter","name":"13WPF基本图形.md","fullPath":"F:\\passerby\\csharp\\WPF教程\\13WPF基本图形.md","url":"/chapter/c2b386cfad89df6c7fa7e540b1cf5192_0789e3dd7dcfe7a364b09978ebf0c5ce"},{"id":"c2b386cfad89df6c7fa7e540b1cf5192_f9e2cf299b43fd1ed1ce78a44fb8e17c","type":"chapter","name":"14WPFBrush.md","fullPath":"F:\\passerby\\csharp\\WPF教程\\14WPFBrush.md","url":"/chapter/c2b386cfad89df6c7fa7e540b1cf5192_f9e2cf299b43fd1ed1ce78a44fb8e17c"}],"title":"08WPF命令","type":"book","url":"/book/c2b386cfad89df6c7fa7e540b1cf5192","content":"\n    \n    \n      <div class=\"crossnote markdown-preview  \">\n      \n<h1 id=\"wpf命令\">WPF命令 </h1>\n<blockquote>\n<p>WPF中的命令路由与事件路由是两个很让初学者头痛的概念，对于命令路由可以理解为，系统（WPF）定义了一系列的操作，在应用程序中可以直接使用<br>\nWPF 中的路由命令模型可以分为四个主要概念：命令、命令源、命令目标以及命令绑定</p>\n</blockquote>\n<h2 id=\"示例\">示例 </h2>\n<pre data-role=\"codeBlock\" data-info=\"xml\" class=\"language-xml xml\"><code> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid.RowDefinitions</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>RowDefinition</span> <span class=\"token attr-name\">Height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>23<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>RowDefinition</span> <span class=\"token punctuation\">/&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid.RowDefinitions</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Menu</span> <span class=\"token attr-name\">Grid.Row</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Grid.Column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>MenuItem</span> <span class=\"token attr-name\">Header</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Edit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>MenuItem</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>menuCopy<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Header</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Copy<span class=\"token punctuation\">\"</span></span> \n                <span class=\"token attr-name\">Command</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ApplicationCommands.Copy<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>MenuItem</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>menuCut<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Header</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Cut<span class=\"token punctuation\">\"</span></span> \n                <span class=\"token attr-name\">Command</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ApplicationCommands.Cut<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>MenuItem</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>menuPaste<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Header</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Paste<span class=\"token punctuation\">\"</span></span> \n                <span class=\"token attr-name\">Command</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ApplicationCommands.Paste<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>MenuItem</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Menu</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>TextBox</span> <span class=\"token attr-name\">Grid.Row</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Grid.Column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mainText<span class=\"token punctuation\">\"</span></span> \n        <span class=\"token attr-name\">TextWrapping</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Wrap<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">AcceptsReturn</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>True<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre><ul>\n<li>命令是要执行的操作。在本例中命令为ApplicationCommands.Copy、Cut、Paste</li>\n<li>命令源是调用命令的对象。 在本例中命令源为三个MenuItem控件</li>\n<li>命令目标是在其上执行命令的对象。 在本例中命令目标是mainText这个TextBox文本框</li>\n<li>命令绑定是将命令逻辑映射到命令的对象。 在本例中命令绑定到系统定义的对于文本框的“复制”、“剪切”、“粘贴”操作、</li>\n</ul>\n<p><img src=\"/assets/17362527179300108.png\" alt=\"四者的关系依赖图\"></p>\n<h3 id=\"命令\">命令 </h3>\n<blockquote>\n<p>WPF 中的命令是通过实现 ICommand 接口来创建的。ICommand 公开两个方法（Execute 和 CanExecute）和一个事件 (CanExecuteChanged)</p>\n</blockquote>\n<h3 id=\"wpf已封装的命令类\">WPF已封装的命令类 </h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">命令类</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">ApplicationCommands</td>\n<td style=\"text-align:left\">Close、Cut、Copy、Paste、Save、Print</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">NavigationCommands</td>\n<td style=\"text-align:left\">BrowseForward、BrowseBack、Zoom、Search</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">EditingCommands</td>\n<td style=\"text-align:left\">AlignXXX、MoveXXX、SelectXXX</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">MediaCommands</td>\n<td style=\"text-align:left\">Play、Pause、NextTrack、IncreaseVolume、Record、Stop</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">ComponentCommands</td>\n<td style=\"text-align:left\">MoveXXX、SelectXXX、ScrollXXX、ExtendSelectionXXX</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"命令源\">命令源 </h3>\n<blockquote>\n<p>命令源是调用命令的对象。例如，MenuItem、Button 和 KeyGesture 就是命令源。<br>\nWPF 中的命令源通常实现 ICommandSource 接口。 ICommandSource 公开三个属性：Command、CommandTarget 和 CommandParameter</p>\n</blockquote>\n<h3 id=\"命令目标\">命令目标 </h3>\n<blockquote>\n<p>命令目标是在其上执行命令的元素。对于 RoutedCommand 而言，命令目标是 Executed 和 CanExecute 的路由的起始元素。前面已提到，在 WPF 中，ICommandSource 上的 CommandTarget 属性只有在 ICommand 是一个 RoutedCommand 时才适用。如果在 ICommandSource 上设置了 CommandTarget，而对应的命令不是 RoutedCommand，将会忽略命令目标。<br>\n命令源可以显式设置命令目标。如果未定义命令目标，则具有键盘焦点的元素将用作命令目标。将具有键盘焦点的元素用作命令目标的一个好处是，应用程序开0发人员可以使用同一个命令源在多个目标上调用命令，而不必跟踪命令目标</p>\n</blockquote>\n<h3 id=\"命令绑定\">命令绑定 </h3>\n<blockquote>\n<p>CommandBinding 将一个命令与实现该命令的事件处理程序关联。<br>\nCommandBinding 类包含一个 Command 属性以及 PreviewExecuted、Executed、PreviewCanExecute 和 CanExecute 事件。<br>\nCommand 是 CommandBinding 要与之关联的命令。附加到 PreviewExecuted 和 Executed 事件的事件处理程序实现命令逻辑。附加到 PreviewCanExecute 和 CanExecute 事件的事件处理程序确定命令是否可以在当前命令目标上执行。</p>\n</blockquote>\n\n      </div>\n      <div class=\"md-sidebar-toc\">\n<div class=\"md-toc\">\n<details style=\"padding:0;;padding-left:0px;\" open=\"\">\n        <summary class=\"md-toc-link-wrapper\">\n          <a href=\"#wpf命令\" class=\"md-toc-link\"><p>WPF命令</p>\n</a>\n          </summary>\n        <div>\n          <details style=\"padding:0;;padding-left:24px;\" open=\"\">\n        <summary class=\"md-toc-link-wrapper\">\n          <a href=\"#示例\" class=\"md-toc-link\"><p>示例</p>\n</a>\n          </summary>\n        <div>\n          <div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#命令\" class=\"md-toc-link\">\n            <p>命令</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#wpf已封装的命令类\" class=\"md-toc-link\">\n            <p>WPF已封装的命令类</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#命令源\" class=\"md-toc-link\">\n            <p>命令源</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#命令目标\" class=\"md-toc-link\">\n            <p>命令目标</p>\n\n          </a></div><div class=\"md-toc-link-wrapper\" style=\"padding:0;;display:list-item;list-style:square;margin-left:42px\">\n          <a href=\"#命令绑定\" class=\"md-toc-link\">\n            <p>命令绑定</p>\n\n          </a></div>\n        </div>\n      </details>\n    \n        </div>\n      </details>\n    \n</div>\n</div>\n      <a id=\"sidebar-toc-btn\">≡</a>\n    \n    \n    \n    \n    \n    \n<script>\n\nvar sidebarTOCBtn = document.getElementById('sidebar-toc-btn')\nsidebarTOCBtn.addEventListener('click', function(event) {\n  event.stopPropagation()\n  if (document.body.hasAttribute('html-show-sidebar-toc')) {\n    document.body.removeAttribute('html-show-sidebar-toc')\n  } else {\n    document.body.setAttribute('html-show-sidebar-toc', true)\n  }\n})\n</script>\n      \n  \n    "},"title":"08WPF命令"},"__N_SSG":true}